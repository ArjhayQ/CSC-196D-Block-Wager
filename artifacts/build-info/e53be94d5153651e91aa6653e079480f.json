{"id":"e53be94d5153651e91aa6653e079480f","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/blackjack.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.8.20 <0.9.0;\r\n\r\n// BlackJack.sol\r\n\r\n//////////////////////////////////\r\n// RULES:\r\n//////////////////////////////////\r\n// * Player can either double down or split, player cannot split then double down and vice versa.\r\n// * Player cannot split then split again or double down twice.\r\n// * Player who splits Aces can receive only one more additional card on a hand.\r\n// * Dealer must Hit on and up to 16 and Stand on 17.\r\n// * Aces are high unless card total is already greater than 11.\r\n// * Blackjack payout is 3:2\r\n// * No surrender.\r\n///////////////////////////////////\r\n\r\n//import \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\n\r\n\r\n/**\r\n * @title BlackJack\r\n * @dev Smart contract game of Blackjack that can be deployed on the blockchain.\r\n */\r\n \r\ncontract BlackJack {\r\n    //using SafeMath for uint256;\r\n\r\n    struct Game {\r\n\r\n        uint256 Id;\r\n        address Player;\r\n        \r\n        uint256 SafeBalance;\r\n        uint256 OriginalBalance;\r\n        uint256 SplitCounter;\r\n        uint256 GamesPlayed;\r\n\r\n        uint256 PlayerBet;\r\n        uint256 InsuranceBet;\r\n        uint256 PlayerCard1;\r\n        uint256 PlayerCard2;\r\n        uint256 PlayerNewCard;\r\n        uint256 PlayerCardTotal;\r\n        uint256 PlayerSplitTotal;\r\n\r\n        uint256 DealerCard1;\r\n        uint256 DealerCard2;\r\n        uint256 DealerNewCard;\r\n        uint256 DealerCardTotal;\r\n\r\n        bool CanDoubleDown;\r\n        bool CanInsure;\r\n        bool CanSplit;\r\n        bool IsSplitting;\r\n        bool IsSoftHand;\r\n\r\n        bool IsRoundInProgress;\r\n        \r\n        string DealerMsg;\r\n    }\r\n\r\n    uint256 constant private _ethDepositLowLimit = 1000 gwei;\r\n    uint256 constant private _ethDepositHighLimit = 10 ether;\r\n\r\n    uint256 constant private _ethBetLowLimit = 100 gwei;\r\n    uint256 constant private _ethBetHighLimit = 1 ether; // 1000000000000000000 wei\r\n\r\n    uint256 private _rngCounter;\r\n\r\n    uint256 private _indexCounter;\r\n\r\n    address immutable private _owner;\r\n\r\n    mapping(address => uint256) private _currentPlayersToGameIdMap;\r\n    mapping(uint256 => Game) private _idsToGameMap;\r\n\r\n    /////////////////////////////////////////////////////////////////\r\n\r\n    // ERROR LOG GLOSSARY:\r\n    // * INV = Invalid. \r\n    // * DNE = Does Not Exist.\r\n    // * CCF = Cannot Call Function.\r\n    // * INS_Funds = Insufficient Funds.\r\n    // * x_Only = Only x can call function.\r\n    // * Deposit_Limit = Ether deposit limit not reached or passed.\r\n    // * Bet_Limit = Ether bet limit not reached or passed.\r\n\r\n    //////////////////////////////////////////////////////////////////\r\n\r\n    \r\n    /**\r\n     * @dev Event Logging\r\n     */\r\n    event StartNewGameEvent(uint256 indexed GameId, address indexed Player, uint256 indexed Amount);\r\n    event CashOutEvent(uint256 indexed GameId, address indexed Player, uint256 indexed Amount);\r\n    event BeforeValueTransferEvent(uint256 indexed GameId, address indexed Player, uint256 indexed Amount);\r\n    event AfterValueTransferEvent(address indexed Player);\r\n    \r\n    /**\r\n     * @dev Modifiers\r\n     */\r\n    modifier IsValidAddr() {\r\n        require(msg.sender != address(0x0), \"Address_INV\");\r\n        _;\r\n    }\r\n    \r\n    /**\r\n     * @dev Constructor\r\n     */\r\n    constructor () {\r\n        \r\n        _rngCounter = 1;\r\n        _indexCounter = 1;\r\n\r\n        _owner = msg.sender;\r\n    }\r\n    \r\n    /**\r\n     * @dev Fallback\r\n     */\r\n    fallback () IsValidAddr external {\r\n        revert(\"Function_DNE.\");\r\n    }\r\n\r\n    /**\r\n     * @dev Recieve\r\n     */\r\n    receive () IsValidAddr external payable {\r\n        // Players must use StartNewGame function to pay\r\n        revert(\"Please use StartNewGame Function to pay contract.\");\r\n    }\r\n    \r\n    /**\r\n     * @dev StartNewGame - Starts a new game with msg.sender's address registered as player.\r\n     */\r\n    function StartNewGame() external payable {\r\n        \r\n        require(_currentPlayersToGameIdMap[msg.sender] == 0, \"ExistingPlayer_CCF\"); // Players in an existing game cannot start a new game\r\n        require(msg.value > _ethDepositLowLimit && msg.value <= _ethDepositHighLimit, \"Deposit_Limit\"); // Ensure deposit is within Limits\r\n\r\n        Game memory game;\r\n\r\n        game.Id = _indexCounter;\r\n\r\n        game.SafeBalance += msg.value;\r\n        game.OriginalBalance += msg.value;\r\n        \r\n        game.Player = msg.sender;\r\n        \r\n        game.DealerMsg = \"Contract Paid.\";\r\n\r\n        _indexCounter++;\r\n\r\n        _idsToGameMap[game.Id] = game;\r\n        _currentPlayersToGameIdMap[msg.sender] = game.Id;\r\n\r\n        emit StartNewGameEvent(game.Id, game.Player, game.OriginalBalance);\r\n    }\r\n    \r\n    /**\r\n     * @dev PlaceBet - Begins a new game round.\r\n     * @param bet Amount to bet to start a new round 100 GWei < bet < 1 Ether.\r\n     */\r\n    function PlaceBet(uint256 bet) IsValidAddr public {\r\n\r\n        require(_currentPlayersToGameIdMap[msg.sender] != 0, \"Game_DNE\");\r\n\r\n        Game storage game = _idsToGameMap[_currentPlayersToGameIdMap[msg.sender]];\r\n\r\n        require(!game.IsRoundInProgress, \"IsNewRound_Only\");\r\n        require(bet >= _ethBetLowLimit && bet <= _ethBetHighLimit, \"Bet_Limit\"); // Ensure bet is within limits\r\n        require(bet > 0 && bet <= game.SafeBalance, \"INS_Funds\"); // Ensure player can afford bet\r\n        \r\n        game.SafeBalance -= bet; // Update balance: remove bet\r\n        \r\n        if(game.CanDoubleDown || game.CanSplit) {\r\n            game.PlayerBet += bet;\r\n        } else {\r\n            game.PlayerBet = bet;\r\n        }\r\n        \r\n        game.IsRoundInProgress = true; // Start round\r\n        \r\n        game.GamesPlayed++; // Update game counter\r\n        \r\n        // Only deal cards if this is not a Double Down, Split or Insurance bet\r\n        if(game.CanDoubleDown || game.CanSplit) {\r\n            game.DealerMsg = \"Bet Placed.\";\r\n        } else {\r\n\r\n           DealCards(game);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev DealCards\r\n     * @param game Ongoing game to store game state after dealing cards.\r\n     */\r\n    function DealCards(Game storage game) private {\r\n        \r\n        // Clear any previous hands\r\n        game.PlayerCard1 = 0;\r\n        game.PlayerCard2 = 0;\r\n        game.PlayerNewCard = 0;\r\n        game.PlayerCardTotal = 0;\r\n        game.PlayerSplitTotal = 0;\r\n        game.DealerCard1 = 0;\r\n        game.DealerCard2 = 0;\r\n        game.DealerNewCard = 0;\r\n        game.DealerCardTotal = 0;\r\n        game.SplitCounter = 0;\r\n        game.InsuranceBet = 0;\r\n        game.IsSoftHand = false;\r\n        \r\n        // Player draws card 1\r\n        game.PlayerCard1 = GetCard();\r\n        if(game.PlayerCard1 == 1) {\r\n            game.PlayerCard1 = 11; // Ace\r\n            game.IsSoftHand = true;\r\n        }\r\n        \r\n        // Dealer draws card 1\r\n        game.DealerCard1 = GetCard();\r\n        \r\n        // Player draws card 2\r\n        game.PlayerCard2 = GetCard();\r\n        if(game.PlayerCard2 == 1 && game.PlayerCard1 < 11) {\r\n            game.PlayerCard2 = 11; // Ace\r\n            game.IsSoftHand = true;\r\n        }\r\n        \r\n        // Player card total\r\n        game.PlayerCardTotal = game.PlayerCard1 + game.PlayerCard2;\r\n        \r\n        // Offer insurance\r\n        if(game.DealerCard1 == 1) {\r\n            game.DealerCard1 = 11;\r\n            game.CanInsure = true;\r\n        }\r\n        \r\n        // Dealer's total\r\n        game.DealerCardTotal = game.DealerCard1 + game.DealerCard2;\r\n        \r\n        // BlackJack - Natural\r\n        if(game.PlayerCardTotal == 21) {\r\n            // There might be a standoff\r\n            if(game.DealerCard1 == 10) {\r\n                // Draw dealer's second card\r\n                game.DealerCard2 = GetCard();\r\n                // Ace is always 11 in this case\r\n                if(game.DealerCard2 == 1) \r\n                    game.DealerCard2 = 11;\r\n                \r\n                game.DealerCardTotal = game.DealerCard1 + game.DealerCard2;\r\n            }\r\n            \r\n            // Choose winner\r\n            if(game.DealerCardTotal == game.PlayerCardTotal) {\r\n                game.DealerMsg = \"StandOff!\";\r\n                game.SafeBalance += game.PlayerBet; // Update balance: bet\r\n            } else {\r\n                game.DealerMsg = \"BlackJack! Player Wins.\";\r\n                game.SafeBalance += ((game.PlayerBet * 2) + (game.PlayerBet / 2)); //update balance: bet * 2.5 = original bet * 2 + bet * 0.5\r\n            }\r\n\r\n            game.IsRoundInProgress = false;\r\n        } else {\r\n            // Normal turn\r\n            if(game.CanInsure) {\r\n                game.DealerMsg = \"Player's Turn. Want Insurance?\";\r\n            } else {\r\n                game.DealerMsg = \"Player's Turn.\";\r\n            }\r\n        }\r\n        \r\n        // Split\r\n        if(game.PlayerCard1 == game.PlayerCard2) {\r\n            if(game.CanInsure)\r\n                game.DealerMsg = \"Player's Turn. Want Insurance? Player can Split.\";\r\n            else\r\n                game.DealerMsg = \"Player's Turn. Player can Split.\";\r\n            \r\n            game.CanSplit = true;\r\n        }\r\n        \r\n        // Double down - 9 or 10 or 11\r\n        if(game.PlayerCardTotal == 9 || game.PlayerCardTotal == 10 || game.PlayerCardTotal == 11) {\r\n            if(game.CanInsure) {\r\n                game.DealerMsg = \"Player's Turn. Want Insurance? Player can Double Down.\";\r\n                if(game.CanSplit)\r\n                    game.DealerMsg = \"Player's Turn. Want Insurance? Player can Split or Double Down.\";\r\n            } else {\r\n                game.DealerMsg = \"Player's Turn. Player can Double Down.\";\r\n                if(game.CanSplit)\r\n                    game.DealerMsg = \"Player's Turn. Player can Split or Double Down.\";\r\n            }\r\n            game.CanDoubleDown = true;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev Hit - Can only be called by player in an ongoing game.\r\n     */\r\n    function Hit() IsValidAddr external {\r\n        \r\n        require(_currentPlayersToGameIdMap[msg.sender] != 0, \"Game_DNE\");\r\n\r\n        Game storage game = _idsToGameMap[_currentPlayersToGameIdMap[msg.sender]];\r\n        require(game.IsRoundInProgress, \"OnPlayerTurn_Only\");\r\n\r\n        game.CanDoubleDown = false; // Remove chance to double\r\n        game.CanSplit = false; // Remove chance to split\r\n        game.CanInsure = false; // Remove Insurance chance\r\n        \r\n        game.PlayerNewCard = GetCard();\r\n\r\n        if(game.PlayerNewCard == 1 && game.PlayerCardTotal < 11) {\r\n            // Ace is 1 unless Player has a total less than 11\r\n            game.PlayerNewCard = 11;\r\n            game.IsSoftHand = true;\r\n        }   \r\n        \r\n        if(game.IsSplitting) {\r\n            // Update split total on 1st round during split\r\n            game.DealerMsg = \"Player's Turn.\";\r\n            game.PlayerSplitTotal += game.PlayerNewCard;\r\n\r\n            if(game.IsSoftHand && game.PlayerSplitTotal > 21) {\r\n                game.PlayerSplitTotal -= 10;\r\n                game.IsSoftHand = false;\r\n            }\r\n            \r\n            if(game.PlayerSplitTotal > 21) {\r\n                game.DealerMsg = \"Split hand complete. Player's Turn.\";\r\n                game.SplitCounter++;\r\n                game.IsSplitting = false; \r\n            }\r\n        } else {\r\n            // Choose winner for normal play or second round during split\r\n            game.PlayerCardTotal += game.PlayerNewCard;\r\n\r\n            if(game.IsSoftHand && game.PlayerCardTotal > 21){\r\n                game.PlayerCardTotal -= 10;\r\n                game.IsSoftHand = false;\r\n            }\r\n\r\n            CheckWinnerOnHit();\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     * @dev Stand - Can only be called by player in an ongoing game.\r\n     */\r\n    function Stand() IsValidAddr public {\r\n        \r\n        require(_currentPlayersToGameIdMap[msg.sender] != 0, \"Game_DNE\");\r\n\r\n        Game storage game = _idsToGameMap[_currentPlayersToGameIdMap[msg.sender]];\r\n        require(game.IsRoundInProgress, \"OnPlayerTurn_Only\");\r\n        \r\n         game.CanDoubleDown = false; // Remove chance to double\r\n        game.CanSplit = false; // Remove chance to split\r\n        game.CanInsure = false; // Remove Insurance chance\r\n\r\n        if(!game.IsSplitting) {\r\n            PlayDealerHand();\r\n        } else {\r\n            game.DealerMsg = \"Split hand complete. Player's Turn.\";\r\n            game.SplitCounter++;\r\n            game.IsSplitting = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev PlayDealerHand\r\n     */\r\n    function PlayDealerHand() private {\r\n\r\n        Game storage game = _idsToGameMap[_currentPlayersToGameIdMap[msg.sender]];\r\n\r\n        // Show Dealer Card 2\r\n        game.DealerCard2 = GetCard();\r\n        if(game.DealerCard2 == 1 && game.DealerCard1 < 11)\r\n            game.DealerCard2 = 11; // Ace\r\n        \r\n        // Update Dealer's card Total\r\n        game.DealerCardTotal = game.DealerCard1 + game.DealerCard2;       \r\n        \r\n        // Dealer must Stand on all 17s\r\n        while(game.DealerCardTotal < 17) {\r\n\r\n            game.DealerNewCard = GetCard();\r\n            if(game.DealerNewCard == 1 && game.DealerCardTotal < 11)\r\n                game.DealerNewCard = 11; // Ace\r\n            \r\n            game.DealerCardTotal += game.DealerNewCard;\r\n        }\r\n\r\n        CheckWinnerOnStand();\r\n    }\r\n    \r\n    /**\r\n     * @dev DoubleDown - Can only be called by player in an ongoing game.\r\n     */\r\n    function DoubleDown() IsValidAddr external {\r\n        \r\n        require(_currentPlayersToGameIdMap[msg.sender] != 0, \"Game_DNE\");\r\n\r\n        Game storage game = _idsToGameMap[_currentPlayersToGameIdMap[msg.sender]];\r\n        require(game.IsRoundInProgress, \"OnPlayerTurn_Only\");\r\n        require(game.CanDoubleDown, \"OnCanDoubleDownTurn_Only\");\r\n        \r\n        game.CanSplit = false; // Remove chance to split\r\n        game.CanInsure = false; // Remove Insurance chance\r\n        \r\n        game.IsRoundInProgress = false; // Pause game to place Bet\r\n        \r\n        PlaceBet(game.PlayerBet); // Place same amount as original Bet and resume game\r\n\r\n        game.CanDoubleDown = false;\r\n        \r\n        game.PlayerNewCard = GetCard(); // Deal extra card\r\n        if(game.PlayerNewCard == 1 && game.PlayerCardTotal < 11) {\r\n            game.PlayerNewCard = 11; // Ace\r\n            game.IsSoftHand = true;\r\n        }\r\n        \r\n        game.PlayerCardTotal += game.PlayerNewCard;\r\n        \r\n        // Let dealer finish hand and end round\r\n        PlayDealerHand();\r\n    }\r\n    \r\n    \r\n    /**\r\n     * @dev Split - Can only be called by player in an ongoing game.\r\n     */\r\n    function Split() IsValidAddr external {\r\n        \r\n        require(_currentPlayersToGameIdMap[msg.sender] != 0, \"Game_DNE\");\r\n\r\n        Game storage game = _idsToGameMap[_currentPlayersToGameIdMap[msg.sender]];\r\n        require(game.IsRoundInProgress, \"OnPlayerTurn_Only\");\r\n        require(game.CanSplit, \"OnCanSplitTurn_Only\");\r\n        \r\n        game.CanDoubleDown = false; // Remove chance to double\r\n        game.CanInsure = false; // Remove Insurance chance\r\n        \r\n        if(game.PlayerCard1 == 11) {\r\n            game.PlayerCardTotal = 11;\r\n            game.PlayerSplitTotal = 11;\r\n        } else {\r\n            game.PlayerCardTotal = game.PlayerCardTotal/2;\r\n            game.PlayerSplitTotal = game.PlayerCardTotal;\r\n        }\r\n\r\n        game.SplitCounter = 0;\r\n        game.IsSplitting = true;\r\n        \r\n        game.IsRoundInProgress = false; // Pause game to place bet\r\n        \r\n        PlaceBet(game.PlayerBet); // Place same amount as original bet and resume game. This doubles the current playerbet, so split bet is now bet * 0.5.\r\n        \r\n        game.CanSplit = false;\r\n        \r\n        // Player's cards are both Aces\r\n        if(game.PlayerCard1 == 11) {\r\n            game.PlayerNewCard = GetCard(); // Deal only one more card for PlayerCard1. Ace is always 1 in this case\r\n            game.PlayerSplitTotal += game.PlayerNewCard;\r\n\r\n            game.PlayerNewCard = GetCard(); // Deal only one more card for PlayerCard2. Ace is always 1 in this case\r\n            game.PlayerCardTotal += game.PlayerNewCard;\r\n            \r\n            game.IsSplitting = false;\r\n            \r\n            PlayDealerHand();\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     * @dev Insurance - Can only be called by player in an ongoing game.\r\n     */\r\n    function Insurance() IsValidAddr external {\r\n\r\n        require(_currentPlayersToGameIdMap[msg.sender] != 0, \"Game_DNE\");\r\n\r\n        Game storage game = _idsToGameMap[_currentPlayersToGameIdMap[msg.sender]];\r\n        require(game.IsRoundInProgress, \"OnPlayerTurn_Only\");\r\n        require(game.CanInsure, \"OnCanInsureTurn_Only\");\r\n        \r\n        game.InsuranceBet = game.PlayerBet / 2;\r\n\r\n        require(game.InsuranceBet > 0 && game.InsuranceBet <= game.SafeBalance, \"INS_Funds\"); // Ensure player can afford insurance bet\r\n\r\n        game.SafeBalance -= game.InsuranceBet; // Update balance: remove insurance bet\r\n        \r\n        game.DealerMsg = \"Player's Turn.\";\r\n\r\n        game.CanInsure = false;\r\n        \r\n    }\r\n    \r\n    \r\n    /**\r\n     * @dev CheckWinnerOnHit\r\n     */\r\n    function CheckWinnerOnHit() private {\r\n\r\n        Game storage game = _idsToGameMap[_currentPlayersToGameIdMap[msg.sender]];\r\n        \r\n        if(game.PlayerCardTotal > 21) { // Bust\r\n            game.DealerMsg = \"Player Bust.\";\r\n\r\n            if(game.InsuranceBet != 0) {\r\n                game.DealerCard2 = GetCard();\r\n                game.DealerCardTotal += game.DealerCard2;\r\n                \r\n                if(game.DealerCardTotal == 21)\r\n                    game.SafeBalance += (game.InsuranceBet * 2); // Update balance: insurance bet * 2\r\n            }\r\n\r\n            if(game.SplitCounter == 1) {\r\n                PlayDealerHand();\r\n            } else\r\n                game.IsRoundInProgress = false;\r\n\r\n        } else {\r\n            game.DealerMsg = \"Player's Turn.\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev CheckWinnerOnStand\r\n     */\r\n    function CheckWinnerOnStand() private {\r\n\r\n        Game storage game = _idsToGameMap[_currentPlayersToGameIdMap[msg.sender]];\r\n        \r\n        if(game.DealerCardTotal > 21) {\r\n            game.DealerMsg = \"Dealer Bust.\";\r\n            game.IsRoundInProgress = false;\r\n\r\n            if(game.SplitCounter == 1) { // split hand\r\n                if(game.PlayerCardTotal <= 21) {\r\n                    game.DealerMsg = \"Dealer Bust. Player Wins.\";\r\n                    game.SafeBalance += game.PlayerBet; // Update balance: split bet * 2 = bet    \r\n                }\r\n                \r\n                if(game.PlayerSplitTotal <= 21) {\r\n                    game.DealerMsg = string.concat(game.DealerMsg, \" Player won split hand.\");\r\n                    game.SafeBalance += game.PlayerBet; // Update balance: split bet * 2 = bet    \r\n                } else {\r\n                    game.DealerMsg = string.concat(game.DealerMsg, \" Player lost split hand.\");\r\n                }\r\n            } else { // Normal hand\r\n                game.DealerMsg = \"Dealer Bust. Player Wins.\";\r\n                game.SafeBalance += (game.PlayerBet * 2); // Update balance: bet * 2\r\n            }\r\n\r\n        } else if(game.DealerCardTotal == 21) {\r\n\r\n            game.DealerMsg = \"Dealer Wins.\";\r\n            game.IsRoundInProgress = false;\r\n\r\n            if(game.InsuranceBet != 0)\r\n                game.SafeBalance += (game.InsuranceBet * 2); // Update balance: insurance bet * 2\r\n\r\n            if(game.PlayerCardTotal == 21) { // Standoff\r\n                game.DealerMsg = \"StandOff!\";\r\n                \r\n                if(game.SplitCounter == 1)\r\n                    game.SafeBalance += (game.PlayerBet / 2); // Update balance: split bet = bet * 0.5\r\n                else\r\n                    game.SafeBalance += (game.PlayerBet); // Update balance: bet\r\n            }\r\n\r\n            if(game.SplitCounter == 1) {\r\n                if(game.PlayerSplitTotal == 21) {\r\n                    game.DealerMsg = string.concat(game.DealerMsg, \" StandOff on split hand!\");\r\n                    game.SafeBalance += (game.PlayerBet / 2); // Update balance: split bet = bet * 0.5\r\n                } else {\r\n                    game.DealerMsg = string.concat(game.DealerMsg, \" Player lost split hand.\");\r\n                }\r\n            }\r\n\r\n        } else { // game.DealerCardTotal < 21\r\n\r\n            if(game.PlayerCardTotal < 21 && (21 - game.DealerCardTotal) == (21 - game.PlayerCardTotal)) { // Standoff\r\n                game.DealerMsg = \"StandOff!\";\r\n                game.IsRoundInProgress = false;\r\n\r\n                if(game.SplitCounter == 1)\r\n                    game.SafeBalance += (game.PlayerBet / 2); // Update balance: split bet = bet * 0.5\r\n                else\r\n                    game.SafeBalance += game.PlayerBet; // Update balance: bet\r\n            } else if(game.PlayerCardTotal > 21 || (21 - game.DealerCardTotal) < (21 - game.PlayerCardTotal)) {\r\n                game.DealerMsg = \"Dealer Wins.\";\r\n                game.IsRoundInProgress = false;\r\n            } else {\r\n                game.DealerMsg = \"Player Wins.\";\r\n                game.IsRoundInProgress = false;\r\n\r\n                if(game.SplitCounter == 1)\r\n                    game.SafeBalance += game.PlayerBet; // Update balance: split bet * 2 = bet\r\n                else\r\n                    game.SafeBalance += (game.PlayerBet * 2); // Update balance: bet * 2\r\n            }\r\n\r\n            if(game.SplitCounter == 1) {\r\n                if(game.PlayerSplitTotal < 21 && (21 - game.DealerCardTotal) == (21 - game.PlayerSplitTotal)) { // Split hand: Standoff\r\n                    game.DealerMsg = string.concat(game.DealerMsg, \" StandOff on split hand!\");\r\n                    game.IsRoundInProgress = false;\r\n\r\n                    game.SafeBalance += (game.PlayerBet / 2); // Update balance: split bet = bet * 0.5\r\n                } else if(game.PlayerSplitTotal > 21 || (21 - game.DealerCardTotal) < (21 - game.PlayerSplitTotal)) {\r\n                    game.DealerMsg = string.concat(game.DealerMsg, \" Player lost split hand.\");\r\n                    game.IsRoundInProgress = false;\r\n                } else {\r\n                    game.DealerMsg = string.concat(game.DealerMsg, \" Player won split hand.\");\r\n                    game.IsRoundInProgress = false;\r\n\r\n                    game.SafeBalance += game.PlayerBet; // Update balance: split bet * 2 = bet    \r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev CashOut - Can only be called by player before or after a game round.\r\n     */\r\n    function CashOut() IsValidAddr external {\r\n        \r\n        require(_currentPlayersToGameIdMap[msg.sender] != 0, \"Game_DNE\");\r\n\r\n        Game memory game = _idsToGameMap[_currentPlayersToGameIdMap[msg.sender]];\r\n        require(!game.IsRoundInProgress, \"IsNewRound_Only\");\r\n        \r\n        uint256 tempBalance = game.SafeBalance;\r\n        if(address(this).balance >= 0 && address(this).balance < game.SafeBalance) {\r\n            tempBalance = address(this).balance;\r\n        }\r\n\r\n        assert(address(this).balance >= tempBalance);\r\n        \r\n        BeforeValueTransfer(msg.sender);\r\n\r\n        payable(msg.sender).transfer(tempBalance);\r\n\r\n        AfterValueTransfer(msg.sender);\r\n\r\n        assert(_currentPlayersToGameIdMap[msg.sender] == 0);\r\n\r\n        emit CashOutEvent(game.Id, msg.sender, tempBalance);\r\n    }\r\n\r\n    /**\r\n     * @dev BeforeValueTransfer - hook function.\r\n     * @param playerAddress Address of player to transfer value to.\r\n     */\r\n    function BeforeValueTransfer(address playerAddress) private {\r\n        // Update before transfer to prevent re-entrancy.\r\n\r\n        uint256 gameId = _idsToGameMap[_currentPlayersToGameIdMap[playerAddress]].Id;\r\n        uint256 tempBalance = _idsToGameMap[_currentPlayersToGameIdMap[playerAddress]].SafeBalance;\r\n\r\n        _currentPlayersToGameIdMap[playerAddress] = 0;\r\n        delete _idsToGameMap[_currentPlayersToGameIdMap[playerAddress]];\r\n\r\n        emit BeforeValueTransferEvent(gameId, playerAddress, tempBalance);\r\n    }\r\n\r\n    /**\r\n     * @dev AfterValueTransfer - hook function.\r\n     * @param playerAddress Address of player to transfer value to.\r\n     */\r\n    function AfterValueTransfer(address playerAddress) private {\r\n        // Ensure transfer happened as expected. If not, update again.\r\n\r\n        if(_currentPlayersToGameIdMap[playerAddress] != 0 || _idsToGameMap[_currentPlayersToGameIdMap[playerAddress]].SafeBalance != 0) {\r\n            _currentPlayersToGameIdMap[playerAddress] = 0;\r\n            delete _idsToGameMap[_currentPlayersToGameIdMap[playerAddress]];\r\n        }\r\n\r\n        emit AfterValueTransferEvent(playerAddress);\r\n    }\r\n\r\n    /**\r\n     * @dev GetCard - Get a card from the deck. 11 is Joker, 12 is Queen, 13 is King, each worth 10 points.\r\n     */\r\n    function GetCard() private returns (uint256 cardValue) {\r\n        cardValue = GenerateRandomNumber();\r\n        \r\n        // J, Q, K => 10\r\n        if(cardValue > 10)\r\n            cardValue = 10;\r\n    }\r\n\r\n    /**\r\n     * @dev GenerateRandomNumber - Generates a random number between 1 and 13 based on the previous block's timestamp and difficulty.\r\n     */\r\n    function GenerateRandomNumber() private returns (uint256 randomNumber) {\r\n        _rngCounter *= 21;\r\n        uint256 seed = (block.timestamp + block.prevrandao + _rngCounter) % 100;\r\n        randomNumber = (uint256(keccak256(abi.encodePacked(blockhash(block.number - 1), seed))) % 13 + 1);\r\n\r\n        _rngCounter++;\r\n            \r\n        // reset RNG counter to prevent unecessary large number\r\n        if(_rngCounter > 420000000)\r\n            _rngCounter = randomNumber;\r\n\r\n    }\r\n\r\n    /**\r\n     * @dev GetGame - helper function to get game info for msg.sender.\r\n     */\r\n    function GetGame() external view returns (Game memory game) {\r\n        game = _idsToGameMap[_currentPlayersToGameIdMap[msg.sender]];\r\n    }\r\n    \r\n    /**\r\n     * @dev ShowTable - helper function to display game info for msg.sender.\r\n     */\r\n    function ShowTable() external view returns (string memory DealerMessage, string memory PlayerCard1, \r\n                    string memory PlayerCard2, string memory PlayerNewCard, string memory PlayerCardTotal, string memory PlayerSplitTotal, \r\n                    string memory DealerCard1, string memory DealerCard2, string memory DealerNewCard, string memory DealerCardTotal, \r\n                    string memory PlayerBet, string memory Pot) {\r\n\r\n        Game memory game = _idsToGameMap[_currentPlayersToGameIdMap[msg.sender]];\r\n        \r\n        DealerMessage = string.concat(\" --> \", game.DealerMsg);\r\n        PlayerCard1 = string.concat(\" --> \", Strings.toString(game.PlayerCard1));\r\n        PlayerCard2 = string.concat(\" --> \", Strings.toString(game.PlayerCard2));\r\n        PlayerNewCard = string.concat(\" --> \", Strings.toString(game.PlayerNewCard));\r\n        PlayerCardTotal = string.concat(\" ------> \", Strings.toString(game.PlayerCardTotal));\r\n        PlayerSplitTotal = string.concat(\" ------> \", Strings.toString(game.PlayerSplitTotal));\r\n        DealerCard1 = string.concat(\" --> \", Strings.toString(game.DealerCard1));\r\n        DealerCard2 = string.concat(\" --> \", Strings.toString(game.DealerCard2));\r\n        DealerNewCard = string.concat(\" --> \", Strings.toString(game.DealerNewCard));\r\n        DealerCardTotal = string.concat(\" ------> \", Strings.toString(game.DealerCardTotal));\r\n        PlayerBet = string.concat(\" --> \", Strings.toString(game.PlayerBet), \" wei\");\r\n        Pot = string.concat(\" --> \", Strings.toString(game.SafeBalance), \" wei\");\r\n    }\r\n\r\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[51]},"id":52,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"125:489:0","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":51,"linearizedBaseContracts":[51],"name":"Panic","nameLocation":"665:5:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"677:36:0","text":"@dev generic / unspecified error"},"id":6,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:0","nodeType":"VariableDeclaration","scope":51,"src":"718:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":5,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"764:37:0","text":"@dev used by the assert() builtin"},"id":10,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:0","nodeType":"VariableDeclaration","scope":51,"src":"806:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":9,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"851:41:0","text":"@dev arithmetic underflow or overflow"},"id":14,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:0","nodeType":"VariableDeclaration","scope":51,"src":"897:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":13,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:0","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"950:35:0","text":"@dev division or modulo by zero"},"id":18,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:0","nodeType":"VariableDeclaration","scope":51,"src":"990:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":17,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:0","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":19,"nodeType":"StructuredDocumentation","src":"1045:30:0","text":"@dev enum conversion error"},"id":22,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:0","nodeType":"VariableDeclaration","scope":51,"src":"1080:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":21,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:0","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"1140:36:0","text":"@dev invalid encoding in storage"},"id":26,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:0","nodeType":"VariableDeclaration","scope":51,"src":"1181:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":25,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"1242:24:0","text":"@dev empty array pop"},"id":30,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:0","nodeType":"VariableDeclaration","scope":51,"src":"1271:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1325:35:0","text":"@dev array out of bounds access"},"id":34,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:0","nodeType":"VariableDeclaration","scope":51,"src":"1365:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:0","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"1423:65:0","text":"@dev resource error (too large allocation or too large array)"},"id":38,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:0","nodeType":"VariableDeclaration","scope":51,"src":"1493:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:0","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"1546:42:0","text":"@dev calling invalid internal function"},"id":42,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:0","nodeType":"VariableDeclaration","scope":51,"src":"1593:58:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":41,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:0","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":49,"nodeType":"Block","src":"1819:151:0","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:0","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:0","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:0","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:0"},"nodeType":"YulFunctionCall","src":"1868:24:0"},"nodeType":"YulExpressionStatement","src":"1868:24:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:0","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:0"},"nodeType":"YulFunctionCall","src":"1905:18:0"},"nodeType":"YulExpressionStatement","src":"1905:18:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:0","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:0","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:0"},"nodeType":"YulFunctionCall","src":"1936:18:0"},"nodeType":"YulExpressionStatement","src":"1936:18:0"}]},"evmVersion":"paris","externalReferences":[{"declaration":45,"isOffset":false,"isSlot":false,"src":"1918:4:0","valueSize":1}],"flags":["memory-safe"],"id":48,"nodeType":"InlineAssembly","src":"1829:135:0"}]},"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"1658:113:0","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":50,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:0","nodeType":"FunctionDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"code","nameLocation":"1799:4:0","nodeType":"VariableDeclaration","scope":50,"src":"1791:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":44,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:0"},"returnParameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"1819:0:0"},"scope":51,"src":"1776:194:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":52,"src":"657:1315:0","usedErrors":[],"usedEvents":[]}],"src":"99:1874:0"},"id":0},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1977],"SignedMath":[3886],"Strings":[371]},"id":372,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":53,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":55,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":372,"sourceUnit":1978,"src":"127:37:1","symbolAliases":[{"foreign":{"id":54,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"135:4:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":57,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":372,"sourceUnit":3887,"src":"165:49:1","symbolAliases":[{"foreign":{"id":56,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"173:10:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":58,"nodeType":"StructuredDocumentation","src":"216:34:1","text":" @dev String operations."},"fullyImplemented":true,"id":371,"linearizedBaseContracts":[371],"name":"Strings","nameLocation":"259:7:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":61,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:1","nodeType":"VariableDeclaration","scope":371,"src":"273:56:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":59,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:1","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":60,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":64,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:1","nodeType":"VariableDeclaration","scope":371,"src":"335:42:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":62,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:1","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"384:81:1","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":71,"name":"StringsInsufficientHexLength","nameLocation":"476:28:1","nodeType":"ErrorDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67,"mutability":"mutable","name":"value","nameLocation":"513:5:1","nodeType":"VariableDeclaration","scope":71,"src":"505:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":69,"mutability":"mutable","name":"length","nameLocation":"528:6:1","nodeType":"VariableDeclaration","scope":71,"src":"520:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":68,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:1"},"src":"470:66:1"},{"body":{"id":118,"nodeType":"Block","src":"708:561:1","statements":[{"id":117,"nodeType":"UncheckedBlock","src":"718:545:1","statements":[{"assignments":[80],"declarations":[{"constant":false,"id":80,"mutability":"mutable","name":"length","nameLocation":"750:6:1","nodeType":"VariableDeclaration","scope":117,"src":"742:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":79,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":87,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":86,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":83,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"770:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":81,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"759:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1977_$","typeString":"type(library Math)"}},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:1","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1749,"src":"759:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":85,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:1"},{"assignments":[89],"declarations":[{"constant":false,"id":89,"mutability":"mutable","name":"buffer","nameLocation":"808:6:1","nodeType":"VariableDeclaration","scope":117,"src":"794:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":88,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":94,"initialValue":{"arguments":[{"id":92,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"828:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":91,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":90,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":93,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:1"},{"assignments":[96],"declarations":[{"constant":false,"id":96,"mutability":"mutable","name":"ptr","nameLocation":"857:3:1","nodeType":"VariableDeclaration","scope":117,"src":"849:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":97,"nodeType":"VariableDeclarationStatement","src":"849:11:1"},{"AST":{"nodeType":"YulBlock","src":"899:67:1","statements":[{"nodeType":"YulAssignment","src":"917:35:1","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"928:6:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"940:2:1","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"944:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"936:3:1"},"nodeType":"YulFunctionCall","src":"936:15:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"924:3:1"},"nodeType":"YulFunctionCall","src":"924:28:1"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"917:3:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":89,"isOffset":false,"isSlot":false,"src":"928:6:1","valueSize":1},{"declaration":80,"isOffset":false,"isSlot":false,"src":"944:6:1","valueSize":1},{"declaration":96,"isOffset":false,"isSlot":false,"src":"917:3:1","valueSize":1}],"flags":["memory-safe"],"id":98,"nodeType":"InlineAssembly","src":"874:92:1"},{"body":{"id":113,"nodeType":"Block","src":"992:234:1","statements":[{"expression":{"id":101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:1","subExpression":{"id":100,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"1010:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":102,"nodeType":"ExpressionStatement","src":"1010:5:1"},{"AST":{"nodeType":"YulBlock","src":"1058:86:1","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1088:3:1"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1102:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"1109:2:1","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1098:3:1"},"nodeType":"YulFunctionCall","src":"1098:14:1"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1114:10:1"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1093:4:1"},"nodeType":"YulFunctionCall","src":"1093:32:1"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1080:7:1"},"nodeType":"YulFunctionCall","src":"1080:46:1"},"nodeType":"YulExpressionStatement","src":"1080:46:1"}]},"evmVersion":"paris","externalReferences":[{"declaration":61,"isOffset":false,"isSlot":false,"src":"1114:10:1","valueSize":1},{"declaration":96,"isOffset":false,"isSlot":false,"src":"1088:3:1","valueSize":1},{"declaration":74,"isOffset":false,"isSlot":false,"src":"1102:5:1","valueSize":1}],"flags":["memory-safe"],"id":103,"nodeType":"InlineAssembly","src":"1033:111:1"},{"expression":{"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"1161:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":107,"nodeType":"ExpressionStatement","src":"1161:11:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"1194:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"1190:21:1","trueBody":{"id":111,"nodeType":"Break","src":"1206:5:1"}}]},"condition":{"hexValue":"74727565","id":99,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":114,"nodeType":"WhileStatement","src":"979:247:1"},{"expression":{"id":115,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"1246:6:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":78,"id":116,"nodeType":"Return","src":"1239:13:1"}]}]},"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"542:90:1","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":119,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:1","nodeType":"FunctionDefinition","parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"value","nameLocation":"663:5:1","nodeType":"VariableDeclaration","scope":119,"src":"655:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:1"},"returnParameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":119,"src":"693:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":76,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:1"},"scope":371,"src":"637:632:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":144,"nodeType":"Block","src":"1445:92:1","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"1476:5:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:1","trueExpression":{"hexValue":"2d","id":133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"1522:5:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":137,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"1507:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3886_$","typeString":"type(library SignedMath)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:1","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3885,"src":"1507:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":136,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"1498:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":127,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:1","typeDescriptions":{}}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:1","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:1","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":126,"id":143,"nodeType":"Return","src":"1455:75:1"}]},"documentation":{"id":120,"nodeType":"StructuredDocumentation","src":"1275:89:1","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":145,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:1","nodeType":"FunctionDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"mutability":"mutable","name":"value","nameLocation":"1400:5:1","nodeType":"VariableDeclaration","scope":145,"src":"1393:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":121,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:1"},"returnParameters":{"id":126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":145,"src":"1430:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":124,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:1"},"scope":371,"src":"1369:168:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":164,"nodeType":"Block","src":"1716:100:1","statements":[{"id":163,"nodeType":"UncheckedBlock","src":"1726:84:1","statements":[{"expression":{"arguments":[{"id":154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"1769:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"1788:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":155,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"1776:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1977_$","typeString":"type(library Math)"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:1","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1920,"src":"1776:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":153,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[165,248,268],"referencedDeclaration":248,"src":"1757:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":152,"id":162,"nodeType":"Return","src":"1750:49:1"}]}]},"documentation":{"id":146,"nodeType":"StructuredDocumentation","src":"1543:94:1","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":165,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:1","nodeType":"FunctionDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"value","nameLocation":"1671:5:1","nodeType":"VariableDeclaration","scope":165,"src":"1663:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":147,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:1"},"returnParameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":165,"src":"1701:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":150,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:1"},"scope":371,"src":"1642:174:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":247,"nodeType":"Block","src":"2029:435:1","statements":[{"assignments":[176],"declarations":[{"constant":false,"id":176,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:1","nodeType":"VariableDeclaration","scope":247,"src":"2039:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":178,"initialValue":{"id":177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2060:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:1"},{"assignments":[180],"declarations":[{"constant":false,"id":180,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:1","nodeType":"VariableDeclaration","scope":247,"src":"2075:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":179,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":189,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":184,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"2111:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":181,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:1"},{"expression":{"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":190,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"2132:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":192,"indexExpression":{"hexValue":"30","id":191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":195,"nodeType":"ExpressionStatement","src":"2132:15:1"},{"expression":{"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":196,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"2157:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":198,"indexExpression":{"hexValue":"31","id":197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":201,"nodeType":"ExpressionStatement","src":"2157:15:1"},{"body":{"id":230,"nodeType":"Block","src":"2227:95:1","statements":[{"expression":{"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":216,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"2241:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":218,"indexExpression":{"id":217,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"2248:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":219,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"2253:10:1","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":223,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":220,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"2264:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:1","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":225,"nodeType":"ExpressionStatement","src":"2241:40:1"},{"expression":{"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":226,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"2295:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":229,"nodeType":"ExpressionStatement","src":"2295:16:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":210,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"2215:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":231,"initializationExpression":{"assignments":[203],"declarations":[{"constant":false,"id":203,"mutability":"mutable","name":"i","nameLocation":"2195:1:1","nodeType":"VariableDeclaration","scope":231,"src":"2187:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":202,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":209,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":205,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"2203:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:1"},"loopExpression":{"expression":{"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:1","subExpression":{"id":213,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"2224:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":215,"nodeType":"ExpressionStatement","src":"2222:3:1"},"nodeType":"ForStatement","src":"2182:140:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":232,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"2335:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":241,"nodeType":"IfStatement","src":"2331:96:1","trueBody":{"id":240,"nodeType":"Block","src":"2352:75:1","statements":[{"errorCall":{"arguments":[{"id":236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2402:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":237,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"2409:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":235,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2373:28:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":239,"nodeType":"RevertStatement","src":"2366:50:1"}]}},{"expression":{"arguments":[{"id":244,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"2450:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":242,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:1","typeDescriptions":{}}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":174,"id":246,"nodeType":"Return","src":"2436:21:1"}]},"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"1822:112:1","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":248,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:1","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"value","nameLocation":"1968:5:1","nodeType":"VariableDeclaration","scope":248,"src":"1960:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"length","nameLocation":"1983:6:1","nodeType":"VariableDeclaration","scope":248,"src":"1975:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:1"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":248,"src":"2014:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":172,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:1"},"scope":371,"src":"1939:525:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":267,"nodeType":"Block","src":"2696:75:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":261,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"2741:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":259,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:1","typeDescriptions":{}}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{}}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":264,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"2749:14:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":256,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[165,248,268],"referencedDeclaration":248,"src":"2713:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":255,"id":266,"nodeType":"Return","src":"2706:58:1"}]},"documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"2470:148:1","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":268,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:1","nodeType":"FunctionDefinition","parameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"mutability":"mutable","name":"addr","nameLocation":"2652:4:1","nodeType":"VariableDeclaration","scope":268,"src":"2644:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":250,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:1"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":268,"src":"2681:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":253,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:1"},"scope":371,"src":"2623:148:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":332,"nodeType":"Block","src":"3028:642:1","statements":[{"assignments":[277],"declarations":[{"constant":false,"id":277,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:1","nodeType":"VariableDeclaration","scope":332,"src":"3038:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":276,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":284,"initialValue":{"arguments":[{"arguments":[{"id":281,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"3078:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":280,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[165,248,268],"referencedDeclaration":268,"src":"3066:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":278,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:1","typeDescriptions":{}}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:1"},{"assignments":[286],"declarations":[{"constant":false,"id":286,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:1","nodeType":"VariableDeclaration","scope":332,"src":"3169:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":287,"nodeType":"VariableDeclarationStatement","src":"3169:17:1"},{"AST":{"nodeType":"YulBlock","src":"3221:78:1","statements":[{"nodeType":"YulAssignment","src":"3235:54:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3252:2:1","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3270:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"3278:4:1","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:1"},"nodeType":"YulFunctionCall","src":"3266:17:1"},{"kind":"number","nodeType":"YulLiteral","src":"3285:2:1","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3256:9:1"},"nodeType":"YulFunctionCall","src":"3256:32:1"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3248:3:1"},"nodeType":"YulFunctionCall","src":"3248:41:1"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3235:9:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":277,"isOffset":false,"isSlot":false,"src":"3270:6:1","valueSize":1},{"declaration":286,"isOffset":false,"isSlot":false,"src":"3235:9:1","valueSize":1}],"flags":["memory-safe"],"id":288,"nodeType":"InlineAssembly","src":"3196:103:1"},{"body":{"id":325,"nodeType":"Block","src":"3342:291:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":299,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"3448:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:1","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:1","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":306,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3477:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":308,"indexExpression":{"id":307,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"3484:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":304,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:1","typeDescriptions":{}}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:1","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":320,"nodeType":"IfStatement","src":"3444:150:1","trueBody":{"id":319,"nodeType":"Block","src":"3494:100:1","statements":[{"expression":{"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":313,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3562:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":315,"indexExpression":{"id":314,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"3569:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":318,"nodeType":"ExpressionStatement","src":"3562:17:1"}]}},{"expression":{"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":321,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"3607:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":324,"nodeType":"ExpressionStatement","src":"3607:15:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":293,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"3330:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":326,"initializationExpression":{"assignments":[290],"declarations":[{"constant":false,"id":290,"mutability":"mutable","name":"i","nameLocation":"3322:1:1","nodeType":"VariableDeclaration","scope":326,"src":"3314:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":292,"initialValue":{"hexValue":"3431","id":291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:1","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:1"},"loopExpression":{"expression":{"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:1","subExpression":{"id":296,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"3339:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":298,"nodeType":"ExpressionStatement","src":"3337:3:1"},"nodeType":"ForStatement","src":"3309:324:1"},{"expression":{"arguments":[{"id":329,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3656:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":327,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:1","typeDescriptions":{}}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":275,"id":331,"nodeType":"Return","src":"3642:21:1"}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"2777:165:1","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":333,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:1","nodeType":"FunctionDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"addr","nameLocation":"2984:4:1","nodeType":"VariableDeclaration","scope":333,"src":"2976:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:1"},"returnParameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":333,"src":"3013:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":273,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:1"},"scope":371,"src":"2947:723:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"3825:104:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":345,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"3848:1:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":343,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:1","typeDescriptions":{}}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:1","memberName":"length","nodeType":"MemberAccess","src":"3842:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":350,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"3867:1:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":348,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:1","typeDescriptions":{}}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:1","memberName":"length","nodeType":"MemberAccess","src":"3861:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":357,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"3896:1:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":355,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:1","typeDescriptions":{}}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":354,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3880:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":363,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"3919:1:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":361,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:1","typeDescriptions":{}}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":360,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3903:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":342,"id":368,"nodeType":"Return","src":"3835:87:1"}]},"documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"3676:66:1","text":" @dev Returns true if the two strings are equal."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:1","nodeType":"FunctionDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"mutability":"mutable","name":"a","nameLocation":"3776:1:1","nodeType":"VariableDeclaration","scope":370,"src":"3762:15:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":335,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"b","nameLocation":"3793:1:1","nodeType":"VariableDeclaration","scope":370,"src":"3779:15:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":337,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:1"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"3819:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":340,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:1"},"scope":371,"src":"3747:182:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":372,"src":"251:3680:1","usedErrors":[71],"usedEvents":[]}],"src":"101:3831:1"},"id":1},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1977],"Panic":[51],"SafeCast":[3742]},"id":1978,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":373,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":375,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1978,"sourceUnit":52,"src":"129:35:2","symbolAliases":[{"foreign":{"id":374,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"137:5:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":377,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1978,"sourceUnit":3743,"src":"165:40:2","symbolAliases":[{"foreign":{"id":376,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"173:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":378,"nodeType":"StructuredDocumentation","src":"207:73:2","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1977,"linearizedBaseContracts":[1977],"name":"Math","nameLocation":"289:4:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":383,"members":[{"id":379,"name":"Floor","nameLocation":"324:5:2","nodeType":"EnumValue","src":"324:5:2"},{"id":380,"name":"Ceil","nameLocation":"367:4:2","nodeType":"EnumValue","src":"367:4:2"},{"id":381,"name":"Trunc","nameLocation":"409:5:2","nodeType":"EnumValue","src":"409:5:2"},{"id":382,"name":"Expand","nameLocation":"439:6:2","nodeType":"EnumValue","src":"439:6:2"}],"name":"Rounding","nameLocation":"305:8:2","nodeType":"EnumDefinition","src":"300:169:2"},{"body":{"id":414,"nodeType":"Block","src":"677:140:2","statements":[{"id":413,"nodeType":"UncheckedBlock","src":"687:124:2","statements":[{"assignments":[396],"declarations":[{"constant":false,"id":396,"mutability":"mutable","name":"c","nameLocation":"719:1:2","nodeType":"VariableDeclaration","scope":413,"src":"711:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":395,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":400,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":397,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"723:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":398,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"727:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":401,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"746:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":402,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"750:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":408,"nodeType":"IfStatement","src":"742:28:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":406,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":394,"id":407,"nodeType":"Return","src":"753:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":410,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"798:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":394,"id":412,"nodeType":"Return","src":"784:16:2"}]}]},"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"475:106:2","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":415,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:2","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"a","nameLocation":"610:1:2","nodeType":"VariableDeclaration","scope":415,"src":"602:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"b","nameLocation":"621:1:2","nodeType":"VariableDeclaration","scope":415,"src":"613:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:2"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"success","nameLocation":"652:7:2","nodeType":"VariableDeclaration","scope":415,"src":"647:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":390,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"result","nameLocation":"669:6:2","nodeType":"VariableDeclaration","scope":415,"src":"661:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:2"},"scope":1977,"src":"586:231:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":442,"nodeType":"Block","src":"1028:113:2","statements":[{"id":441,"nodeType":"UncheckedBlock","src":"1038:97:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":427,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"1066:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":428,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"1070:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":434,"nodeType":"IfStatement","src":"1062:28:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":432,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":426,"id":433,"nodeType":"Return","src":"1073:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":436,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"1118:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":437,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"1122:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":439,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":426,"id":440,"nodeType":"Return","src":"1104:20:2"}]}]},"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"823:109:2","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":443,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:2","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"a","nameLocation":"961:1:2","nodeType":"VariableDeclaration","scope":443,"src":"953:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":417,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"b","nameLocation":"972:1:2","nodeType":"VariableDeclaration","scope":443,"src":"964:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:2"},"returnParameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"success","nameLocation":"1003:7:2","nodeType":"VariableDeclaration","scope":443,"src":"998:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":422,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"result","nameLocation":"1020:6:2","nodeType":"VariableDeclaration","scope":443,"src":"1012:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:2"},"scope":1977,"src":"937:204:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":484,"nodeType":"Block","src":"1355:417:2","statements":[{"id":483,"nodeType":"UncheckedBlock","src":"1365:401:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":455,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"1623:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":462,"nodeType":"IfStatement","src":"1619:28:2","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":460,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":454,"id":461,"nodeType":"Return","src":"1631:16:2"}},{"assignments":[464],"declarations":[{"constant":false,"id":464,"mutability":"mutable","name":"c","nameLocation":"1669:1:2","nodeType":"VariableDeclaration","scope":483,"src":"1661:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":468,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":465,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"1673:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":466,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"1677:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":469,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"1696:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"1700:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":472,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"1705:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":478,"nodeType":"IfStatement","src":"1692:33:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":454,"id":477,"nodeType":"Return","src":"1708:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":480,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"1753:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":454,"id":482,"nodeType":"Return","src":"1739:16:2"}]}]},"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"1147:112:2","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":485,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:2","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"a","nameLocation":"1288:1:2","nodeType":"VariableDeclaration","scope":485,"src":"1280:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"b","nameLocation":"1299:1:2","nodeType":"VariableDeclaration","scope":485,"src":"1291:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:2"},"returnParameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":451,"mutability":"mutable","name":"success","nameLocation":"1330:7:2","nodeType":"VariableDeclaration","scope":485,"src":"1325:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":450,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":453,"mutability":"mutable","name":"result","nameLocation":"1347:6:2","nodeType":"VariableDeclaration","scope":485,"src":"1339:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:2"},"scope":1977,"src":"1264:508:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":512,"nodeType":"Block","src":"1987:114:2","statements":[{"id":511,"nodeType":"UncheckedBlock","src":"1997:98:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":497,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"2025:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":504,"nodeType":"IfStatement","src":"2021:29:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":502,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":496,"id":503,"nodeType":"Return","src":"2033:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":506,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"2078:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":507,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"2082:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":496,"id":510,"nodeType":"Return","src":"2064:20:2"}]}]},"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"1778:113:2","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":513,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:2","nodeType":"FunctionDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"a","nameLocation":"1920:1:2","nodeType":"VariableDeclaration","scope":513,"src":"1912:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":490,"mutability":"mutable","name":"b","nameLocation":"1931:1:2","nodeType":"VariableDeclaration","scope":513,"src":"1923:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":489,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:2"},"returnParameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"success","nameLocation":"1962:7:2","nodeType":"VariableDeclaration","scope":513,"src":"1957:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":492,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"result","nameLocation":"1979:6:2","nodeType":"VariableDeclaration","scope":513,"src":"1971:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":494,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:2"},"scope":1977,"src":"1896:205:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":540,"nodeType":"Block","src":"2326:114:2","statements":[{"id":539,"nodeType":"UncheckedBlock","src":"2336:98:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"2364:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":532,"nodeType":"IfStatement","src":"2360:29:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":530,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":524,"id":531,"nodeType":"Return","src":"2372:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":534,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"2417:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":535,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"2421:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":537,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":524,"id":538,"nodeType":"Return","src":"2403:20:2"}]}]},"documentation":{"id":514,"nodeType":"StructuredDocumentation","src":"2107:123:2","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":541,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:2","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"a","nameLocation":"2259:1:2","nodeType":"VariableDeclaration","scope":541,"src":"2251:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"b","nameLocation":"2270:1:2","nodeType":"VariableDeclaration","scope":541,"src":"2262:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:2"},"returnParameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"success","nameLocation":"2301:7:2","nodeType":"VariableDeclaration","scope":541,"src":"2296:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":520,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":523,"mutability":"mutable","name":"result","nameLocation":"2318:6:2","nodeType":"VariableDeclaration","scope":541,"src":"2310:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":522,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:2"},"scope":1977,"src":"2235:205:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":567,"nodeType":"Block","src":"2912:207:2","statements":[{"id":566,"nodeType":"UncheckedBlock","src":"2922:191:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":553,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"3060:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"3066:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":555,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"3070:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":557,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":560,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"3091:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":558,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"3075:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"3075:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":563,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":552,"id":565,"nodeType":"Return","src":"3053:49:2"}]}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"2446:374:2","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":568,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:2","nodeType":"FunctionDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"condition","nameLocation":"2847:9:2","nodeType":"VariableDeclaration","scope":568,"src":"2842:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":543,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":546,"mutability":"mutable","name":"a","nameLocation":"2866:1:2","nodeType":"VariableDeclaration","scope":568,"src":"2858:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":548,"mutability":"mutable","name":"b","nameLocation":"2877:1:2","nodeType":"VariableDeclaration","scope":568,"src":"2869:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:2"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":568,"src":"2903:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:2"},"scope":1977,"src":"2825:294:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":586,"nodeType":"Block","src":"3256:44:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":579,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"3281:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":580,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"3285:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":582,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"3288:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":583,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"3291:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":578,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"3273:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":577,"id":585,"nodeType":"Return","src":"3266:27:2"}]},"documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"3125:59:2","text":" @dev Returns the largest of two numbers."},"id":587,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:2","nodeType":"FunctionDefinition","parameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"a","nameLocation":"3210:1:2","nodeType":"VariableDeclaration","scope":587,"src":"3202:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":573,"mutability":"mutable","name":"b","nameLocation":"3221:1:2","nodeType":"VariableDeclaration","scope":587,"src":"3213:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":572,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:2"},"returnParameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":587,"src":"3247:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:2"},"scope":1977,"src":"3189:111:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"3438:44:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":598,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"3463:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":599,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"3467:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":601,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"3470:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":602,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"3473:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":597,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"3455:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":596,"id":604,"nodeType":"Return","src":"3448:27:2"}]},"documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"3306:60:2","text":" @dev Returns the smallest of two numbers."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:2","nodeType":"FunctionDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"a","nameLocation":"3392:1:2","nodeType":"VariableDeclaration","scope":606,"src":"3384:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":589,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":592,"mutability":"mutable","name":"b","nameLocation":"3403:1:2","nodeType":"VariableDeclaration","scope":606,"src":"3395:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:2"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":606,"src":"3429:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:2"},"scope":1977,"src":"3371:111:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"3666:82:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":616,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"3721:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":617,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"3725:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":620,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"3731:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":621,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"3735:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":623,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":615,"id":627,"nodeType":"Return","src":"3713:28:2"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"3488:102:2","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:2","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"a","nameLocation":"3620:1:2","nodeType":"VariableDeclaration","scope":629,"src":"3612:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"b","nameLocation":"3631:1:2","nodeType":"VariableDeclaration","scope":629,"src":"3623:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:2"},"returnParameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":629,"src":"3657:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:2"},"scope":1977,"src":"3595:153:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":669,"nodeType":"Block","src":"4040:633:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":639,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"4054:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":650,"nodeType":"IfStatement","src":"4050:150:2","trueBody":{"id":649,"nodeType":"Block","src":"4062:138:2","statements":[{"expression":{"arguments":[{"expression":{"id":645,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"4166:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$51_$","typeString":"type(library Panic)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:2","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4166:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":642,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"4154:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$51_$","typeString":"type(library Panic)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:2","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":50,"src":"4154:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"ExpressionStatement","src":"4154:35:2"}]}},{"id":668,"nodeType":"UncheckedBlock","src":"4583:84:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":653,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"4630:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":651,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"4614:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"4614:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"4641:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":660,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":661,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"4650:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":665,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":638,"id":667,"nodeType":"Return","src":"4607:49:2"}]}]},"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"3754:210:2","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":670,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:2","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"a","nameLocation":"3994:1:2","nodeType":"VariableDeclaration","scope":670,"src":"3986:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":631,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"b","nameLocation":"4005:1:2","nodeType":"VariableDeclaration","scope":670,"src":"3997:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:2"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":670,"src":"4031:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:2"},"scope":1977,"src":"3969:704:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":806,"nodeType":"Block","src":"5094:4128:2","statements":[{"id":805,"nodeType":"UncheckedBlock","src":"5104:4112:2","statements":[{"assignments":[683],"declarations":[{"constant":false,"id":683,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:2","nodeType":"VariableDeclaration","scope":805,"src":"5433:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":687,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":684,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"5449:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":685,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"5453:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:2"},{"assignments":[689],"declarations":[{"constant":false,"id":689,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:2","nodeType":"VariableDeclaration","scope":805,"src":"5513:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":688,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":690,"nodeType":"VariableDeclarationStatement","src":"5513:13:2"},{"AST":{"nodeType":"YulBlock","src":"5593:122:2","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:2","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:2"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:2","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:2"},"nodeType":"YulFunctionCall","src":"5634:6:2"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:2"},"nodeType":"YulFunctionCall","src":"5621:20:2"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:2","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:2","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:2"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:2"},"nodeType":"YulFunctionCall","src":"5671:14:2"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:2"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:2"},"nodeType":"YulFunctionCall","src":"5687:13:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:2"},"nodeType":"YulFunctionCall","src":"5667:34:2"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":683,"isOffset":false,"isSlot":false,"src":"5679:5:2","valueSize":1},{"declaration":683,"isOffset":false,"isSlot":false,"src":"5694:5:2","valueSize":1},{"declaration":689,"isOffset":false,"isSlot":false,"src":"5658:5:2","valueSize":1},{"declaration":673,"isOffset":false,"isSlot":false,"src":"5628:1:2","valueSize":1},{"declaration":675,"isOffset":false,"isSlot":false,"src":"5631:1:2","valueSize":1}],"id":691,"nodeType":"InlineAssembly","src":"5584:131:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":692,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"5796:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":700,"nodeType":"IfStatement","src":"5792:368:2","trueBody":{"id":699,"nodeType":"Block","src":"5808:352:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":695,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"6126:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":696,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"6134:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":681,"id":698,"nodeType":"Return","src":"6119:26:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":701,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"6270:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":702,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"6285:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":719,"nodeType":"IfStatement","src":"6266:143:2","trueBody":{"id":718,"nodeType":"Block","src":"6292:117:2","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":708,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"6330:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":711,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"6348:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$51_$","typeString":"type(library Panic)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:2","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6348:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":713,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"6372:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$51_$","typeString":"type(library Panic)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:2","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":14,"src":"6372:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":707,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"6322:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":704,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"6310:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$51_$","typeString":"type(library Panic)"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:2","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":50,"src":"6310:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":717,"nodeType":"ExpressionStatement","src":"6310:84:2"}]}},{"assignments":[721],"declarations":[{"constant":false,"id":721,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:2","nodeType":"VariableDeclaration","scope":805,"src":"6664:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":720,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":722,"nodeType":"VariableDeclarationStatement","src":"6664:17:2"},{"AST":{"nodeType":"YulBlock","src":"6704:291:2","statements":[{"nodeType":"YulAssignment","src":"6773:38:2","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:2"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:2"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:2"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:2"},"nodeType":"YulFunctionCall","src":"6786:25:2"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:2"}]},{"nodeType":"YulAssignment","src":"6893:41:2","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:2"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:2"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:2"},"nodeType":"YulFunctionCall","src":"6913:20:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:2"},"nodeType":"YulFunctionCall","src":"6902:32:2"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:2"}]},{"nodeType":"YulAssignment","src":"6951:30:2","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:2"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:2"},"nodeType":"YulFunctionCall","src":"6960:21:2"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":677,"isOffset":false,"isSlot":false,"src":"6799:11:2","valueSize":1},{"declaration":683,"isOffset":false,"isSlot":false,"src":"6927:5:2","valueSize":1},{"declaration":683,"isOffset":false,"isSlot":false,"src":"6951:5:2","valueSize":1},{"declaration":683,"isOffset":false,"isSlot":false,"src":"6964:5:2","valueSize":1},{"declaration":689,"isOffset":false,"isSlot":false,"src":"6893:5:2","valueSize":1},{"declaration":689,"isOffset":false,"isSlot":false,"src":"6906:5:2","valueSize":1},{"declaration":721,"isOffset":false,"isSlot":false,"src":"6773:9:2","valueSize":1},{"declaration":721,"isOffset":false,"isSlot":false,"src":"6916:9:2","valueSize":1},{"declaration":721,"isOffset":false,"isSlot":false,"src":"6971:9:2","valueSize":1},{"declaration":673,"isOffset":false,"isSlot":false,"src":"6793:1:2","valueSize":1},{"declaration":675,"isOffset":false,"isSlot":false,"src":"6796:1:2","valueSize":1}],"id":723,"nodeType":"InlineAssembly","src":"6695:300:2"},{"assignments":[725],"declarations":[{"constant":false,"id":725,"mutability":"mutable","name":"twos","nameLocation":"7207:4:2","nodeType":"VariableDeclaration","scope":805,"src":"7199:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":724,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":732,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":726,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"7214:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":728,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"7233:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":730,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:2"},{"AST":{"nodeType":"YulBlock","src":"7268:366:2","statements":[{"nodeType":"YulAssignment","src":"7333:37:2","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:2"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:2"},"nodeType":"YulFunctionCall","src":"7348:22:2"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:2"}]},{"nodeType":"YulAssignment","src":"7437:25:2","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:2"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:2"},"nodeType":"YulFunctionCall","src":"7446:16:2"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:2"}]},{"nodeType":"YulAssignment","src":"7581:39:2","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:2","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:2"},"nodeType":"YulFunctionCall","src":"7597:12:2"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:2"},"nodeType":"YulFunctionCall","src":"7593:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:2"},"nodeType":"YulFunctionCall","src":"7589:31:2"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":677,"isOffset":false,"isSlot":false,"src":"7333:11:2","valueSize":1},{"declaration":677,"isOffset":false,"isSlot":false,"src":"7352:11:2","valueSize":1},{"declaration":683,"isOffset":false,"isSlot":false,"src":"7437:5:2","valueSize":1},{"declaration":683,"isOffset":false,"isSlot":false,"src":"7450:5:2","valueSize":1},{"declaration":725,"isOffset":false,"isSlot":false,"src":"7365:4:2","valueSize":1},{"declaration":725,"isOffset":false,"isSlot":false,"src":"7457:4:2","valueSize":1},{"declaration":725,"isOffset":false,"isSlot":false,"src":"7581:4:2","valueSize":1},{"declaration":725,"isOffset":false,"isSlot":false,"src":"7604:4:2","valueSize":1},{"declaration":725,"isOffset":false,"isSlot":false,"src":"7611:4:2","valueSize":1}],"id":733,"nodeType":"InlineAssembly","src":"7259:375:2"},{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":734,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"7700:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":735,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"7709:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":736,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"7717:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":739,"nodeType":"ExpressionStatement","src":"7700:21:2"},{"assignments":[741],"declarations":[{"constant":false,"id":741,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:2","nodeType":"VariableDeclaration","scope":805,"src":"8056:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":748,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:2","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":743,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"8079:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:2"},{"expression":{"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":749,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"8312:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":751,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"8327:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":752,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"8341:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":756,"nodeType":"ExpressionStatement","src":"8312:36:2"},{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":757,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"8382:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":759,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"8397:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":760,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"8411:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":764,"nodeType":"ExpressionStatement","src":"8382:36:2"},{"expression":{"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":765,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"8454:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"8469:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":768,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"8483:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":772,"nodeType":"ExpressionStatement","src":"8454:36:2"},{"expression":{"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":773,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"8525:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":775,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"8540:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":776,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"8554:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":780,"nodeType":"ExpressionStatement","src":"8525:36:2"},{"expression":{"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":781,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"8598:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":783,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"8613:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":784,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"8627:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":788,"nodeType":"ExpressionStatement","src":"8598:36:2"},{"expression":{"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":789,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"8672:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":791,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"8687:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":792,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"8701:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":796,"nodeType":"ExpressionStatement","src":"8672:36:2"},{"expression":{"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":797,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"9154:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":798,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"9163:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":799,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"9171:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":802,"nodeType":"ExpressionStatement","src":"9154:24:2"},{"expression":{"id":803,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"9199:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":681,"id":804,"nodeType":"Return","src":"9192:13:2"}]}]},"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"4679:312:2","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":807,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:2","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"x","nameLocation":"5020:1:2","nodeType":"VariableDeclaration","scope":807,"src":"5012:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":675,"mutability":"mutable","name":"y","nameLocation":"5031:1:2","nodeType":"VariableDeclaration","scope":807,"src":"5023:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":674,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:2","nodeType":"VariableDeclaration","scope":807,"src":"5034:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":676,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"result","nameLocation":"5086:6:2","nodeType":"VariableDeclaration","scope":807,"src":"5078:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:2"},"scope":1977,"src":"4996:4226:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":843,"nodeType":"Block","src":"9461:128:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":823,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"9485:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":824,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"9488:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":825,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"9491:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":822,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[807,844],"referencedDeclaration":807,"src":"9478:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":830,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"9539:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"}],"id":829,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"9522:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$383_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":833,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"9559:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":834,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"9562:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":835,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"9565:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":832,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:2","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":827,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"9506:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"9506:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":821,"id":842,"nodeType":"Return","src":"9471:111:2"}]},"documentation":{"id":808,"nodeType":"StructuredDocumentation","src":"9228:118:2","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":844,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:2","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"x","nameLocation":"9375:1:2","nodeType":"VariableDeclaration","scope":844,"src":"9367:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":809,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"y","nameLocation":"9386:1:2","nodeType":"VariableDeclaration","scope":844,"src":"9378:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:2","nodeType":"VariableDeclaration","scope":844,"src":"9389:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":817,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:2","nodeType":"VariableDeclaration","scope":844,"src":"9410:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"},"typeName":{"id":816,"nodeType":"UserDefinedTypeName","pathNode":{"id":815,"name":"Rounding","nameLocations":["9410:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":383,"src":"9410:8:2"},"referencedDeclaration":383,"src":"9410:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:2"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"9452:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:2"},"scope":1977,"src":"9351:238:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":940,"nodeType":"Block","src":"10223:1849:2","statements":[{"id":939,"nodeType":"UncheckedBlock","src":"10233:1833:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":854,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"10261:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":859,"nodeType":"IfStatement","src":"10257:20:2","trueBody":{"expression":{"hexValue":"30","id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":853,"id":858,"nodeType":"Return","src":"10269:8:2"}},{"assignments":[861],"declarations":[{"constant":false,"id":861,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:2","nodeType":"VariableDeclaration","scope":939,"src":"10748:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":860,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":865,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":862,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10768:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":863,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"10772:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:2"},{"assignments":[867],"declarations":[{"constant":false,"id":867,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:2","nodeType":"VariableDeclaration","scope":939,"src":"10787:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":869,"initialValue":{"id":868,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"10801:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:2"},{"assignments":[871],"declarations":[{"constant":false,"id":871,"mutability":"mutable","name":"x","nameLocation":"10945:1:2","nodeType":"VariableDeclaration","scope":939,"src":"10938:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":870,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":873,"initialValue":{"hexValue":"30","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:2"},{"assignments":[875],"declarations":[{"constant":false,"id":875,"mutability":"mutable","name":"y","nameLocation":"10971:1:2","nodeType":"VariableDeclaration","scope":939,"src":"10964:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":874,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":877,"initialValue":{"hexValue":"31","id":876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:2"},{"body":{"id":914,"nodeType":"Block","src":"11014:882:2","statements":[{"assignments":[882],"declarations":[{"constant":false,"id":882,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:2","nodeType":"VariableDeclaration","scope":914,"src":"11032:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":886,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":883,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"11051:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":884,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"11057:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:2"},{"expression":{"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":887,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"11086:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":888,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"11091:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":889,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":890,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"11191:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":891,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"11436:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":892,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"11442:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":893,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"11454:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":896,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":898,"nodeType":"ExpressionStatement","src":"11085:395:2"},{"expression":{"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":899,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"11500:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":900,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"11503:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":901,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":902,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"11585:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":903,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"11839:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":904,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"11843:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":907,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"11854:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":905,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:2","typeDescriptions":{}}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":911,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":913,"nodeType":"ExpressionStatement","src":"11499:382:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":878,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"10998:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":915,"nodeType":"WhileStatement","src":"10991:905:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":916,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"11914:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":921,"nodeType":"IfStatement","src":"11910:22:2","trueBody":{"expression":{"hexValue":"30","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":853,"id":920,"nodeType":"Return","src":"11924:8:2"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":923,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"11983:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":926,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"11990:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:2","subExpression":{"id":929,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"12003:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":927,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:2","typeDescriptions":{}}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":935,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"12015:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:2","typeDescriptions":{}}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":922,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"11975:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":853,"id":938,"nodeType":"Return","src":"11968:50:2"}]}]},"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"9595:553:2","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":941,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:2","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"a","nameLocation":"10177:1:2","nodeType":"VariableDeclaration","scope":941,"src":"10169:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"n","nameLocation":"10188:1:2","nodeType":"VariableDeclaration","scope":941,"src":"10180:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:2"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":941,"src":"10214:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:2"},"scope":1977,"src":"10153:1919:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"12672:82:2","statements":[{"id":960,"nodeType":"UncheckedBlock","src":"12682:66:2","statements":[{"expression":{"arguments":[{"id":953,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"12725:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":954,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"12728:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":957,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"12735:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":951,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"12713:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1977_$","typeString":"type(library Math)"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:2","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":998,"src":"12713:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":950,"id":959,"nodeType":"Return","src":"12706:31:2"}]}]},"documentation":{"id":942,"nodeType":"StructuredDocumentation","src":"12078:514:2","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:2","nodeType":"FunctionDefinition","parameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"a","nameLocation":"12626:1:2","nodeType":"VariableDeclaration","scope":962,"src":"12618:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":943,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":946,"mutability":"mutable","name":"p","nameLocation":"12637:1:2","nodeType":"VariableDeclaration","scope":962,"src":"12629:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:2"},"returnParameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":962,"src":"12663:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:2"},"scope":1977,"src":"12597:157:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":997,"nodeType":"Block","src":"13524:174:2","statements":[{"assignments":[975,977],"declarations":[{"constant":false,"id":975,"mutability":"mutable","name":"success","nameLocation":"13540:7:2","nodeType":"VariableDeclaration","scope":997,"src":"13535:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":974,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"result","nameLocation":"13557:6:2","nodeType":"VariableDeclaration","scope":997,"src":"13549:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":976,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":983,"initialValue":{"arguments":[{"id":979,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"13577:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":980,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"13580:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":981,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"13583:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":978,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1022,1104],"referencedDeclaration":1022,"src":"13567:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:2"},{"condition":{"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:2","subExpression":{"id":984,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"13600:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":994,"nodeType":"IfStatement","src":"13595:74:2","trueBody":{"id":993,"nodeType":"Block","src":"13609:60:2","statements":[{"expression":{"arguments":[{"expression":{"id":989,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"13635:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$51_$","typeString":"type(library Panic)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:2","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":18,"src":"13635:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":986,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"13623:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$51_$","typeString":"type(library Panic)"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:2","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":50,"src":"13623:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":992,"nodeType":"ExpressionStatement","src":"13623:35:2"}]}},{"expression":{"id":995,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"13685:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":973,"id":996,"nodeType":"Return","src":"13678:13:2"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"12760:678:2","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":998,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:2","nodeType":"FunctionDefinition","parameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"b","nameLocation":"13467:1:2","nodeType":"VariableDeclaration","scope":998,"src":"13459:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"e","nameLocation":"13478:1:2","nodeType":"VariableDeclaration","scope":998,"src":"13470:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"m","nameLocation":"13489:1:2","nodeType":"VariableDeclaration","scope":998,"src":"13481:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:2"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":998,"src":"13515:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":971,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:2"},"scope":1977,"src":"13443:255:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1021,"nodeType":"Block","src":"14552:1493:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1012,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"14566:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1019,"nodeType":"IfStatement","src":"14562:29:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1011,"id":1018,"nodeType":"Return","src":"14574:17:2"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:2","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:2","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:2"},"nodeType":"YulFunctionCall","src":"14651:11:2"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:2","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:2","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:2"},"nodeType":"YulFunctionCall","src":"15563:17:2"},"nodeType":"YulExpressionStatement","src":"15563:17:2"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:2"},"nodeType":"YulFunctionCall","src":"15600:14:2"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:2","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:2"},"nodeType":"YulFunctionCall","src":"15593:28:2"},"nodeType":"YulExpressionStatement","src":"15593:28:2"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:2"},"nodeType":"YulFunctionCall","src":"15641:14:2"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:2","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:2"},"nodeType":"YulFunctionCall","src":"15634:28:2"},"nodeType":"YulExpressionStatement","src":"15634:28:2"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:2","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:2"},"nodeType":"YulFunctionCall","src":"15682:14:2"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:2"},"nodeType":"YulFunctionCall","src":"15675:25:2"},"nodeType":"YulExpressionStatement","src":"15675:25:2"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:2","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:2"},"nodeType":"YulFunctionCall","src":"15720:14:2"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:2"},"nodeType":"YulFunctionCall","src":"15713:25:2"},"nodeType":"YulExpressionStatement","src":"15713:25:2"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:2","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:2"},"nodeType":"YulFunctionCall","src":"15758:14:2"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:2"},"nodeType":"YulFunctionCall","src":"15751:25:2"},"nodeType":"YulExpressionStatement","src":"15751:25:2"},{"nodeType":"YulAssignment","src":"15938:57:2","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:2"},"nodeType":"YulFunctionCall","src":"15960:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:2","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:2","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:2","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:2","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:2"},"nodeType":"YulFunctionCall","src":"15949:46:2"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:2"}]},{"nodeType":"YulAssignment","src":"16008:21:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:2","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:2"},"nodeType":"YulFunctionCall","src":"16018:11:2"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1001,"isOffset":false,"isSlot":false,"src":"15698:1:2","valueSize":1},{"declaration":1003,"isOffset":false,"isSlot":false,"src":"15736:1:2","valueSize":1},{"declaration":1005,"isOffset":false,"isSlot":false,"src":"15774:1:2","valueSize":1},{"declaration":1010,"isOffset":false,"isSlot":false,"src":"16008:6:2","valueSize":1},{"declaration":1008,"isOffset":false,"isSlot":false,"src":"15938:7:2","valueSize":1}],"flags":["memory-safe"],"id":1020,"nodeType":"InlineAssembly","src":"14601:1438:2"}]},"documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"13704:738:2","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":1022,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:2","nodeType":"FunctionDefinition","parameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1001,"mutability":"mutable","name":"b","nameLocation":"14474:1:2","nodeType":"VariableDeclaration","scope":1022,"src":"14466:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1003,"mutability":"mutable","name":"e","nameLocation":"14485:1:2","nodeType":"VariableDeclaration","scope":1022,"src":"14477:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1002,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1005,"mutability":"mutable","name":"m","nameLocation":"14496:1:2","nodeType":"VariableDeclaration","scope":1022,"src":"14488:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1004,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:2"},"returnParameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"success","nameLocation":"14527:7:2","nodeType":"VariableDeclaration","scope":1022,"src":"14522:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1007,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"result","nameLocation":"14544:6:2","nodeType":"VariableDeclaration","scope":1022,"src":"14536:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:2"},"scope":1977,"src":"14447:1598:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1057,"nodeType":"Block","src":"16242:179:2","statements":[{"assignments":[1035,1037],"declarations":[{"constant":false,"id":1035,"mutability":"mutable","name":"success","nameLocation":"16258:7:2","nodeType":"VariableDeclaration","scope":1057,"src":"16253:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1034,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"result","nameLocation":"16280:6:2","nodeType":"VariableDeclaration","scope":1057,"src":"16267:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1036,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1043,"initialValue":{"arguments":[{"id":1039,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"16300:1:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1040,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"16303:1:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1041,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"16306:1:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1038,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1022,1104],"referencedDeclaration":1104,"src":"16290:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:2"},{"condition":{"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:2","subExpression":{"id":1044,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"16323:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1054,"nodeType":"IfStatement","src":"16318:74:2","trueBody":{"id":1053,"nodeType":"Block","src":"16332:60:2","statements":[{"expression":{"arguments":[{"expression":{"id":1049,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"16358:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$51_$","typeString":"type(library Panic)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:2","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":18,"src":"16358:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1046,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"16346:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$51_$","typeString":"type(library Panic)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:2","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":50,"src":"16346:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1052,"nodeType":"ExpressionStatement","src":"16346:35:2"}]}},{"expression":{"id":1055,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"16408:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1033,"id":1056,"nodeType":"Return","src":"16401:13:2"}]},"documentation":{"id":1023,"nodeType":"StructuredDocumentation","src":"16051:85:2","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":1058,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:2","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"b","nameLocation":"16170:1:2","nodeType":"VariableDeclaration","scope":1058,"src":"16157:14:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1024,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"e","nameLocation":"16186:1:2","nodeType":"VariableDeclaration","scope":1058,"src":"16173:14:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1026,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"m","nameLocation":"16202:1:2","nodeType":"VariableDeclaration","scope":1058,"src":"16189:14:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1028,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:2"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1058,"src":"16228:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1031,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:2"},"scope":1977,"src":"16141:280:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1103,"nodeType":"Block","src":"16675:771:2","statements":[{"condition":{"arguments":[{"id":1073,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"16700:1:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1072,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"16689:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1082,"nodeType":"IfStatement","src":"16685:47:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1076,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":1071,"id":1081,"nodeType":"Return","src":"16704:28:2"}},{"assignments":[1084],"declarations":[{"constant":false,"id":1084,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:2","nodeType":"VariableDeclaration","scope":1103,"src":"16743:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1087,"initialValue":{"expression":{"id":1085,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"16758:1:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:2","memberName":"length","nodeType":"MemberAccess","src":"16758:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:2"},{"expression":{"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1088,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"16848:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1091,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"16874:1:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:2","memberName":"length","nodeType":"MemberAccess","src":"16874:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1093,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"16884:1:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:2","memberName":"length","nodeType":"MemberAccess","src":"16884:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1095,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"16894:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1096,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"16900:1:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1097,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"16903:1:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1098,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"16906:1:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1089,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:2","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1101,"nodeType":"ExpressionStatement","src":"16848:60:2"},{"AST":{"nodeType":"YulBlock","src":"16944:496:2","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:2","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:2"},"nodeType":"YulFunctionCall","src":"16973:17:2"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:2","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:2","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:2"},"nodeType":"YulFunctionCall","src":"17102:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:2","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:2"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:2"},"nodeType":"YulFunctionCall","src":"17124:13:2"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:2"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:2"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:2"},"nodeType":"YulFunctionCall","src":"17091:62:2"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:2"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:2"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:2"},"nodeType":"YulFunctionCall","src":"17302:20:2"},"nodeType":"YulExpressionStatement","src":"17302:20:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:2","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:2"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:2"},"nodeType":"YulFunctionCall","src":"17411:18:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:2"},"nodeType":"YulFunctionCall","src":"17398:32:2"},"nodeType":"YulExpressionStatement","src":"17398:32:2"}]},"evmVersion":"paris","externalReferences":[{"declaration":1084,"isOffset":false,"isSlot":false,"src":"17148:4:2","valueSize":1},{"declaration":1084,"isOffset":false,"isSlot":false,"src":"17317:4:2","valueSize":1},{"declaration":1084,"isOffset":false,"isSlot":false,"src":"17424:4:2","valueSize":1},{"declaration":1070,"isOffset":false,"isSlot":false,"src":"16977:6:2","valueSize":1},{"declaration":1070,"isOffset":false,"isSlot":false,"src":"17130:6:2","valueSize":1},{"declaration":1070,"isOffset":false,"isSlot":false,"src":"17309:6:2","valueSize":1},{"declaration":1068,"isOffset":false,"isSlot":false,"src":"17080:7:2","valueSize":1}],"flags":["memory-safe"],"id":1102,"nodeType":"InlineAssembly","src":"16919:521:2"}]},"documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"16427:88:2","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":1104,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:2","nodeType":"FunctionDefinition","parameters":{"id":1066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"mutability":"mutable","name":"b","nameLocation":"16561:1:2","nodeType":"VariableDeclaration","scope":1104,"src":"16548:14:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1060,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"e","nameLocation":"16585:1:2","nodeType":"VariableDeclaration","scope":1104,"src":"16572:14:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1062,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"m","nameLocation":"16609:1:2","nodeType":"VariableDeclaration","scope":1104,"src":"16596:14:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1064,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:2"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"success","nameLocation":"16645:7:2","nodeType":"VariableDeclaration","scope":1104,"src":"16640:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1067,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"result","nameLocation":"16667:6:2","nodeType":"VariableDeclaration","scope":1104,"src":"16654:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1069,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:2"},"scope":1977,"src":"16520:926:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1136,"nodeType":"Block","src":"17601:176:2","statements":[{"body":{"id":1132,"nodeType":"Block","src":"17658:92:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1123,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"17676:9:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1125,"indexExpression":{"id":1124,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"17686:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1131,"nodeType":"IfStatement","src":"17672:68:2","trueBody":{"id":1130,"nodeType":"Block","src":"17695:45:2","statements":[{"expression":{"hexValue":"66616c7365","id":1128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1111,"id":1129,"nodeType":"Return","src":"17713:12:2"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1116,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"17631:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1117,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"17635:9:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:2","memberName":"length","nodeType":"MemberAccess","src":"17635:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1133,"initializationExpression":{"assignments":[1113],"declarations":[{"constant":false,"id":1113,"mutability":"mutable","name":"i","nameLocation":"17624:1:2","nodeType":"VariableDeclaration","scope":1133,"src":"17616:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1115,"initialValue":{"hexValue":"30","id":1114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:2"},"loopExpression":{"expression":{"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:2","subExpression":{"id":1120,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"17655:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1122,"nodeType":"ExpressionStatement","src":"17653:3:2"},"nodeType":"ForStatement","src":"17611:139:2"},{"expression":{"hexValue":"74727565","id":1134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1111,"id":1135,"nodeType":"Return","src":"17759:11:2"}]},"documentation":{"id":1105,"nodeType":"StructuredDocumentation","src":"17452:72:2","text":" @dev Returns whether the provided byte array is zero."},"id":1137,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:2","nodeType":"FunctionDefinition","parameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:2","nodeType":"VariableDeclaration","scope":1137,"src":"17549:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1106,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:2"},"returnParameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1137,"src":"17595:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1109,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:2"},"scope":1977,"src":"17529:248:2","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1355,"nodeType":"Block","src":"18137:5124:2","statements":[{"id":1354,"nodeType":"UncheckedBlock","src":"18147:5108:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1145,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"18241:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1151,"nodeType":"IfStatement","src":"18237:53:2","trueBody":{"id":1150,"nodeType":"Block","src":"18249:41:2","statements":[{"expression":{"id":1148,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"18274:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1144,"id":1149,"nodeType":"Return","src":"18267:8:2"}]}},{"assignments":[1153],"declarations":[{"constant":false,"id":1153,"mutability":"mutable","name":"aa","nameLocation":"19225:2:2","nodeType":"VariableDeclaration","scope":1354,"src":"19217:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1155,"initialValue":{"id":1154,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"19230:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:2"},{"assignments":[1157],"declarations":[{"constant":false,"id":1157,"mutability":"mutable","name":"xn","nameLocation":"19253:2:2","nodeType":"VariableDeclaration","scope":1354,"src":"19245:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1159,"initialValue":{"hexValue":"31","id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1160,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"19278:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":1163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:2","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:2","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":1164,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:2","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1175,"nodeType":"IfStatement","src":"19274:92:2","trueBody":{"id":1174,"nodeType":"Block","src":"19296:70:2","statements":[{"expression":{"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1166,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"19314:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:2","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1169,"nodeType":"ExpressionStatement","src":"19314:10:2"},{"expression":{"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1170,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"19342:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":1171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:2","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1173,"nodeType":"ExpressionStatement","src":"19342:9:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1176,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"19383:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":1179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:2","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:2","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":1180,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:2","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1191,"nodeType":"IfStatement","src":"19379:90:2","trueBody":{"id":1190,"nodeType":"Block","src":"19400:69:2","statements":[{"expression":{"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1182,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"19418:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:2","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1185,"nodeType":"ExpressionStatement","src":"19418:9:2"},{"expression":{"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1186,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"19445:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1189,"nodeType":"ExpressionStatement","src":"19445:9:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1192,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"19486:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":1195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:2","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":1196,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:2","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1207,"nodeType":"IfStatement","src":"19482:90:2","trueBody":{"id":1206,"nodeType":"Block","src":"19503:69:2","statements":[{"expression":{"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1198,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"19521:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1201,"nodeType":"ExpressionStatement","src":"19521:9:2"},{"expression":{"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1202,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"19548:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1205,"nodeType":"ExpressionStatement","src":"19548:9:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1208,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"19589:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:2","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":1212,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:2","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1223,"nodeType":"IfStatement","src":"19585:89:2","trueBody":{"id":1222,"nodeType":"Block","src":"19606:68:2","statements":[{"expression":{"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1214,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"19624:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1217,"nodeType":"ExpressionStatement","src":"19624:9:2"},{"expression":{"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1218,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"19651:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1221,"nodeType":"ExpressionStatement","src":"19651:8:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1224,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"19691:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:2","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1228,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:2","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1239,"nodeType":"IfStatement","src":"19687:87:2","trueBody":{"id":1238,"nodeType":"Block","src":"19707:67:2","statements":[{"expression":{"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1230,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"19725:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1233,"nodeType":"ExpressionStatement","src":"19725:8:2"},{"expression":{"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1234,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"19751:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":1235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1237,"nodeType":"ExpressionStatement","src":"19751:8:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1240,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"19791:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":1243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":1244,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1255,"nodeType":"IfStatement","src":"19787:87:2","trueBody":{"id":1254,"nodeType":"Block","src":"19807:67:2","statements":[{"expression":{"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1246,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"19825:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1249,"nodeType":"ExpressionStatement","src":"19825:8:2"},{"expression":{"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1250,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"19851:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1253,"nodeType":"ExpressionStatement","src":"19851:8:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1256,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"19891:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":1259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":1260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1267,"nodeType":"IfStatement","src":"19887:61:2","trueBody":{"id":1266,"nodeType":"Block","src":"19907:41:2","statements":[{"expression":{"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1262,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"19925:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1265,"nodeType":"ExpressionStatement","src":"19925:8:2"}]}},{"expression":{"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1268,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"20368:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:2","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1270,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"20378:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1272,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1276,"nodeType":"ExpressionStatement","src":"20368:18:2"},{"expression":{"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1277,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"22273:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1278,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"22279:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1279,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"22284:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1280,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"22288:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1283,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1287,"nodeType":"ExpressionStatement","src":"22273:23:2"},{"expression":{"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1288,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"22382:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1289,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"22388:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1290,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"22393:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1291,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"22397:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1294,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1298,"nodeType":"ExpressionStatement","src":"22382:23:2"},{"expression":{"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1299,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"22493:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1300,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"22499:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1301,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"22504:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1302,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"22508:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1305,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1309,"nodeType":"ExpressionStatement","src":"22493:23:2"},{"expression":{"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1310,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"22602:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1311,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"22608:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1312,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"22613:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1313,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"22617:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1320,"nodeType":"ExpressionStatement","src":"22602:23:2"},{"expression":{"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1321,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"22712:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1322,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"22718:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1323,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"22723:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1324,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"22727:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1327,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1331,"nodeType":"ExpressionStatement","src":"22712:23:2"},{"expression":{"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1332,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"22822:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1333,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"22828:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1334,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"22833:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1335,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"22837:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1338,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1342,"nodeType":"ExpressionStatement","src":"22822:23:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1343,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"23211:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1346,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"23232:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1347,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"23237:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1348,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"23241:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1344,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"23216:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"23216:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1144,"id":1353,"nodeType":"Return","src":"23204:40:2"}]}]},"documentation":{"id":1138,"nodeType":"StructuredDocumentation","src":"17783:292:2","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":1356,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:2","nodeType":"FunctionDefinition","parameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"a","nameLocation":"18102:1:2","nodeType":"VariableDeclaration","scope":1356,"src":"18094:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1139,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:2"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1356,"src":"18128:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1142,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:2"},"scope":1977,"src":"18080:5181:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1389,"nodeType":"Block","src":"23434:171:2","statements":[{"id":1388,"nodeType":"UncheckedBlock","src":"23444:155:2","statements":[{"assignments":[1368],"declarations":[{"constant":false,"id":1368,"mutability":"mutable","name":"result","nameLocation":"23476:6:2","nodeType":"VariableDeclaration","scope":1388,"src":"23468:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1367,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1372,"initialValue":{"arguments":[{"id":1370,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"23490:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1369,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1356,1390],"referencedDeclaration":1356,"src":"23485:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1373,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"23513:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1377,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"23555:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"}],"id":1376,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"23538:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$383_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1379,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"23568:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1380,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"23577:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1382,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"23586:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1374,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"23522:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"23522:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1366,"id":1387,"nodeType":"Return","src":"23506:82:2"}]}]},"documentation":{"id":1357,"nodeType":"StructuredDocumentation","src":"23267:86:2","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":1390,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:2","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"a","nameLocation":"23380:1:2","nodeType":"VariableDeclaration","scope":1390,"src":"23372:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1358,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:2","nodeType":"VariableDeclaration","scope":1390,"src":"23383:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"},"typeName":{"id":1361,"nodeType":"UserDefinedTypeName","pathNode":{"id":1360,"name":"Rounding","nameLocations":["23383:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":383,"src":"23383:8:2"},"referencedDeclaration":383,"src":"23383:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:2"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1390,"src":"23425:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1364,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:2"},"scope":1977,"src":"23358:247:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1585,"nodeType":"Block","src":"23796:981:2","statements":[{"assignments":[1399],"declarations":[{"constant":false,"id":1399,"mutability":"mutable","name":"result","nameLocation":"23814:6:2","nodeType":"VariableDeclaration","scope":1585,"src":"23806:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1401,"initialValue":{"hexValue":"30","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:2"},{"assignments":[1403],"declarations":[{"constant":false,"id":1403,"mutability":"mutable","name":"exp","nameLocation":"23842:3:2","nodeType":"VariableDeclaration","scope":1585,"src":"23834:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1404,"nodeType":"VariableDeclarationStatement","src":"23834:11:2"},{"id":1582,"nodeType":"UncheckedBlock","src":"23855:893:2","statements":[{"expression":{"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1405,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"23879:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:2","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"23907:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":1415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":1412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:2","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:2","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":1413,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:2","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:2","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1407,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"23891:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"23891:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1420,"nodeType":"ExpressionStatement","src":"23879:51:2"},{"expression":{"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"23944:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1422,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"23954:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1424,"nodeType":"ExpressionStatement","src":"23944:13:2"},{"expression":{"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1425,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"23971:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1426,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"23981:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1428,"nodeType":"ExpressionStatement","src":"23971:13:2"},{"expression":{"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1429,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"23999:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:2","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"24026:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":1439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":1436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:2","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:2","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":1437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:2","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:2","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1431,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"24010:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"24010:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1444,"nodeType":"ExpressionStatement","src":"23999:49:2"},{"expression":{"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"24062:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1446,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"24072:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1448,"nodeType":"ExpressionStatement","src":"24062:13:2"},{"expression":{"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1449,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"24089:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1450,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"24099:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1452,"nodeType":"ExpressionStatement","src":"24089:13:2"},{"expression":{"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1453,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"24117:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"24144:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":1463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":1460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:2","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":1461,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:2","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:2","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1455,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"24128:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"24128:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1468,"nodeType":"ExpressionStatement","src":"24117:49:2"},{"expression":{"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"24180:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1470,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"24190:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1472,"nodeType":"ExpressionStatement","src":"24180:13:2"},{"expression":{"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1473,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"24207:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1474,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"24217:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1476,"nodeType":"ExpressionStatement","src":"24207:13:2"},{"expression":{"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1477,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"24235:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"24262:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":1487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":1484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:2","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":1485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:2","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:2","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1479,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"24246:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"24246:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1492,"nodeType":"ExpressionStatement","src":"24235:49:2"},{"expression":{"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"24298:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1494,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"24308:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1496,"nodeType":"ExpressionStatement","src":"24298:13:2"},{"expression":{"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1497,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"24325:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1498,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"24335:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1500,"nodeType":"ExpressionStatement","src":"24325:13:2"},{"expression":{"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1501,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"24353:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"24379:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":1511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:2","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:2","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:2","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1503,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"24363:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"24363:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1516,"nodeType":"ExpressionStatement","src":"24353:47:2"},{"expression":{"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"24414:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1518,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"24424:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1520,"nodeType":"ExpressionStatement","src":"24414:13:2"},{"expression":{"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1521,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"24441:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1522,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"24451:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1524,"nodeType":"ExpressionStatement","src":"24441:13:2"},{"expression":{"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1525,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"24469:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"24495:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":1535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":1532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":1533,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:2","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1527,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"24479:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"24479:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1540,"nodeType":"ExpressionStatement","src":"24469:47:2"},{"expression":{"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"24530:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1542,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"24540:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1544,"nodeType":"ExpressionStatement","src":"24530:13:2"},{"expression":{"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1545,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"24557:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1546,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"24567:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1548,"nodeType":"ExpressionStatement","src":"24557:13:2"},{"expression":{"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1549,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"24585:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"24611:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":1559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":1556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":1557,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:2","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1551,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"24595:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"24595:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1564,"nodeType":"ExpressionStatement","src":"24585:47:2"},{"expression":{"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"24646:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1566,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"24656:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1568,"nodeType":"ExpressionStatement","src":"24646:13:2"},{"expression":{"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1569,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"24673:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1570,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"24683:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1572,"nodeType":"ExpressionStatement","src":"24673:13:2"},{"expression":{"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1573,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"24701:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"24727:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1574,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"24711:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"24711:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1581,"nodeType":"ExpressionStatement","src":"24701:36:2"}]},{"expression":{"id":1583,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"24764:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1397,"id":1584,"nodeType":"Return","src":"24757:13:2"}]},"documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"23611:119:2","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":1586,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:2","nodeType":"FunctionDefinition","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"value","nameLocation":"23757:5:2","nodeType":"VariableDeclaration","scope":1586,"src":"23749:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:2"},"returnParameters":{"id":1397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1586,"src":"23787:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1395,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:2"},"scope":1977,"src":"23735:1042:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1619,"nodeType":"Block","src":"25010:175:2","statements":[{"id":1618,"nodeType":"UncheckedBlock","src":"25020:159:2","statements":[{"assignments":[1598],"declarations":[{"constant":false,"id":1598,"mutability":"mutable","name":"result","nameLocation":"25052:6:2","nodeType":"VariableDeclaration","scope":1618,"src":"25044:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1597,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1602,"initialValue":{"arguments":[{"id":1600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"25066:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1599,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1586,1620],"referencedDeclaration":1586,"src":"25061:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1603,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"25093:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1607,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"25135:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"}],"id":1606,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"25118:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$383_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1610,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"25153:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"25162:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1604,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"25102:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"25102:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1596,"id":1617,"nodeType":"Return","src":"25086:82:2"}]}]},"documentation":{"id":1587,"nodeType":"StructuredDocumentation","src":"24783:142:2","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1620,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:2","nodeType":"FunctionDefinition","parameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"value","nameLocation":"24952:5:2","nodeType":"VariableDeclaration","scope":1620,"src":"24944:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1588,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1592,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:2","nodeType":"VariableDeclaration","scope":1620,"src":"24959:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"},"typeName":{"id":1591,"nodeType":"UserDefinedTypeName","pathNode":{"id":1590,"name":"Rounding","nameLocations":["24959:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":383,"src":"24959:8:2"},"referencedDeclaration":383,"src":"24959:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:2"},"returnParameters":{"id":1596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1620,"src":"25001:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1594,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:2"},"scope":1977,"src":"24930:255:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1748,"nodeType":"Block","src":"25378:854:2","statements":[{"assignments":[1629],"declarations":[{"constant":false,"id":1629,"mutability":"mutable","name":"result","nameLocation":"25396:6:2","nodeType":"VariableDeclaration","scope":1748,"src":"25388:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1631,"initialValue":{"hexValue":"30","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:2"},{"id":1745,"nodeType":"UncheckedBlock","src":"25416:787:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"25444:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:2","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:2","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1648,"nodeType":"IfStatement","src":"25440:103:2","trueBody":{"id":1647,"nodeType":"Block","src":"25463:80:2","statements":[{"expression":{"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"25481:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:2","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:2","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1642,"nodeType":"ExpressionStatement","src":"25481:17:2"},{"expression":{"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1643,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"25516:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:2","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1646,"nodeType":"ExpressionStatement","src":"25516:12:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"25560:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1665,"nodeType":"IfStatement","src":"25556:103:2","trueBody":{"id":1664,"nodeType":"Block","src":"25579:80:2","statements":[{"expression":{"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"25597:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1659,"nodeType":"ExpressionStatement","src":"25597:17:2"},{"expression":{"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"25632:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1663,"nodeType":"ExpressionStatement","src":"25632:12:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"25676:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:2","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1682,"nodeType":"IfStatement","src":"25672:103:2","trueBody":{"id":1681,"nodeType":"Block","src":"25695:80:2","statements":[{"expression":{"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"25713:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:2","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1676,"nodeType":"ExpressionStatement","src":"25713:17:2"},{"expression":{"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1677,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"25748:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1680,"nodeType":"ExpressionStatement","src":"25748:12:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"25792:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1699,"nodeType":"IfStatement","src":"25788:100:2","trueBody":{"id":1698,"nodeType":"Block","src":"25810:78:2","statements":[{"expression":{"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"25828:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1693,"nodeType":"ExpressionStatement","src":"25828:16:2"},{"expression":{"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1694,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"25862:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1697,"nodeType":"ExpressionStatement","src":"25862:11:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"25905:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:2","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1716,"nodeType":"IfStatement","src":"25901:100:2","trueBody":{"id":1715,"nodeType":"Block","src":"25923:78:2","statements":[{"expression":{"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"25941:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:2","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1710,"nodeType":"ExpressionStatement","src":"25941:16:2"},{"expression":{"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1711,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"25975:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1714,"nodeType":"ExpressionStatement","src":"25975:11:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"26018:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:2","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1733,"nodeType":"IfStatement","src":"26014:100:2","trueBody":{"id":1732,"nodeType":"Block","src":"26036:78:2","statements":[{"expression":{"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"26054:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:2","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1727,"nodeType":"ExpressionStatement","src":"26054:16:2"},{"expression":{"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"26088:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1731,"nodeType":"ExpressionStatement","src":"26088:11:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"26131:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1744,"nodeType":"IfStatement","src":"26127:66:2","trueBody":{"id":1743,"nodeType":"Block","src":"26149:44:2","statements":[{"expression":{"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1739,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"26167:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1742,"nodeType":"ExpressionStatement","src":"26167:11:2"}]}}]},{"expression":{"id":1746,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"26219:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1627,"id":1747,"nodeType":"Return","src":"26212:13:2"}]},"documentation":{"id":1621,"nodeType":"StructuredDocumentation","src":"25191:120:2","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":1749,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:2","nodeType":"FunctionDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"value","nameLocation":"25339:5:2","nodeType":"VariableDeclaration","scope":1749,"src":"25331:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:2"},"returnParameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1749,"src":"25369:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:2"},"scope":1977,"src":"25316:916:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1782,"nodeType":"Block","src":"26467:177:2","statements":[{"id":1781,"nodeType":"UncheckedBlock","src":"26477:161:2","statements":[{"assignments":[1761],"declarations":[{"constant":false,"id":1761,"mutability":"mutable","name":"result","nameLocation":"26509:6:2","nodeType":"VariableDeclaration","scope":1781,"src":"26501:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1765,"initialValue":{"arguments":[{"id":1763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"26524:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1762,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1749,1783],"referencedDeclaration":1749,"src":"26518:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1766,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"26551:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1770,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"26593:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"}],"id":1769,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"26576:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$383_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1773,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"26612:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"26621:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1767,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"26560:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"26560:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1759,"id":1780,"nodeType":"Return","src":"26544:83:2"}]}]},"documentation":{"id":1750,"nodeType":"StructuredDocumentation","src":"26238:143:2","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1783,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:2","nodeType":"FunctionDefinition","parameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"value","nameLocation":"26409:5:2","nodeType":"VariableDeclaration","scope":1783,"src":"26401:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1751,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1755,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:2","nodeType":"VariableDeclaration","scope":1783,"src":"26416:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"},"typeName":{"id":1754,"nodeType":"UserDefinedTypeName","pathNode":{"id":1753,"name":"Rounding","nameLocations":["26416:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":383,"src":"26416:8:2"},"referencedDeclaration":383,"src":"26416:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:2"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1783,"src":"26458:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1757,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:2"},"scope":1977,"src":"26386:258:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1919,"nodeType":"Block","src":"26964:674:2","statements":[{"assignments":[1792],"declarations":[{"constant":false,"id":1792,"mutability":"mutable","name":"result","nameLocation":"26982:6:2","nodeType":"VariableDeclaration","scope":1919,"src":"26974:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1794,"initialValue":{"hexValue":"30","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:2"},{"assignments":[1796],"declarations":[{"constant":false,"id":1796,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:2","nodeType":"VariableDeclaration","scope":1919,"src":"27002:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1795,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1797,"nodeType":"VariableDeclarationStatement","src":"27002:12:2"},{"id":1916,"nodeType":"UncheckedBlock","src":"27024:585:2","statements":[{"expression":{"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1798,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"27048:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"27071:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":1807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":1804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:2","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:2","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":1805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:2","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:2","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1799,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"27055:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"27055:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1811,"nodeType":"ExpressionStatement","src":"27048:46:2"},{"expression":{"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"27108:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1813,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"27118:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:2","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1817,"nodeType":"ExpressionStatement","src":"27108:20:2"},{"expression":{"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1818,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"27142:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1819,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"27152:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":1820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1823,"nodeType":"ExpressionStatement","src":"27142:19:2"},{"expression":{"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1824,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"27176:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"27199:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":1833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:2","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:2","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":1831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:2","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:2","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1825,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"27183:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"27183:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1837,"nodeType":"ExpressionStatement","src":"27176:45:2"},{"expression":{"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"27235:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1839,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"27245:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:2","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1843,"nodeType":"ExpressionStatement","src":"27235:19:2"},{"expression":{"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1844,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"27268:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1845,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"27278:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1849,"nodeType":"ExpressionStatement","src":"27268:18:2"},{"expression":{"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1850,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"27301:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"27324:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":1859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":1856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:2","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":1857,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:2","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:2","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1851,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"27308:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"27308:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1863,"nodeType":"ExpressionStatement","src":"27301:45:2"},{"expression":{"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"27360:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1865,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"27370:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1869,"nodeType":"ExpressionStatement","src":"27360:19:2"},{"expression":{"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1870,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"27393:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1871,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"27403:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1875,"nodeType":"ExpressionStatement","src":"27393:18:2"},{"expression":{"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1876,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"27426:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"27449:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":1885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":1882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:2","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":1883,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:2","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:2","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1877,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"27433:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"27433:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1889,"nodeType":"ExpressionStatement","src":"27426:45:2"},{"expression":{"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"27485:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1891,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"27495:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1895,"nodeType":"ExpressionStatement","src":"27485:19:2"},{"expression":{"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1896,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"27518:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1897,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"27528:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1901,"nodeType":"ExpressionStatement","src":"27518:18:2"},{"expression":{"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1902,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"27551:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"27577:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":1911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:2","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1909,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:2","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:2","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1903,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"27561:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"27561:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1915,"nodeType":"ExpressionStatement","src":"27551:47:2"}]},{"expression":{"id":1917,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"27625:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1790,"id":1918,"nodeType":"Return","src":"27618:13:2"}]},"documentation":{"id":1784,"nodeType":"StructuredDocumentation","src":"26650:246:2","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1920,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:2","nodeType":"FunctionDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"value","nameLocation":"26925:5:2","nodeType":"VariableDeclaration","scope":1920,"src":"26917:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:2"},"returnParameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1920,"src":"26955:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:2"},"scope":1977,"src":"26901:737:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1956,"nodeType":"Block","src":"27875:184:2","statements":[{"id":1955,"nodeType":"UncheckedBlock","src":"27885:168:2","statements":[{"assignments":[1932],"declarations":[{"constant":false,"id":1932,"mutability":"mutable","name":"result","nameLocation":"27917:6:2","nodeType":"VariableDeclaration","scope":1955,"src":"27909:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1931,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1936,"initialValue":{"arguments":[{"id":1934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"27933:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1933,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1920,1957],"referencedDeclaration":1920,"src":"27926:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1937,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"27960:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1941,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"28002:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"}],"id":1940,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"27985:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$383_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1944,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"28021:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:2","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"28036:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1938,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"27969:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:2","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"27969:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1930,"id":1954,"nodeType":"Return","src":"27953:89:2"}]}]},"documentation":{"id":1921,"nodeType":"StructuredDocumentation","src":"27644:144:2","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1957,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:2","nodeType":"FunctionDefinition","parameters":{"id":1927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"value","nameLocation":"27817:5:2","nodeType":"VariableDeclaration","scope":1957,"src":"27809:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1926,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:2","nodeType":"VariableDeclaration","scope":1957,"src":"27824:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"},"typeName":{"id":1925,"nodeType":"UserDefinedTypeName","pathNode":{"id":1924,"name":"Rounding","nameLocations":["27824:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":383,"src":"27824:8:2"},"referencedDeclaration":383,"src":"27824:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:2"},"returnParameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1957,"src":"27866:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:2"},"scope":1977,"src":"27793:266:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1975,"nodeType":"Block","src":"28257:48:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1968,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"28280:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"}],"id":1967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1966,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:2","typeDescriptions":{}}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":1970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1965,"id":1974,"nodeType":"Return","src":"28267:31:2"}]},"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"28065:113:2","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":1976,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:2","nodeType":"FunctionDefinition","parameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:2","nodeType":"VariableDeclaration","scope":1976,"src":"28209:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"},"typeName":{"id":1960,"nodeType":"UserDefinedTypeName","pathNode":{"id":1959,"name":"Rounding","nameLocations":["28209:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":383,"src":"28209:8:2"},"referencedDeclaration":383,"src":"28209:8:2","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$383","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:2"},"returnParameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1976,"src":"28251:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1963,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:2"},"scope":1977,"src":"28183:122:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1978,"src":"281:28026:2","usedErrors":[],"usedEvents":[]}],"src":"103:28205:2"},"id":2},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[3742]},"id":3743,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1979,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":1980,"nodeType":"StructuredDocumentation","src":"218:550:3","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":3742,"linearizedBaseContracts":[3742],"name":"SafeCast","nameLocation":"777:8:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1981,"nodeType":"StructuredDocumentation","src":"792:68:3","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":1987,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:3","nodeType":"ErrorDefinition","parameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"bits","nameLocation":"908:4:3","nodeType":"VariableDeclaration","scope":1987,"src":"902:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1982,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1985,"mutability":"mutable","name":"value","nameLocation":"922:5:3","nodeType":"VariableDeclaration","scope":1987,"src":"914:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1984,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:3"},"src":"865:64:3"},{"documentation":{"id":1988,"nodeType":"StructuredDocumentation","src":"935:75:3","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":1992,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:3","nodeType":"ErrorDefinition","parameters":{"id":1991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1990,"mutability":"mutable","name":"value","nameLocation":"1056:5:3","nodeType":"VariableDeclaration","scope":1992,"src":"1049:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1989,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:3"},"src":"1015:48:3"},{"documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"1069:67:3","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":1999,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:3","nodeType":"ErrorDefinition","parameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"mutability":"mutable","name":"bits","nameLocation":"1183:4:3","nodeType":"VariableDeclaration","scope":1999,"src":"1177:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1994,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1997,"mutability":"mutable","name":"value","nameLocation":"1196:5:3","nodeType":"VariableDeclaration","scope":1999,"src":"1189:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1996,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:3"},"src":"1141:62:3"},{"documentation":{"id":2000,"nodeType":"StructuredDocumentation","src":"1209:75:3","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":2004,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:3","nodeType":"ErrorDefinition","parameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"value","nameLocation":"1331:5:3","nodeType":"VariableDeclaration","scope":2004,"src":"1323:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2001,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:3"},"src":"1289:49:3"},{"body":{"id":2031,"nodeType":"Block","src":"1695:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"1709:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2014,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":2013,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:3","memberName":"max","nodeType":"MemberAccess","src":"1717:17:3","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2025,"nodeType":"IfStatement","src":"1705:105:3","trueBody":{"id":2024,"nodeType":"Block","src":"1736:74:3","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:3","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":2021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"1793:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2019,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"1757:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2023,"nodeType":"RevertStatement","src":"1750:49:3"}]}},{"expression":{"arguments":[{"id":2028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"1834:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2026,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:3","typeDescriptions":{}}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":2011,"id":2030,"nodeType":"Return","src":"1819:21:3"}]},"documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"1344:280:3","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":2032,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:3","nodeType":"FunctionDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"value","nameLocation":"1656:5:3","nodeType":"VariableDeclaration","scope":2032,"src":"1648:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:3"},"returnParameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2032,"src":"1686:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":2009,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:3","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:3"},"scope":3742,"src":"1629:218:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2059,"nodeType":"Block","src":"2204:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"2218:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2042,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":2041,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:3","memberName":"max","nodeType":"MemberAccess","src":"2226:17:3","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2053,"nodeType":"IfStatement","src":"2214:105:3","trueBody":{"id":2052,"nodeType":"Block","src":"2245:74:3","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:3","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":2049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"2302:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2047,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"2266:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2051,"nodeType":"RevertStatement","src":"2259:49:3"}]}},{"expression":{"arguments":[{"id":2056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"2343:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2054,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:3","typeDescriptions":{}}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":2039,"id":2058,"nodeType":"Return","src":"2328:21:3"}]},"documentation":{"id":2033,"nodeType":"StructuredDocumentation","src":"1853:280:3","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":2060,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:3","nodeType":"FunctionDefinition","parameters":{"id":2036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2035,"mutability":"mutable","name":"value","nameLocation":"2165:5:3","nodeType":"VariableDeclaration","scope":2060,"src":"2157:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:3"},"returnParameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2060,"src":"2195:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":2037,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:3","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:3"},"scope":3742,"src":"2138:218:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2087,"nodeType":"Block","src":"2713:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"2727:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2070,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":2069,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:3","memberName":"max","nodeType":"MemberAccess","src":"2735:17:3","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2081,"nodeType":"IfStatement","src":"2723:105:3","trueBody":{"id":2080,"nodeType":"Block","src":"2754:74:3","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":2076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:3","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":2077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"2811:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2075,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"2775:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2079,"nodeType":"RevertStatement","src":"2768:49:3"}]}},{"expression":{"arguments":[{"id":2084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"2852:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2082,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:3","typeDescriptions":{}}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":2067,"id":2086,"nodeType":"Return","src":"2837:21:3"}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"2362:280:3","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":2088,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:3","nodeType":"FunctionDefinition","parameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"value","nameLocation":"2674:5:3","nodeType":"VariableDeclaration","scope":2088,"src":"2666:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2062,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:3"},"returnParameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2088,"src":"2704:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":2065,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:3","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:3"},"scope":3742,"src":"2647:218:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2115,"nodeType":"Block","src":"3222:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"3236:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2098,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":2097,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:3","memberName":"max","nodeType":"MemberAccess","src":"3244:17:3","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2109,"nodeType":"IfStatement","src":"3232:105:3","trueBody":{"id":2108,"nodeType":"Block","src":"3263:74:3","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":2104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:3","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":2105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"3320:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2103,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"3284:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2107,"nodeType":"RevertStatement","src":"3277:49:3"}]}},{"expression":{"arguments":[{"id":2112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"3361:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2110,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:3","typeDescriptions":{}}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2095,"id":2114,"nodeType":"Return","src":"3346:21:3"}]},"documentation":{"id":2089,"nodeType":"StructuredDocumentation","src":"2871:280:3","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":2116,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:3","nodeType":"FunctionDefinition","parameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"value","nameLocation":"3183:5:3","nodeType":"VariableDeclaration","scope":2116,"src":"3175:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2090,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:3"},"returnParameters":{"id":2095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2116,"src":"3213:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2093,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:3","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:3"},"scope":3742,"src":"3156:218:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2143,"nodeType":"Block","src":"3731:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"3745:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2126,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":2125,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:3","memberName":"max","nodeType":"MemberAccess","src":"3753:17:3","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2137,"nodeType":"IfStatement","src":"3741:105:3","trueBody":{"id":2136,"nodeType":"Block","src":"3772:74:3","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:3","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":2133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"3829:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2131,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"3793:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2135,"nodeType":"RevertStatement","src":"3786:49:3"}]}},{"expression":{"arguments":[{"id":2140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"3870:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2138,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:3","typeDescriptions":{}}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":2123,"id":2142,"nodeType":"Return","src":"3855:21:3"}]},"documentation":{"id":2117,"nodeType":"StructuredDocumentation","src":"3380:280:3","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":2144,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:3","nodeType":"FunctionDefinition","parameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"value","nameLocation":"3692:5:3","nodeType":"VariableDeclaration","scope":2144,"src":"3684:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2118,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:3"},"returnParameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2144,"src":"3722:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":2121,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:3","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:3"},"scope":3742,"src":"3665:218:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2171,"nodeType":"Block","src":"4240:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"4254:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2154,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":2153,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:3","memberName":"max","nodeType":"MemberAccess","src":"4262:17:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2165,"nodeType":"IfStatement","src":"4250:105:3","trueBody":{"id":2164,"nodeType":"Block","src":"4281:74:3","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:3","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":2161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"4338:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2159,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"4302:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2163,"nodeType":"RevertStatement","src":"4295:49:3"}]}},{"expression":{"arguments":[{"id":2168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"4379:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2166,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:3","typeDescriptions":{}}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":2151,"id":2170,"nodeType":"Return","src":"4364:21:3"}]},"documentation":{"id":2145,"nodeType":"StructuredDocumentation","src":"3889:280:3","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":2172,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:3","nodeType":"FunctionDefinition","parameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"value","nameLocation":"4201:5:3","nodeType":"VariableDeclaration","scope":2172,"src":"4193:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2146,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:3"},"returnParameters":{"id":2151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2172,"src":"4231:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":2149,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:3"},"scope":3742,"src":"4174:218:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2199,"nodeType":"Block","src":"4749:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"4763:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2182,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":2181,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:3","memberName":"max","nodeType":"MemberAccess","src":"4771:17:3","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2193,"nodeType":"IfStatement","src":"4759:105:3","trueBody":{"id":2192,"nodeType":"Block","src":"4790:74:3","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":2188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:3","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":2189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"4847:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2187,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"4811:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2191,"nodeType":"RevertStatement","src":"4804:49:3"}]}},{"expression":{"arguments":[{"id":2196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"4888:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2194,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:3","typeDescriptions":{}}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":2179,"id":2198,"nodeType":"Return","src":"4873:21:3"}]},"documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"4398:280:3","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":2200,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:3","nodeType":"FunctionDefinition","parameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"value","nameLocation":"4710:5:3","nodeType":"VariableDeclaration","scope":2200,"src":"4702:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2174,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:3"},"returnParameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2200,"src":"4740:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":2177,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:3","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:3"},"scope":3742,"src":"4683:218:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2227,"nodeType":"Block","src":"5258:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"5272:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2210,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":2209,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:3","memberName":"max","nodeType":"MemberAccess","src":"5280:17:3","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2221,"nodeType":"IfStatement","src":"5268:105:3","trueBody":{"id":2220,"nodeType":"Block","src":"5299:74:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:3","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":2217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"5356:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2215,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"5320:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2219,"nodeType":"RevertStatement","src":"5313:49:3"}]}},{"expression":{"arguments":[{"id":2224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"5397:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2222,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:3","typeDescriptions":{}}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":2207,"id":2226,"nodeType":"Return","src":"5382:21:3"}]},"documentation":{"id":2201,"nodeType":"StructuredDocumentation","src":"4907:280:3","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":2228,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:3","nodeType":"FunctionDefinition","parameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"value","nameLocation":"5219:5:3","nodeType":"VariableDeclaration","scope":2228,"src":"5211:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2202,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:3"},"returnParameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2228,"src":"5249:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2205,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:3","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:3"},"scope":3742,"src":"5192:218:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2255,"nodeType":"Block","src":"5767:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5781:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2238,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":2237,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:3","memberName":"max","nodeType":"MemberAccess","src":"5789:17:3","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2249,"nodeType":"IfStatement","src":"5777:105:3","trueBody":{"id":2248,"nodeType":"Block","src":"5808:74:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:3","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":2245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5865:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2243,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"5829:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2247,"nodeType":"RevertStatement","src":"5822:49:3"}]}},{"expression":{"arguments":[{"id":2252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5906:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2250,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:3","typeDescriptions":{}}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":2235,"id":2254,"nodeType":"Return","src":"5891:21:3"}]},"documentation":{"id":2229,"nodeType":"StructuredDocumentation","src":"5416:280:3","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":2256,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:3","nodeType":"FunctionDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"mutability":"mutable","name":"value","nameLocation":"5728:5:3","nodeType":"VariableDeclaration","scope":2256,"src":"5720:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:3"},"returnParameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2256,"src":"5758:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":2233,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:3","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:3"},"scope":3742,"src":"5701:218:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2283,"nodeType":"Block","src":"6276:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"6290:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":2266,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":2265,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:3","memberName":"max","nodeType":"MemberAccess","src":"6298:17:3","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2277,"nodeType":"IfStatement","src":"6286:105:3","trueBody":{"id":2276,"nodeType":"Block","src":"6317:74:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:3","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":2273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"6374:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2271,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"6338:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2275,"nodeType":"RevertStatement","src":"6331:49:3"}]}},{"expression":{"arguments":[{"id":2280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"6415:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":2278,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:3","typeDescriptions":{}}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":2263,"id":2282,"nodeType":"Return","src":"6400:21:3"}]},"documentation":{"id":2257,"nodeType":"StructuredDocumentation","src":"5925:280:3","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":2284,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:3","nodeType":"FunctionDefinition","parameters":{"id":2260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"mutability":"mutable","name":"value","nameLocation":"6237:5:3","nodeType":"VariableDeclaration","scope":2284,"src":"6229:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2258,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:3"},"returnParameters":{"id":2263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2284,"src":"6267:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":2261,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:3","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:3"},"scope":3742,"src":"6210:218:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2311,"nodeType":"Block","src":"6785:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"6799:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":2294,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":2293,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:3","memberName":"max","nodeType":"MemberAccess","src":"6807:17:3","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2305,"nodeType":"IfStatement","src":"6795:105:3","trueBody":{"id":2304,"nodeType":"Block","src":"6826:74:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:3","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":2301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"6883:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2299,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"6847:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2303,"nodeType":"RevertStatement","src":"6840:49:3"}]}},{"expression":{"arguments":[{"id":2308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"6924:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":2306,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:3","typeDescriptions":{}}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":2291,"id":2310,"nodeType":"Return","src":"6909:21:3"}]},"documentation":{"id":2285,"nodeType":"StructuredDocumentation","src":"6434:280:3","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":2312,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:3","nodeType":"FunctionDefinition","parameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"value","nameLocation":"6746:5:3","nodeType":"VariableDeclaration","scope":2312,"src":"6738:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:3"},"returnParameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2312,"src":"6776:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":2289,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:3","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:3"},"scope":3742,"src":"6719:218:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2339,"nodeType":"Block","src":"7294:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"7308:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2322,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":2321,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:3","memberName":"max","nodeType":"MemberAccess","src":"7316:17:3","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2333,"nodeType":"IfStatement","src":"7304:105:3","trueBody":{"id":2332,"nodeType":"Block","src":"7335:74:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:3","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":2329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"7392:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2327,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"7356:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2331,"nodeType":"RevertStatement","src":"7349:49:3"}]}},{"expression":{"arguments":[{"id":2336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"7433:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2334,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:3","typeDescriptions":{}}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":2319,"id":2338,"nodeType":"Return","src":"7418:21:3"}]},"documentation":{"id":2313,"nodeType":"StructuredDocumentation","src":"6943:280:3","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":2340,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:3","nodeType":"FunctionDefinition","parameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"value","nameLocation":"7255:5:3","nodeType":"VariableDeclaration","scope":2340,"src":"7247:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:3"},"returnParameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2340,"src":"7285:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2317,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:3","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:3"},"scope":3742,"src":"7228:218:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2367,"nodeType":"Block","src":"7803:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"7817:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":2350,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":2349,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:3","memberName":"max","nodeType":"MemberAccess","src":"7825:17:3","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2361,"nodeType":"IfStatement","src":"7813:105:3","trueBody":{"id":2360,"nodeType":"Block","src":"7844:74:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:3","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":2357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"7901:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2355,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"7865:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2359,"nodeType":"RevertStatement","src":"7858:49:3"}]}},{"expression":{"arguments":[{"id":2364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"7942:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":2362,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:3","typeDescriptions":{}}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":2347,"id":2366,"nodeType":"Return","src":"7927:21:3"}]},"documentation":{"id":2341,"nodeType":"StructuredDocumentation","src":"7452:280:3","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":2368,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:3","nodeType":"FunctionDefinition","parameters":{"id":2344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2343,"mutability":"mutable","name":"value","nameLocation":"7764:5:3","nodeType":"VariableDeclaration","scope":2368,"src":"7756:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2342,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:3"},"returnParameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2368,"src":"7794:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":2345,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:3","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:3"},"scope":3742,"src":"7737:218:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2395,"nodeType":"Block","src":"8312:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"8326:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":2378,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":2377,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:3","memberName":"max","nodeType":"MemberAccess","src":"8334:17:3","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2389,"nodeType":"IfStatement","src":"8322:105:3","trueBody":{"id":2388,"nodeType":"Block","src":"8353:74:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:3","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":2385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"8410:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2383,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"8374:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2387,"nodeType":"RevertStatement","src":"8367:49:3"}]}},{"expression":{"arguments":[{"id":2392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"8451:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":2390,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:3","typeDescriptions":{}}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":2375,"id":2394,"nodeType":"Return","src":"8436:21:3"}]},"documentation":{"id":2369,"nodeType":"StructuredDocumentation","src":"7961:280:3","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":2396,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:3","nodeType":"FunctionDefinition","parameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"value","nameLocation":"8273:5:3","nodeType":"VariableDeclaration","scope":2396,"src":"8265:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2370,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:3"},"returnParameters":{"id":2375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2396,"src":"8303:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":2373,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:3","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:3"},"scope":3742,"src":"8246:218:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2423,"nodeType":"Block","src":"8821:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"8835:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":2406,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":2405,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:3","memberName":"max","nodeType":"MemberAccess","src":"8843:17:3","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2417,"nodeType":"IfStatement","src":"8831:105:3","trueBody":{"id":2416,"nodeType":"Block","src":"8862:74:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:3","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":2413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"8919:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2411,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"8883:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2415,"nodeType":"RevertStatement","src":"8876:49:3"}]}},{"expression":{"arguments":[{"id":2420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"8960:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":2418,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:3","typeDescriptions":{}}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":2403,"id":2422,"nodeType":"Return","src":"8945:21:3"}]},"documentation":{"id":2397,"nodeType":"StructuredDocumentation","src":"8470:280:3","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":2424,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:3","nodeType":"FunctionDefinition","parameters":{"id":2400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2399,"mutability":"mutable","name":"value","nameLocation":"8782:5:3","nodeType":"VariableDeclaration","scope":2424,"src":"8774:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2398,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:3"},"returnParameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2424,"src":"8812:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":2401,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:3","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:3"},"scope":3742,"src":"8755:218:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2451,"nodeType":"Block","src":"9330:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"9344:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2434,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":2433,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:3","memberName":"max","nodeType":"MemberAccess","src":"9352:17:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2445,"nodeType":"IfStatement","src":"9340:105:3","trueBody":{"id":2444,"nodeType":"Block","src":"9371:74:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:3","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":2441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"9428:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2439,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"9392:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2443,"nodeType":"RevertStatement","src":"9385:49:3"}]}},{"expression":{"arguments":[{"id":2448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"9469:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2446,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:3","typeDescriptions":{}}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":2431,"id":2450,"nodeType":"Return","src":"9454:21:3"}]},"documentation":{"id":2425,"nodeType":"StructuredDocumentation","src":"8979:280:3","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":2452,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:3","nodeType":"FunctionDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"value","nameLocation":"9291:5:3","nodeType":"VariableDeclaration","scope":2452,"src":"9283:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2426,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:3"},"returnParameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2452,"src":"9321:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2429,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:3"},"scope":3742,"src":"9264:218:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2479,"nodeType":"Block","src":"9839:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"9853:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":2462,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":2461,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:3","memberName":"max","nodeType":"MemberAccess","src":"9861:17:3","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2473,"nodeType":"IfStatement","src":"9849:105:3","trueBody":{"id":2472,"nodeType":"Block","src":"9880:74:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":2468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:3","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":2469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"9937:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2467,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"9901:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2471,"nodeType":"RevertStatement","src":"9894:49:3"}]}},{"expression":{"arguments":[{"id":2476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"9978:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":2474,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:3","typeDescriptions":{}}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":2459,"id":2478,"nodeType":"Return","src":"9963:21:3"}]},"documentation":{"id":2453,"nodeType":"StructuredDocumentation","src":"9488:280:3","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":2480,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:3","nodeType":"FunctionDefinition","parameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2455,"mutability":"mutable","name":"value","nameLocation":"9800:5:3","nodeType":"VariableDeclaration","scope":2480,"src":"9792:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:3"},"returnParameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2480,"src":"9830:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":2457,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:3","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:3"},"scope":3742,"src":"9773:218:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2507,"nodeType":"Block","src":"10348:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"10362:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":2490,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":2489,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:3","memberName":"max","nodeType":"MemberAccess","src":"10370:17:3","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2501,"nodeType":"IfStatement","src":"10358:105:3","trueBody":{"id":2500,"nodeType":"Block","src":"10389:74:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:3","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":2497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"10446:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2495,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"10410:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2499,"nodeType":"RevertStatement","src":"10403:49:3"}]}},{"expression":{"arguments":[{"id":2504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"10487:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":2502,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:3","typeDescriptions":{}}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":2487,"id":2506,"nodeType":"Return","src":"10472:21:3"}]},"documentation":{"id":2481,"nodeType":"StructuredDocumentation","src":"9997:280:3","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":2508,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:3","nodeType":"FunctionDefinition","parameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"value","nameLocation":"10309:5:3","nodeType":"VariableDeclaration","scope":2508,"src":"10301:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:3"},"returnParameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2508,"src":"10339:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":2485,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:3","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:3"},"scope":3742,"src":"10282:218:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2535,"nodeType":"Block","src":"10857:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"10871:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":2518,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":2517,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:3","memberName":"max","nodeType":"MemberAccess","src":"10879:17:3","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2529,"nodeType":"IfStatement","src":"10867:105:3","trueBody":{"id":2528,"nodeType":"Block","src":"10898:74:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":2524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:3","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":2525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"10955:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2523,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"10919:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2527,"nodeType":"RevertStatement","src":"10912:49:3"}]}},{"expression":{"arguments":[{"id":2532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"10996:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":2530,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:3","typeDescriptions":{}}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":2515,"id":2534,"nodeType":"Return","src":"10981:21:3"}]},"documentation":{"id":2509,"nodeType":"StructuredDocumentation","src":"10506:280:3","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":2536,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:3","nodeType":"FunctionDefinition","parameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2511,"mutability":"mutable","name":"value","nameLocation":"10818:5:3","nodeType":"VariableDeclaration","scope":2536,"src":"10810:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:3"},"returnParameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2536,"src":"10848:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":2513,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:3","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:3"},"scope":3742,"src":"10791:218:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2563,"nodeType":"Block","src":"11360:149:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"11374:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":2546,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":2545,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":2549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:3","memberName":"max","nodeType":"MemberAccess","src":"11382:16:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2557,"nodeType":"IfStatement","src":"11370:103:3","trueBody":{"id":2556,"nodeType":"Block","src":"11400:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":2552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:3","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":2553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"11456:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2551,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"11421:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2555,"nodeType":"RevertStatement","src":"11414:48:3"}]}},{"expression":{"arguments":[{"id":2560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"11496:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":2558,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:3","typeDescriptions":{}}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":2543,"id":2562,"nodeType":"Return","src":"11482:20:3"}]},"documentation":{"id":2537,"nodeType":"StructuredDocumentation","src":"11015:276:3","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":2564,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:3","nodeType":"FunctionDefinition","parameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"value","nameLocation":"11322:5:3","nodeType":"VariableDeclaration","scope":2564,"src":"11314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2538,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:3"},"returnParameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2564,"src":"11352:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2541,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:3"},"scope":3742,"src":"11296:213:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2591,"nodeType":"Block","src":"11860:149:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"11874:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":2574,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":2573,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:3","memberName":"max","nodeType":"MemberAccess","src":"11882:16:3","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2585,"nodeType":"IfStatement","src":"11870:103:3","trueBody":{"id":2584,"nodeType":"Block","src":"11900:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:3","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":2581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"11956:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2579,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"11921:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2583,"nodeType":"RevertStatement","src":"11914:48:3"}]}},{"expression":{"arguments":[{"id":2588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"11996:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":2586,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:3","typeDescriptions":{}}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":2571,"id":2590,"nodeType":"Return","src":"11982:20:3"}]},"documentation":{"id":2565,"nodeType":"StructuredDocumentation","src":"11515:276:3","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":2592,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:3","nodeType":"FunctionDefinition","parameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"value","nameLocation":"11822:5:3","nodeType":"VariableDeclaration","scope":2592,"src":"11814:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2566,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:3"},"returnParameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2592,"src":"11852:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":2569,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:3","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:3"},"scope":3742,"src":"11796:213:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2619,"nodeType":"Block","src":"12360:149:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"12374:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":2602,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":2601,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:3","memberName":"max","nodeType":"MemberAccess","src":"12382:16:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2613,"nodeType":"IfStatement","src":"12370:103:3","trueBody":{"id":2612,"nodeType":"Block","src":"12400:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:3","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":2609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"12456:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2607,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"12421:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2611,"nodeType":"RevertStatement","src":"12414:48:3"}]}},{"expression":{"arguments":[{"id":2616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"12496:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":2614,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:3","typeDescriptions":{}}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":2599,"id":2618,"nodeType":"Return","src":"12482:20:3"}]},"documentation":{"id":2593,"nodeType":"StructuredDocumentation","src":"12015:276:3","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":2620,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:3","nodeType":"FunctionDefinition","parameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"mutability":"mutable","name":"value","nameLocation":"12322:5:3","nodeType":"VariableDeclaration","scope":2620,"src":"12314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:3"},"returnParameters":{"id":2599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2620,"src":"12352:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":2597,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:3"},"scope":3742,"src":"12296:213:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2647,"nodeType":"Block","src":"12860:149:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"12874:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":2630,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":2629,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:3","memberName":"max","nodeType":"MemberAccess","src":"12882:16:3","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2641,"nodeType":"IfStatement","src":"12870:103:3","trueBody":{"id":2640,"nodeType":"Block","src":"12900:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":2636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:3","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":2637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"12956:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2635,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"12921:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2639,"nodeType":"RevertStatement","src":"12914:48:3"}]}},{"expression":{"arguments":[{"id":2644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"12996:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":2642,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:3","typeDescriptions":{}}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":2627,"id":2646,"nodeType":"Return","src":"12982:20:3"}]},"documentation":{"id":2621,"nodeType":"StructuredDocumentation","src":"12515:276:3","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":2648,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:3","nodeType":"FunctionDefinition","parameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"mutability":"mutable","name":"value","nameLocation":"12822:5:3","nodeType":"VariableDeclaration","scope":2648,"src":"12814:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:3"},"returnParameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2648,"src":"12852:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":2625,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:3","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:3"},"scope":3742,"src":"12796:213:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2675,"nodeType":"Block","src":"13360:149:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"13374:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2658,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":2657,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:3","memberName":"max","nodeType":"MemberAccess","src":"13382:16:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2669,"nodeType":"IfStatement","src":"13370:103:3","trueBody":{"id":2668,"nodeType":"Block","src":"13400:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:3","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":2665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"13456:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2663,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"13421:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2667,"nodeType":"RevertStatement","src":"13414:48:3"}]}},{"expression":{"arguments":[{"id":2672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"13496:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2670,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:3","typeDescriptions":{}}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":2655,"id":2674,"nodeType":"Return","src":"13482:20:3"}]},"documentation":{"id":2649,"nodeType":"StructuredDocumentation","src":"13015:276:3","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":2676,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:3","nodeType":"FunctionDefinition","parameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2651,"mutability":"mutable","name":"value","nameLocation":"13322:5:3","nodeType":"VariableDeclaration","scope":2676,"src":"13314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2650,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:3"},"returnParameters":{"id":2655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2676,"src":"13352:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2653,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:3"},"scope":3742,"src":"13296:213:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2703,"nodeType":"Block","src":"13860:149:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"13874:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":2686,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":2685,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:3","memberName":"max","nodeType":"MemberAccess","src":"13882:16:3","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2697,"nodeType":"IfStatement","src":"13870:103:3","trueBody":{"id":2696,"nodeType":"Block","src":"13900:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:3","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":2693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"13956:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2691,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"13921:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2695,"nodeType":"RevertStatement","src":"13914:48:3"}]}},{"expression":{"arguments":[{"id":2700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"13996:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":2698,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:3","typeDescriptions":{}}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":2683,"id":2702,"nodeType":"Return","src":"13982:20:3"}]},"documentation":{"id":2677,"nodeType":"StructuredDocumentation","src":"13515:276:3","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":2704,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:3","nodeType":"FunctionDefinition","parameters":{"id":2680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2679,"mutability":"mutable","name":"value","nameLocation":"13822:5:3","nodeType":"VariableDeclaration","scope":2704,"src":"13814:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2678,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:3"},"returnParameters":{"id":2683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2704,"src":"13852:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":2681,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:3","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:3"},"scope":3742,"src":"13796:213:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2731,"nodeType":"Block","src":"14360:149:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"14374:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2714,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":2713,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:3","memberName":"max","nodeType":"MemberAccess","src":"14382:16:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2725,"nodeType":"IfStatement","src":"14370:103:3","trueBody":{"id":2724,"nodeType":"Block","src":"14400:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:3","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":2721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"14456:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2719,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"14421:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2723,"nodeType":"RevertStatement","src":"14414:48:3"}]}},{"expression":{"arguments":[{"id":2728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"14496:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2726,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:3","typeDescriptions":{}}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":2711,"id":2730,"nodeType":"Return","src":"14482:20:3"}]},"documentation":{"id":2705,"nodeType":"StructuredDocumentation","src":"14015:276:3","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":2732,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:3","nodeType":"FunctionDefinition","parameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"value","nameLocation":"14322:5:3","nodeType":"VariableDeclaration","scope":2732,"src":"14314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2706,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:3"},"returnParameters":{"id":2711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2732,"src":"14352:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2709,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:3"},"scope":3742,"src":"14296:213:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2759,"nodeType":"Block","src":"14860:149:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"14874:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":2742,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":2741,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:3","memberName":"max","nodeType":"MemberAccess","src":"14882:16:3","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2753,"nodeType":"IfStatement","src":"14870:103:3","trueBody":{"id":2752,"nodeType":"Block","src":"14900:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:3","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":2749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"14956:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2747,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"14921:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2751,"nodeType":"RevertStatement","src":"14914:48:3"}]}},{"expression":{"arguments":[{"id":2756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"14996:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":2754,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:3","typeDescriptions":{}}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":2739,"id":2758,"nodeType":"Return","src":"14982:20:3"}]},"documentation":{"id":2733,"nodeType":"StructuredDocumentation","src":"14515:276:3","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":2760,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:3","nodeType":"FunctionDefinition","parameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"value","nameLocation":"14822:5:3","nodeType":"VariableDeclaration","scope":2760,"src":"14814:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2734,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:3"},"returnParameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2760,"src":"14852:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":2737,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:3","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:3"},"scope":3742,"src":"14796:213:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2787,"nodeType":"Block","src":"15360:149:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"15374:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2770,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":2769,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:3","memberName":"max","nodeType":"MemberAccess","src":"15382:16:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2781,"nodeType":"IfStatement","src":"15370:103:3","trueBody":{"id":2780,"nodeType":"Block","src":"15400:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:3","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":2777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"15456:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2775,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"15421:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2779,"nodeType":"RevertStatement","src":"15414:48:3"}]}},{"expression":{"arguments":[{"id":2784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"15496:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2782,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:3","typeDescriptions":{}}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":2767,"id":2786,"nodeType":"Return","src":"15482:20:3"}]},"documentation":{"id":2761,"nodeType":"StructuredDocumentation","src":"15015:276:3","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":2788,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:3","nodeType":"FunctionDefinition","parameters":{"id":2764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2763,"mutability":"mutable","name":"value","nameLocation":"15322:5:3","nodeType":"VariableDeclaration","scope":2788,"src":"15314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2762,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:3"},"returnParameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2788,"src":"15352:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2765,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:3"},"scope":3742,"src":"15296:213:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2815,"nodeType":"Block","src":"15860:149:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"15874:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":2798,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":2797,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:3","memberName":"max","nodeType":"MemberAccess","src":"15882:16:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2809,"nodeType":"IfStatement","src":"15870:103:3","trueBody":{"id":2808,"nodeType":"Block","src":"15900:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:3","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":2805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"15956:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2803,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"15921:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2807,"nodeType":"RevertStatement","src":"15914:48:3"}]}},{"expression":{"arguments":[{"id":2812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"15996:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":2810,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:3","typeDescriptions":{}}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":2795,"id":2814,"nodeType":"Return","src":"15982:20:3"}]},"documentation":{"id":2789,"nodeType":"StructuredDocumentation","src":"15515:276:3","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":2816,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:3","nodeType":"FunctionDefinition","parameters":{"id":2792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2791,"mutability":"mutable","name":"value","nameLocation":"15822:5:3","nodeType":"VariableDeclaration","scope":2816,"src":"15814:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2790,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:3"},"returnParameters":{"id":2795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2816,"src":"15852:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2793,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:3"},"scope":3742,"src":"15796:213:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2843,"nodeType":"Block","src":"16360:149:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"16374:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":2826,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":2825,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:3","memberName":"max","nodeType":"MemberAccess","src":"16382:16:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2837,"nodeType":"IfStatement","src":"16370:103:3","trueBody":{"id":2836,"nodeType":"Block","src":"16400:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:3","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":2833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"16456:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2831,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"16421:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2835,"nodeType":"RevertStatement","src":"16414:48:3"}]}},{"expression":{"arguments":[{"id":2840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"16496:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":2838,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:3","typeDescriptions":{}}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":2823,"id":2842,"nodeType":"Return","src":"16482:20:3"}]},"documentation":{"id":2817,"nodeType":"StructuredDocumentation","src":"16015:276:3","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":2844,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:3","nodeType":"FunctionDefinition","parameters":{"id":2820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"mutability":"mutable","name":"value","nameLocation":"16322:5:3","nodeType":"VariableDeclaration","scope":2844,"src":"16314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2818,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:3"},"returnParameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2844,"src":"16352:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2821,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:3"},"scope":3742,"src":"16296:213:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2871,"nodeType":"Block","src":"16854:146:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"16868:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2854,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2853,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:3","memberName":"max","nodeType":"MemberAccess","src":"16876:15:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2865,"nodeType":"IfStatement","src":"16864:101:3","trueBody":{"id":2864,"nodeType":"Block","src":"16893:72:3","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:3","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":2861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"16948:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2859,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"16914:30:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2863,"nodeType":"RevertStatement","src":"16907:47:3"}]}},{"expression":{"arguments":[{"id":2868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"16987:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2866,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:3","typeDescriptions":{}}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2851,"id":2870,"nodeType":"Return","src":"16974:19:3"}]},"documentation":{"id":2845,"nodeType":"StructuredDocumentation","src":"16515:272:3","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":2872,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:3","nodeType":"FunctionDefinition","parameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"value","nameLocation":"16817:5:3","nodeType":"VariableDeclaration","scope":2872,"src":"16809:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2846,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:3"},"returnParameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2872,"src":"16847:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2849,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:3"},"scope":3742,"src":"16792:208:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2894,"nodeType":"Block","src":"17236:128:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"17250:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2888,"nodeType":"IfStatement","src":"17246:81:3","trueBody":{"id":2887,"nodeType":"Block","src":"17261:66:3","statements":[{"errorCall":{"arguments":[{"id":2884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"17310:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2883,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"17282:27:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2886,"nodeType":"RevertStatement","src":"17275:41:3"}]}},{"expression":{"arguments":[{"id":2891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"17351:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2889,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:3","typeDescriptions":{}}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2879,"id":2893,"nodeType":"Return","src":"17336:21:3"}]},"documentation":{"id":2873,"nodeType":"StructuredDocumentation","src":"17006:160:3","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":2895,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:3","nodeType":"FunctionDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"value","nameLocation":"17197:5:3","nodeType":"VariableDeclaration","scope":2895,"src":"17190:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2874,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:3"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2895,"src":"17227:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:3"},"scope":3742,"src":"17171:193:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2920,"nodeType":"Block","src":"17761:150:3","statements":[{"expression":{"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2903,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"17771:10:3","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"17791:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":2904,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:3","typeDescriptions":{}}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:3","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":2909,"nodeType":"ExpressionStatement","src":"17771:26:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2910,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"17811:10:3","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"17825:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2919,"nodeType":"IfStatement","src":"17807:98:3","trueBody":{"id":2918,"nodeType":"Block","src":"17832:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:3","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":2915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"17888:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2913,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"17853:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2917,"nodeType":"RevertStatement","src":"17846:48:3"}]}}]},"documentation":{"id":2896,"nodeType":"StructuredDocumentation","src":"17370:312:3","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":2921,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:3","nodeType":"FunctionDefinition","parameters":{"id":2899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2898,"mutability":"mutable","name":"value","nameLocation":"17712:5:3","nodeType":"VariableDeclaration","scope":2921,"src":"17705:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2897,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:3"},"returnParameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:3","nodeType":"VariableDeclaration","scope":2921,"src":"17742:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":2900,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:3","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:3"},"scope":3742,"src":"17687:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2946,"nodeType":"Block","src":"18308:150:3","statements":[{"expression":{"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2929,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"18318:10:3","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"18338:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":2930,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:3","typeDescriptions":{}}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:3","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":2935,"nodeType":"ExpressionStatement","src":"18318:26:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2936,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"18358:10:3","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"18372:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2945,"nodeType":"IfStatement","src":"18354:98:3","trueBody":{"id":2944,"nodeType":"Block","src":"18379:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":2940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:3","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":2941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"18435:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2939,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"18400:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2943,"nodeType":"RevertStatement","src":"18393:48:3"}]}}]},"documentation":{"id":2922,"nodeType":"StructuredDocumentation","src":"17917:312:3","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":2947,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:3","nodeType":"FunctionDefinition","parameters":{"id":2925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2924,"mutability":"mutable","name":"value","nameLocation":"18259:5:3","nodeType":"VariableDeclaration","scope":2947,"src":"18252:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2923,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:3"},"returnParameters":{"id":2928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2927,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:3","nodeType":"VariableDeclaration","scope":2947,"src":"18289:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":2926,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:3","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:3"},"scope":3742,"src":"18234:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2972,"nodeType":"Block","src":"18855:150:3","statements":[{"expression":{"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2955,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"18865:10:3","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"18885:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":2956,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:3","typeDescriptions":{}}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:3","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":2961,"nodeType":"ExpressionStatement","src":"18865:26:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2962,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"18905:10:3","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"18919:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2971,"nodeType":"IfStatement","src":"18901:98:3","trueBody":{"id":2970,"nodeType":"Block","src":"18926:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:3","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":2967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"18982:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2965,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"18947:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2969,"nodeType":"RevertStatement","src":"18940:48:3"}]}}]},"documentation":{"id":2948,"nodeType":"StructuredDocumentation","src":"18464:312:3","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":2973,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:3","nodeType":"FunctionDefinition","parameters":{"id":2951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2950,"mutability":"mutable","name":"value","nameLocation":"18806:5:3","nodeType":"VariableDeclaration","scope":2973,"src":"18799:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2949,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:3"},"returnParameters":{"id":2954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2953,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:3","nodeType":"VariableDeclaration","scope":2973,"src":"18836:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":2952,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:3","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:3"},"scope":3742,"src":"18781:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2998,"nodeType":"Block","src":"19402:150:3","statements":[{"expression":{"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2981,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"19412:10:3","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"19432:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":2982,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:3","typeDescriptions":{}}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:3","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":2987,"nodeType":"ExpressionStatement","src":"19412:26:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2988,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"19452:10:3","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"19466:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2997,"nodeType":"IfStatement","src":"19448:98:3","trueBody":{"id":2996,"nodeType":"Block","src":"19473:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":2992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:3","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":2993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"19529:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2991,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"19494:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2995,"nodeType":"RevertStatement","src":"19487:48:3"}]}}]},"documentation":{"id":2974,"nodeType":"StructuredDocumentation","src":"19011:312:3","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":2999,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:3","nodeType":"FunctionDefinition","parameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"value","nameLocation":"19353:5:3","nodeType":"VariableDeclaration","scope":2999,"src":"19346:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2975,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:3"},"returnParameters":{"id":2980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:3","nodeType":"VariableDeclaration","scope":2999,"src":"19383:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":2978,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:3","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:3"},"scope":3742,"src":"19328:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3024,"nodeType":"Block","src":"19949:150:3","statements":[{"expression":{"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3007,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"19959:10:3","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"19979:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":3008,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:3","typeDescriptions":{}}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:3","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":3013,"nodeType":"ExpressionStatement","src":"19959:26:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3014,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"19999:10:3","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"20013:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3023,"nodeType":"IfStatement","src":"19995:98:3","trueBody":{"id":3022,"nodeType":"Block","src":"20020:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:3","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"20076:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3017,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"20041:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3021,"nodeType":"RevertStatement","src":"20034:48:3"}]}}]},"documentation":{"id":3000,"nodeType":"StructuredDocumentation","src":"19558:312:3","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3025,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:3","nodeType":"FunctionDefinition","parameters":{"id":3003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3002,"mutability":"mutable","name":"value","nameLocation":"19900:5:3","nodeType":"VariableDeclaration","scope":3025,"src":"19893:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3001,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:3"},"returnParameters":{"id":3006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3005,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:3","nodeType":"VariableDeclaration","scope":3025,"src":"19930:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":3004,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:3","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:3"},"scope":3742,"src":"19875:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3050,"nodeType":"Block","src":"20496:150:3","statements":[{"expression":{"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3033,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"20506:10:3","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"20526:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":3034,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:3","typeDescriptions":{}}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:3","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":3039,"nodeType":"ExpressionStatement","src":"20506:26:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3040,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"20546:10:3","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"20560:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3049,"nodeType":"IfStatement","src":"20542:98:3","trueBody":{"id":3048,"nodeType":"Block","src":"20567:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:3","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"20623:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3043,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"20588:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3047,"nodeType":"RevertStatement","src":"20581:48:3"}]}}]},"documentation":{"id":3026,"nodeType":"StructuredDocumentation","src":"20105:312:3","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3051,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:3","nodeType":"FunctionDefinition","parameters":{"id":3029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3028,"mutability":"mutable","name":"value","nameLocation":"20447:5:3","nodeType":"VariableDeclaration","scope":3051,"src":"20440:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3027,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:3"},"returnParameters":{"id":3032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3031,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:3","nodeType":"VariableDeclaration","scope":3051,"src":"20477:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":3030,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:3","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:3"},"scope":3742,"src":"20422:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3076,"nodeType":"Block","src":"21043:150:3","statements":[{"expression":{"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3059,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"21053:10:3","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"21073:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":3060,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:3","typeDescriptions":{}}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:3","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":3065,"nodeType":"ExpressionStatement","src":"21053:26:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3066,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"21093:10:3","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"21107:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3075,"nodeType":"IfStatement","src":"21089:98:3","trueBody":{"id":3074,"nodeType":"Block","src":"21114:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:3","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"21170:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3069,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"21135:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3073,"nodeType":"RevertStatement","src":"21128:48:3"}]}}]},"documentation":{"id":3052,"nodeType":"StructuredDocumentation","src":"20652:312:3","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3077,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:3","nodeType":"FunctionDefinition","parameters":{"id":3055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3054,"mutability":"mutable","name":"value","nameLocation":"20994:5:3","nodeType":"VariableDeclaration","scope":3077,"src":"20987:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3053,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:3"},"returnParameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3057,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:3","nodeType":"VariableDeclaration","scope":3077,"src":"21024:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":3056,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:3","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:3"},"scope":3742,"src":"20969:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3102,"nodeType":"Block","src":"21590:150:3","statements":[{"expression":{"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3085,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"21600:10:3","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"21620:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":3086,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:3","typeDescriptions":{}}},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:3","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":3091,"nodeType":"ExpressionStatement","src":"21600:26:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3092,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"21640:10:3","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"21654:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3101,"nodeType":"IfStatement","src":"21636:98:3","trueBody":{"id":3100,"nodeType":"Block","src":"21661:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:3","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"21717:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3095,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"21682:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3099,"nodeType":"RevertStatement","src":"21675:48:3"}]}}]},"documentation":{"id":3078,"nodeType":"StructuredDocumentation","src":"21199:312:3","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3103,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:3","nodeType":"FunctionDefinition","parameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3080,"mutability":"mutable","name":"value","nameLocation":"21541:5:3","nodeType":"VariableDeclaration","scope":3103,"src":"21534:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3079,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:3"},"returnParameters":{"id":3084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3083,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:3","nodeType":"VariableDeclaration","scope":3103,"src":"21571:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":3082,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:3","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:3"},"scope":3742,"src":"21516:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3128,"nodeType":"Block","src":"22137:150:3","statements":[{"expression":{"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3111,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"22147:10:3","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"22167:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":3112,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:3","typeDescriptions":{}}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:3","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":3117,"nodeType":"ExpressionStatement","src":"22147:26:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3118,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"22187:10:3","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"22201:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3127,"nodeType":"IfStatement","src":"22183:98:3","trueBody":{"id":3126,"nodeType":"Block","src":"22208:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:3","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"22264:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3121,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"22229:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3125,"nodeType":"RevertStatement","src":"22222:48:3"}]}}]},"documentation":{"id":3104,"nodeType":"StructuredDocumentation","src":"21746:312:3","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3129,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:3","nodeType":"FunctionDefinition","parameters":{"id":3107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3106,"mutability":"mutable","name":"value","nameLocation":"22088:5:3","nodeType":"VariableDeclaration","scope":3129,"src":"22081:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3105,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:3"},"returnParameters":{"id":3110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3109,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:3","nodeType":"VariableDeclaration","scope":3129,"src":"22118:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":3108,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:3","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:3"},"scope":3742,"src":"22063:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3154,"nodeType":"Block","src":"22684:150:3","statements":[{"expression":{"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3137,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"22694:10:3","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"22714:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":3138,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:3","typeDescriptions":{}}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:3","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":3143,"nodeType":"ExpressionStatement","src":"22694:26:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3144,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"22734:10:3","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"22748:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3153,"nodeType":"IfStatement","src":"22730:98:3","trueBody":{"id":3152,"nodeType":"Block","src":"22755:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:3","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"22811:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3147,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"22776:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3151,"nodeType":"RevertStatement","src":"22769:48:3"}]}}]},"documentation":{"id":3130,"nodeType":"StructuredDocumentation","src":"22293:312:3","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3155,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:3","nodeType":"FunctionDefinition","parameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"mutability":"mutable","name":"value","nameLocation":"22635:5:3","nodeType":"VariableDeclaration","scope":3155,"src":"22628:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3131,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:3"},"returnParameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3135,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:3","nodeType":"VariableDeclaration","scope":3155,"src":"22665:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":3134,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:3","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:3"},"scope":3742,"src":"22610:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3180,"nodeType":"Block","src":"23231:150:3","statements":[{"expression":{"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3163,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"23241:10:3","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"23261:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":3164,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:3","typeDescriptions":{}}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:3","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":3169,"nodeType":"ExpressionStatement","src":"23241:26:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3170,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"23281:10:3","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"23295:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3179,"nodeType":"IfStatement","src":"23277:98:3","trueBody":{"id":3178,"nodeType":"Block","src":"23302:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:3","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":3175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"23358:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3173,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"23323:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3177,"nodeType":"RevertStatement","src":"23316:48:3"}]}}]},"documentation":{"id":3156,"nodeType":"StructuredDocumentation","src":"22840:312:3","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3181,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:3","nodeType":"FunctionDefinition","parameters":{"id":3159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3158,"mutability":"mutable","name":"value","nameLocation":"23182:5:3","nodeType":"VariableDeclaration","scope":3181,"src":"23175:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3157,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:3"},"returnParameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3161,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:3","nodeType":"VariableDeclaration","scope":3181,"src":"23212:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":3160,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:3","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:3"},"scope":3742,"src":"23157:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3206,"nodeType":"Block","src":"23778:150:3","statements":[{"expression":{"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3189,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"23788:10:3","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"23808:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":3190,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:3","typeDescriptions":{}}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:3","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":3195,"nodeType":"ExpressionStatement","src":"23788:26:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3196,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"23828:10:3","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"23842:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3205,"nodeType":"IfStatement","src":"23824:98:3","trueBody":{"id":3204,"nodeType":"Block","src":"23849:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:3","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"23905:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3199,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"23870:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3203,"nodeType":"RevertStatement","src":"23863:48:3"}]}}]},"documentation":{"id":3182,"nodeType":"StructuredDocumentation","src":"23387:312:3","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3207,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:3","nodeType":"FunctionDefinition","parameters":{"id":3185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3184,"mutability":"mutable","name":"value","nameLocation":"23729:5:3","nodeType":"VariableDeclaration","scope":3207,"src":"23722:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3183,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:3"},"returnParameters":{"id":3188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3187,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:3","nodeType":"VariableDeclaration","scope":3207,"src":"23759:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":3186,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:3","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:3"},"scope":3742,"src":"23704:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3232,"nodeType":"Block","src":"24325:150:3","statements":[{"expression":{"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3215,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"24335:10:3","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"24355:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":3216,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:3","typeDescriptions":{}}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:3","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":3221,"nodeType":"ExpressionStatement","src":"24335:26:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3222,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"24375:10:3","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"24389:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3231,"nodeType":"IfStatement","src":"24371:98:3","trueBody":{"id":3230,"nodeType":"Block","src":"24396:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:3","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"24452:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3225,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"24417:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3229,"nodeType":"RevertStatement","src":"24410:48:3"}]}}]},"documentation":{"id":3208,"nodeType":"StructuredDocumentation","src":"23934:312:3","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3233,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:3","nodeType":"FunctionDefinition","parameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"mutability":"mutable","name":"value","nameLocation":"24276:5:3","nodeType":"VariableDeclaration","scope":3233,"src":"24269:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3209,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:3"},"returnParameters":{"id":3214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:3","nodeType":"VariableDeclaration","scope":3233,"src":"24306:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":3212,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:3","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:3"},"scope":3742,"src":"24251:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3258,"nodeType":"Block","src":"24872:150:3","statements":[{"expression":{"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3241,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"24882:10:3","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"24902:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":3242,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:3","typeDescriptions":{}}},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:3","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":3247,"nodeType":"ExpressionStatement","src":"24882:26:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3248,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"24922:10:3","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"24936:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3257,"nodeType":"IfStatement","src":"24918:98:3","trueBody":{"id":3256,"nodeType":"Block","src":"24943:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:3","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":3253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"24999:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3251,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"24964:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3255,"nodeType":"RevertStatement","src":"24957:48:3"}]}}]},"documentation":{"id":3234,"nodeType":"StructuredDocumentation","src":"24481:312:3","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3259,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:3","nodeType":"FunctionDefinition","parameters":{"id":3237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3236,"mutability":"mutable","name":"value","nameLocation":"24823:5:3","nodeType":"VariableDeclaration","scope":3259,"src":"24816:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3235,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:3"},"returnParameters":{"id":3240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3239,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:3","nodeType":"VariableDeclaration","scope":3259,"src":"24853:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":3238,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:3","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:3"},"scope":3742,"src":"24798:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3284,"nodeType":"Block","src":"25419:150:3","statements":[{"expression":{"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3267,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"25429:10:3","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"25449:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":3268,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:3","typeDescriptions":{}}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:3","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":3273,"nodeType":"ExpressionStatement","src":"25429:26:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3274,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"25469:10:3","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"25483:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3283,"nodeType":"IfStatement","src":"25465:98:3","trueBody":{"id":3282,"nodeType":"Block","src":"25490:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:3","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"25546:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3277,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"25511:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3281,"nodeType":"RevertStatement","src":"25504:48:3"}]}}]},"documentation":{"id":3260,"nodeType":"StructuredDocumentation","src":"25028:312:3","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3285,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:3","nodeType":"FunctionDefinition","parameters":{"id":3263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3262,"mutability":"mutable","name":"value","nameLocation":"25370:5:3","nodeType":"VariableDeclaration","scope":3285,"src":"25363:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3261,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:3"},"returnParameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:3","nodeType":"VariableDeclaration","scope":3285,"src":"25400:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":3264,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:3","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:3"},"scope":3742,"src":"25345:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3310,"nodeType":"Block","src":"25966:150:3","statements":[{"expression":{"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3293,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"25976:10:3","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"25996:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":3294,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:3","typeDescriptions":{}}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:3","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":3299,"nodeType":"ExpressionStatement","src":"25976:26:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3300,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"26016:10:3","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"26030:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3309,"nodeType":"IfStatement","src":"26012:98:3","trueBody":{"id":3308,"nodeType":"Block","src":"26037:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:3","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"26093:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3303,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"26058:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3307,"nodeType":"RevertStatement","src":"26051:48:3"}]}}]},"documentation":{"id":3286,"nodeType":"StructuredDocumentation","src":"25575:312:3","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3311,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:3","nodeType":"FunctionDefinition","parameters":{"id":3289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3288,"mutability":"mutable","name":"value","nameLocation":"25917:5:3","nodeType":"VariableDeclaration","scope":3311,"src":"25910:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3287,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:3"},"returnParameters":{"id":3292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:3","nodeType":"VariableDeclaration","scope":3311,"src":"25947:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3290,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:3","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:3"},"scope":3742,"src":"25892:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3336,"nodeType":"Block","src":"26513:150:3","statements":[{"expression":{"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3319,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"26523:10:3","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"26543:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":3320,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:3","typeDescriptions":{}}},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:3","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":3325,"nodeType":"ExpressionStatement","src":"26523:26:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3326,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"26563:10:3","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"26577:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3335,"nodeType":"IfStatement","src":"26559:98:3","trueBody":{"id":3334,"nodeType":"Block","src":"26584:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":3330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:3","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":3331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"26640:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3329,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"26605:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3333,"nodeType":"RevertStatement","src":"26598:48:3"}]}}]},"documentation":{"id":3312,"nodeType":"StructuredDocumentation","src":"26122:312:3","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":3337,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:3","nodeType":"FunctionDefinition","parameters":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"value","nameLocation":"26464:5:3","nodeType":"VariableDeclaration","scope":3337,"src":"26457:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3313,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:3"},"returnParameters":{"id":3318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3317,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:3","nodeType":"VariableDeclaration","scope":3337,"src":"26494:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":3316,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:3","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:3"},"scope":3742,"src":"26439:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3362,"nodeType":"Block","src":"27060:150:3","statements":[{"expression":{"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3345,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"27070:10:3","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"27090:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":3346,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:3","typeDescriptions":{}}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:3","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":3351,"nodeType":"ExpressionStatement","src":"27070:26:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3352,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"27110:10:3","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"27124:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3361,"nodeType":"IfStatement","src":"27106:98:3","trueBody":{"id":3360,"nodeType":"Block","src":"27131:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":3356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:3","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":3357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"27187:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3355,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"27152:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3359,"nodeType":"RevertStatement","src":"27145:48:3"}]}}]},"documentation":{"id":3338,"nodeType":"StructuredDocumentation","src":"26669:312:3","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":3363,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:3","nodeType":"FunctionDefinition","parameters":{"id":3341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3340,"mutability":"mutable","name":"value","nameLocation":"27011:5:3","nodeType":"VariableDeclaration","scope":3363,"src":"27004:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3339,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:3"},"returnParameters":{"id":3344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3343,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:3","nodeType":"VariableDeclaration","scope":3363,"src":"27041:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":3342,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:3","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:3"},"scope":3742,"src":"26986:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3388,"nodeType":"Block","src":"27607:150:3","statements":[{"expression":{"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3371,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"27617:10:3","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"27637:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":3372,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:3","typeDescriptions":{}}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:3","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":3377,"nodeType":"ExpressionStatement","src":"27617:26:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3378,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"27657:10:3","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"27671:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3387,"nodeType":"IfStatement","src":"27653:98:3","trueBody":{"id":3386,"nodeType":"Block","src":"27678:73:3","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":3382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:3","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":3383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"27734:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3381,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"27699:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3385,"nodeType":"RevertStatement","src":"27692:48:3"}]}}]},"documentation":{"id":3364,"nodeType":"StructuredDocumentation","src":"27216:312:3","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":3389,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:3","nodeType":"FunctionDefinition","parameters":{"id":3367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3366,"mutability":"mutable","name":"value","nameLocation":"27558:5:3","nodeType":"VariableDeclaration","scope":3389,"src":"27551:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3365,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:3"},"returnParameters":{"id":3370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3369,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:3","nodeType":"VariableDeclaration","scope":3389,"src":"27588:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":3368,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:3","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:3"},"scope":3742,"src":"27533:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3414,"nodeType":"Block","src":"28147:148:3","statements":[{"expression":{"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3397,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"28157:10:3","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"28176:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":3398,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:3","typeDescriptions":{}}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:3","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":3403,"nodeType":"ExpressionStatement","src":"28157:25:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3404,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"28196:10:3","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"28210:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3413,"nodeType":"IfStatement","src":"28192:97:3","trueBody":{"id":3412,"nodeType":"Block","src":"28217:72:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:3","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":3409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"28272:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3407,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"28238:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3411,"nodeType":"RevertStatement","src":"28231:47:3"}]}}]},"documentation":{"id":3390,"nodeType":"StructuredDocumentation","src":"27763:307:3","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":3415,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:3","nodeType":"FunctionDefinition","parameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3392,"mutability":"mutable","name":"value","nameLocation":"28099:5:3","nodeType":"VariableDeclaration","scope":3415,"src":"28092:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3391,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:3"},"returnParameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:3","nodeType":"VariableDeclaration","scope":3415,"src":"28129:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":3394,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:3","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:3"},"scope":3742,"src":"28075:220:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3440,"nodeType":"Block","src":"28685:148:3","statements":[{"expression":{"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3423,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"28695:10:3","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"28714:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":3424,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:3","typeDescriptions":{}}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:3","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":3429,"nodeType":"ExpressionStatement","src":"28695:25:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3430,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"28734:10:3","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"28748:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3439,"nodeType":"IfStatement","src":"28730:97:3","trueBody":{"id":3438,"nodeType":"Block","src":"28755:72:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:3","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":3435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"28810:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3433,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"28776:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3437,"nodeType":"RevertStatement","src":"28769:47:3"}]}}]},"documentation":{"id":3416,"nodeType":"StructuredDocumentation","src":"28301:307:3","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":3441,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:3","nodeType":"FunctionDefinition","parameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3418,"mutability":"mutable","name":"value","nameLocation":"28637:5:3","nodeType":"VariableDeclaration","scope":3441,"src":"28630:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3417,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:3"},"returnParameters":{"id":3422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3421,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:3","nodeType":"VariableDeclaration","scope":3441,"src":"28667:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":3420,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:3","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:3"},"scope":3742,"src":"28613:220:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3466,"nodeType":"Block","src":"29223:148:3","statements":[{"expression":{"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3449,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"29233:10:3","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"29252:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":3450,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:3","typeDescriptions":{}}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:3","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":3455,"nodeType":"ExpressionStatement","src":"29233:25:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3456,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"29272:10:3","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"29286:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3465,"nodeType":"IfStatement","src":"29268:97:3","trueBody":{"id":3464,"nodeType":"Block","src":"29293:72:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:3","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":3461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"29348:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3459,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"29314:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3463,"nodeType":"RevertStatement","src":"29307:47:3"}]}}]},"documentation":{"id":3442,"nodeType":"StructuredDocumentation","src":"28839:307:3","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":3467,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:3","nodeType":"FunctionDefinition","parameters":{"id":3445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3444,"mutability":"mutable","name":"value","nameLocation":"29175:5:3","nodeType":"VariableDeclaration","scope":3467,"src":"29168:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3443,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:3"},"returnParameters":{"id":3448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3447,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:3","nodeType":"VariableDeclaration","scope":3467,"src":"29205:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":3446,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:3","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:3"},"scope":3742,"src":"29151:220:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3492,"nodeType":"Block","src":"29761:148:3","statements":[{"expression":{"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3475,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"29771:10:3","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"29790:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":3476,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:3","typeDescriptions":{}}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:3","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":3481,"nodeType":"ExpressionStatement","src":"29771:25:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3482,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"29810:10:3","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"29824:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3491,"nodeType":"IfStatement","src":"29806:97:3","trueBody":{"id":3490,"nodeType":"Block","src":"29831:72:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":3486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:3","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":3487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"29886:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3485,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"29852:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3489,"nodeType":"RevertStatement","src":"29845:47:3"}]}}]},"documentation":{"id":3468,"nodeType":"StructuredDocumentation","src":"29377:307:3","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":3493,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:3","nodeType":"FunctionDefinition","parameters":{"id":3471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3470,"mutability":"mutable","name":"value","nameLocation":"29713:5:3","nodeType":"VariableDeclaration","scope":3493,"src":"29706:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3469,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:3"},"returnParameters":{"id":3474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3473,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:3","nodeType":"VariableDeclaration","scope":3493,"src":"29743:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":3472,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:3","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:3"},"scope":3742,"src":"29689:220:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3518,"nodeType":"Block","src":"30299:148:3","statements":[{"expression":{"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3501,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"30309:10:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"30328:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":3502,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:3","typeDescriptions":{}}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":3507,"nodeType":"ExpressionStatement","src":"30309:25:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3508,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"30348:10:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"30362:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3517,"nodeType":"IfStatement","src":"30344:97:3","trueBody":{"id":3516,"nodeType":"Block","src":"30369:72:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":3512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:3","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":3513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"30424:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3511,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"30390:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3515,"nodeType":"RevertStatement","src":"30383:47:3"}]}}]},"documentation":{"id":3494,"nodeType":"StructuredDocumentation","src":"29915:307:3","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":3519,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:3","nodeType":"FunctionDefinition","parameters":{"id":3497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"value","nameLocation":"30251:5:3","nodeType":"VariableDeclaration","scope":3519,"src":"30244:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3495,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:3"},"returnParameters":{"id":3500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3499,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:3","nodeType":"VariableDeclaration","scope":3519,"src":"30281:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3498,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:3"},"scope":3742,"src":"30227:220:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3544,"nodeType":"Block","src":"30837:148:3","statements":[{"expression":{"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3527,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"30847:10:3","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"30866:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":3528,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:3","typeDescriptions":{}}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:3","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":3533,"nodeType":"ExpressionStatement","src":"30847:25:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3534,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"30886:10:3","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"30900:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3543,"nodeType":"IfStatement","src":"30882:97:3","trueBody":{"id":3542,"nodeType":"Block","src":"30907:72:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:3","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":3539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"30962:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3537,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"30928:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3541,"nodeType":"RevertStatement","src":"30921:47:3"}]}}]},"documentation":{"id":3520,"nodeType":"StructuredDocumentation","src":"30453:307:3","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":3545,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:3","nodeType":"FunctionDefinition","parameters":{"id":3523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3522,"mutability":"mutable","name":"value","nameLocation":"30789:5:3","nodeType":"VariableDeclaration","scope":3545,"src":"30782:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3521,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:3"},"returnParameters":{"id":3526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3525,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:3","nodeType":"VariableDeclaration","scope":3545,"src":"30819:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":3524,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:3","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:3"},"scope":3742,"src":"30765:220:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3570,"nodeType":"Block","src":"31375:148:3","statements":[{"expression":{"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3553,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"31385:10:3","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"31404:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":3554,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:3","typeDescriptions":{}}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:3","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":3559,"nodeType":"ExpressionStatement","src":"31385:25:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3560,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"31424:10:3","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"31438:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3569,"nodeType":"IfStatement","src":"31420:97:3","trueBody":{"id":3568,"nodeType":"Block","src":"31445:72:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":3564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:3","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":3565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"31500:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3563,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"31466:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3567,"nodeType":"RevertStatement","src":"31459:47:3"}]}}]},"documentation":{"id":3546,"nodeType":"StructuredDocumentation","src":"30991:307:3","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":3571,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:3","nodeType":"FunctionDefinition","parameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"value","nameLocation":"31327:5:3","nodeType":"VariableDeclaration","scope":3571,"src":"31320:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3547,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:3"},"returnParameters":{"id":3552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3551,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:3","nodeType":"VariableDeclaration","scope":3571,"src":"31357:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":3550,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:3","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:3"},"scope":3742,"src":"31303:220:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3596,"nodeType":"Block","src":"31913:148:3","statements":[{"expression":{"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3579,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"31923:10:3","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"31942:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":3580,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:3","typeDescriptions":{}}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:3","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":3585,"nodeType":"ExpressionStatement","src":"31923:25:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3586,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"31962:10:3","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"31976:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3595,"nodeType":"IfStatement","src":"31958:97:3","trueBody":{"id":3594,"nodeType":"Block","src":"31983:72:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:3","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":3591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"32038:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3589,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"32004:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3593,"nodeType":"RevertStatement","src":"31997:47:3"}]}}]},"documentation":{"id":3572,"nodeType":"StructuredDocumentation","src":"31529:307:3","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":3597,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:3","nodeType":"FunctionDefinition","parameters":{"id":3575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3574,"mutability":"mutable","name":"value","nameLocation":"31865:5:3","nodeType":"VariableDeclaration","scope":3597,"src":"31858:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3573,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:3"},"returnParameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3577,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:3","nodeType":"VariableDeclaration","scope":3597,"src":"31895:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":3576,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:3","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:3"},"scope":3742,"src":"31841:220:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3622,"nodeType":"Block","src":"32451:148:3","statements":[{"expression":{"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3605,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"32461:10:3","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"32480:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3606,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:3","typeDescriptions":{}}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:3","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":3611,"nodeType":"ExpressionStatement","src":"32461:25:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3612,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"32500:10:3","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"32514:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3621,"nodeType":"IfStatement","src":"32496:97:3","trueBody":{"id":3620,"nodeType":"Block","src":"32521:72:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:3","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":3617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"32576:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3615,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"32542:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3619,"nodeType":"RevertStatement","src":"32535:47:3"}]}}]},"documentation":{"id":3598,"nodeType":"StructuredDocumentation","src":"32067:307:3","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":3623,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:3","nodeType":"FunctionDefinition","parameters":{"id":3601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3600,"mutability":"mutable","name":"value","nameLocation":"32403:5:3","nodeType":"VariableDeclaration","scope":3623,"src":"32396:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3599,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:3"},"returnParameters":{"id":3604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3603,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:3","nodeType":"VariableDeclaration","scope":3623,"src":"32433:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":3602,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:3","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:3"},"scope":3742,"src":"32379:220:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3648,"nodeType":"Block","src":"32989:148:3","statements":[{"expression":{"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3631,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"32999:10:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"33018:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":3632,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:3","typeDescriptions":{}}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":3637,"nodeType":"ExpressionStatement","src":"32999:25:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3638,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"33038:10:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"33052:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3647,"nodeType":"IfStatement","src":"33034:97:3","trueBody":{"id":3646,"nodeType":"Block","src":"33059:72:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:3","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":3643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"33114:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3641,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"33080:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3645,"nodeType":"RevertStatement","src":"33073:47:3"}]}}]},"documentation":{"id":3624,"nodeType":"StructuredDocumentation","src":"32605:307:3","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":3649,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:3","nodeType":"FunctionDefinition","parameters":{"id":3627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3626,"mutability":"mutable","name":"value","nameLocation":"32941:5:3","nodeType":"VariableDeclaration","scope":3649,"src":"32934:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3625,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:3"},"returnParameters":{"id":3630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3629,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:3","nodeType":"VariableDeclaration","scope":3649,"src":"32971:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3628,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:3"},"scope":3742,"src":"32917:220:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3674,"nodeType":"Block","src":"33527:148:3","statements":[{"expression":{"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3657,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"33537:10:3","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"33556:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":3658,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:3","typeDescriptions":{}}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:3","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":3663,"nodeType":"ExpressionStatement","src":"33537:25:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3664,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"33576:10:3","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"33590:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3673,"nodeType":"IfStatement","src":"33572:97:3","trueBody":{"id":3672,"nodeType":"Block","src":"33597:72:3","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:3","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":3669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"33652:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3667,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"33618:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3671,"nodeType":"RevertStatement","src":"33611:47:3"}]}}]},"documentation":{"id":3650,"nodeType":"StructuredDocumentation","src":"33143:307:3","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":3675,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:3","nodeType":"FunctionDefinition","parameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"value","nameLocation":"33479:5:3","nodeType":"VariableDeclaration","scope":3675,"src":"33472:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3651,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:3"},"returnParameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:3","nodeType":"VariableDeclaration","scope":3675,"src":"33509:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":3654,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:3","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:3"},"scope":3742,"src":"33455:220:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3700,"nodeType":"Block","src":"34058:146:3","statements":[{"expression":{"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3683,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"34068:10:3","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"34086:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":3684,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:3","typeDescriptions":{}}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:3","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":3689,"nodeType":"ExpressionStatement","src":"34068:24:3"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3690,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"34106:10:3","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"34120:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3699,"nodeType":"IfStatement","src":"34102:96:3","trueBody":{"id":3698,"nodeType":"Block","src":"34127:71:3","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":3694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:3","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":3695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"34181:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3693,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"34148:29:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3697,"nodeType":"RevertStatement","src":"34141:46:3"}]}}]},"documentation":{"id":3676,"nodeType":"StructuredDocumentation","src":"33681:302:3","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":3701,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:3","nodeType":"FunctionDefinition","parameters":{"id":3679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3678,"mutability":"mutable","name":"value","nameLocation":"34011:5:3","nodeType":"VariableDeclaration","scope":3701,"src":"34004:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3677,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:3"},"returnParameters":{"id":3682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3681,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:3","nodeType":"VariableDeclaration","scope":3701,"src":"34041:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":3680,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:3","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:3"},"scope":3742,"src":"33988:216:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3730,"nodeType":"Block","src":"34444:250:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"34557:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":3714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3713,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3712,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:3","memberName":"max","nodeType":"MemberAccess","src":"34573:16:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3710,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:3","typeDescriptions":{}}},"id":3717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3724,"nodeType":"IfStatement","src":"34553:105:3","trueBody":{"id":3723,"nodeType":"Block","src":"34592:66:3","statements":[{"errorCall":{"arguments":[{"id":3720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"34641:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3719,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"34613:27:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3722,"nodeType":"RevertStatement","src":"34606:41:3"}]}},{"expression":{"arguments":[{"id":3727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"34681:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3725,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:3","typeDescriptions":{}}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3708,"id":3729,"nodeType":"Return","src":"34667:20:3"}]},"documentation":{"id":3702,"nodeType":"StructuredDocumentation","src":"34210:165:3","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":3731,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:3","nodeType":"FunctionDefinition","parameters":{"id":3705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"value","nameLocation":"34406:5:3","nodeType":"VariableDeclaration","scope":3731,"src":"34398:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:3"},"returnParameters":{"id":3708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3731,"src":"34436:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3706,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:3"},"scope":3742,"src":"34380:314:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3740,"nodeType":"Block","src":"34853:87:3","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:3","statements":[{"nodeType":"YulAssignment","src":"34902:22:3","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:3"},"nodeType":"YulFunctionCall","src":"34914:9:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:3"},"nodeType":"YulFunctionCall","src":"34907:17:3"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3734,"isOffset":false,"isSlot":false,"src":"34921:1:3","valueSize":1},{"declaration":3737,"isOffset":false,"isSlot":false,"src":"34902:1:3","valueSize":1}],"flags":["memory-safe"],"id":3739,"nodeType":"InlineAssembly","src":"34863:71:3"}]},"documentation":{"id":3732,"nodeType":"StructuredDocumentation","src":"34700:90:3","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":3741,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:3","nodeType":"FunctionDefinition","parameters":{"id":3735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3734,"mutability":"mutable","name":"b","nameLocation":"34816:1:3","nodeType":"VariableDeclaration","scope":3741,"src":"34811:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3733,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:3"},"returnParameters":{"id":3738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3737,"mutability":"mutable","name":"u","nameLocation":"34850:1:3","nodeType":"VariableDeclaration","scope":3741,"src":"34842:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3736,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:3"},"scope":3742,"src":"34795:145:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3743,"src":"769:34173:3","usedErrors":[1987,1992,1999,2004],"usedEvents":[]}],"src":"192:34751:3"},"id":3},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[3742],"SignedMath":[3886]},"id":3887,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3744,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3746,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3887,"sourceUnit":3743,"src":"135:40:4","symbolAliases":[{"foreign":{"id":3745,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"143:8:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3747,"nodeType":"StructuredDocumentation","src":"177:80:4","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3886,"linearizedBaseContracts":[3886],"name":"SignedMath","nameLocation":"266:10:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":3776,"nodeType":"Block","src":"746:215:4","statements":[{"id":3775,"nodeType":"UncheckedBlock","src":"756:199:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3759,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"894:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3760,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"900:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3761,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"904:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3763,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":3768,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"932:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3766,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"916:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3742_$","typeString":"type(library SafeCast)"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"916:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3764,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:4","typeDescriptions":{}}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3758,"id":3774,"nodeType":"Return","src":"887:57:4"}]}]},"documentation":{"id":3748,"nodeType":"StructuredDocumentation","src":"283:374:4","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3777,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:4","nodeType":"FunctionDefinition","parameters":{"id":3755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3750,"mutability":"mutable","name":"condition","nameLocation":"684:9:4","nodeType":"VariableDeclaration","scope":3777,"src":"679:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3749,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3752,"mutability":"mutable","name":"a","nameLocation":"702:1:4","nodeType":"VariableDeclaration","scope":3777,"src":"695:8:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3751,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3754,"mutability":"mutable","name":"b","nameLocation":"712:1:4","nodeType":"VariableDeclaration","scope":3777,"src":"705:8:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3753,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:4"},"returnParameters":{"id":3758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3777,"src":"738:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3756,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:4"},"scope":3886,"src":"662:299:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3795,"nodeType":"Block","src":"1102:44:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3788,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"1127:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3789,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"1131:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3791,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"1134:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3792,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"1137:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3787,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"1119:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3786,"id":3794,"nodeType":"Return","src":"1112:27:4"}]},"documentation":{"id":3778,"nodeType":"StructuredDocumentation","src":"967:66:4","text":" @dev Returns the largest of two signed numbers."},"id":3796,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:4","nodeType":"FunctionDefinition","parameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3780,"mutability":"mutable","name":"a","nameLocation":"1058:1:4","nodeType":"VariableDeclaration","scope":3796,"src":"1051:8:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3779,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3782,"mutability":"mutable","name":"b","nameLocation":"1068:1:4","nodeType":"VariableDeclaration","scope":3796,"src":"1061:8:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3781,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:4"},"returnParameters":{"id":3786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3796,"src":"1094:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3784,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:4"},"scope":3886,"src":"1038:108:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3814,"nodeType":"Block","src":"1288:44:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3807,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"1313:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3808,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"1317:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3810,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"1320:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3811,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"1323:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3806,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"1305:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3805,"id":3813,"nodeType":"Return","src":"1298:27:4"}]},"documentation":{"id":3797,"nodeType":"StructuredDocumentation","src":"1152:67:4","text":" @dev Returns the smallest of two signed numbers."},"id":3815,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:4","nodeType":"FunctionDefinition","parameters":{"id":3802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3799,"mutability":"mutable","name":"a","nameLocation":"1244:1:4","nodeType":"VariableDeclaration","scope":3815,"src":"1237:8:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3798,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3801,"mutability":"mutable","name":"b","nameLocation":"1254:1:4","nodeType":"VariableDeclaration","scope":3815,"src":"1247:8:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3800,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:4"},"returnParameters":{"id":3805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3815,"src":"1280:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3803,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:4"},"scope":3886,"src":"1224:108:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3858,"nodeType":"Block","src":"1537:162:4","statements":[{"assignments":[3826],"declarations":[{"constant":false,"id":3826,"mutability":"mutable","name":"x","nameLocation":"1606:1:4","nodeType":"VariableDeclaration","scope":3858,"src":"1599:8:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3825,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3839,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3827,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"1611:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3828,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"1615:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3830,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3831,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"1622:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3832,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"1626:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3837,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:4"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3840,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"1651:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3845,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"1671:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3843,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:4","typeDescriptions":{}}},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:4","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3841,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:4","typeDescriptions":{}}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3850,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"1685:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3851,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"1689:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3824,"id":3857,"nodeType":"Return","src":"1644:48:4"}]},"documentation":{"id":3816,"nodeType":"StructuredDocumentation","src":"1338:126:4","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3859,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:4","nodeType":"FunctionDefinition","parameters":{"id":3821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3818,"mutability":"mutable","name":"a","nameLocation":"1493:1:4","nodeType":"VariableDeclaration","scope":3859,"src":"1486:8:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3817,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3820,"mutability":"mutable","name":"b","nameLocation":"1503:1:4","nodeType":"VariableDeclaration","scope":3859,"src":"1496:8:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3819,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:4"},"returnParameters":{"id":3824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3859,"src":"1529:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3822,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:4"},"scope":3886,"src":"1469:230:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3884,"nodeType":"Block","src":"1843:767:4","statements":[{"id":3883,"nodeType":"UncheckedBlock","src":"1853:751:4","statements":[{"assignments":[3868],"declarations":[{"constant":false,"id":3868,"mutability":"mutable","name":"mask","nameLocation":"2424:4:4","nodeType":"VariableDeclaration","scope":3883,"src":"2417:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3867,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3872,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3869,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"2431:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:4","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3875,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"2576:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3876,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"2580:4:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3878,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3879,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"2588:4:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3873,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:4","typeDescriptions":{}}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3866,"id":3882,"nodeType":"Return","src":"2560:33:4"}]}]},"documentation":{"id":3860,"nodeType":"StructuredDocumentation","src":"1705:78:4","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3885,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:4","nodeType":"FunctionDefinition","parameters":{"id":3863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3862,"mutability":"mutable","name":"n","nameLocation":"1808:1:4","nodeType":"VariableDeclaration","scope":3885,"src":"1801:8:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3861,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:4"},"returnParameters":{"id":3866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3885,"src":"1834:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3864,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:4"},"scope":3886,"src":"1788:822:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3887,"src":"258:2354:4","usedErrors":[],"usedEvents":[]}],"src":"109:2504:4"},"id":4},"contracts/blackjack.sol":{"ast":{"absolutePath":"contracts/blackjack.sol","exportedSymbols":{"BlackJack":[6344],"Math":[1977],"SignedMath":[3886],"Strings":[371]},"id":6345,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3888,"literals":["solidity",">=","0.8",".20","<","0.9",".0"],"nodeType":"PragmaDirective","src":"35:32:5"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":3889,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6345,"sourceUnit":372,"src":"691:51:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"BlackJack","contractDependencies":[],"contractKind":"contract","documentation":{"id":3890,"nodeType":"StructuredDocumentation","src":"748:111:5","text":" @title BlackJack\n @dev Smart contract game of Blackjack that can be deployed on the blockchain."},"fullyImplemented":true,"id":6344,"linearizedBaseContracts":[6344],"name":"BlackJack","nameLocation":"873:9:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"BlackJack.Game","id":3939,"members":[{"constant":false,"id":3892,"mutability":"mutable","name":"Id","nameLocation":"960:2:5","nodeType":"VariableDeclaration","scope":3939,"src":"952:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3891,"name":"uint256","nodeType":"ElementaryTypeName","src":"952:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3894,"mutability":"mutable","name":"Player","nameLocation":"981:6:5","nodeType":"VariableDeclaration","scope":3939,"src":"973:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3893,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3896,"mutability":"mutable","name":"SafeBalance","nameLocation":"1016:11:5","nodeType":"VariableDeclaration","scope":3939,"src":"1008:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3895,"name":"uint256","nodeType":"ElementaryTypeName","src":"1008:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3898,"mutability":"mutable","name":"OriginalBalance","nameLocation":"1046:15:5","nodeType":"VariableDeclaration","scope":3939,"src":"1038:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3897,"name":"uint256","nodeType":"ElementaryTypeName","src":"1038:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3900,"mutability":"mutable","name":"SplitCounter","nameLocation":"1080:12:5","nodeType":"VariableDeclaration","scope":3939,"src":"1072:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3899,"name":"uint256","nodeType":"ElementaryTypeName","src":"1072:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3902,"mutability":"mutable","name":"GamesPlayed","nameLocation":"1111:11:5","nodeType":"VariableDeclaration","scope":3939,"src":"1103:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3901,"name":"uint256","nodeType":"ElementaryTypeName","src":"1103:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3904,"mutability":"mutable","name":"PlayerBet","nameLocation":"1143:9:5","nodeType":"VariableDeclaration","scope":3939,"src":"1135:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3903,"name":"uint256","nodeType":"ElementaryTypeName","src":"1135:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3906,"mutability":"mutable","name":"InsuranceBet","nameLocation":"1171:12:5","nodeType":"VariableDeclaration","scope":3939,"src":"1163:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1163:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3908,"mutability":"mutable","name":"PlayerCard1","nameLocation":"1202:11:5","nodeType":"VariableDeclaration","scope":3939,"src":"1194:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3907,"name":"uint256","nodeType":"ElementaryTypeName","src":"1194:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3910,"mutability":"mutable","name":"PlayerCard2","nameLocation":"1232:11:5","nodeType":"VariableDeclaration","scope":3939,"src":"1224:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3909,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3912,"mutability":"mutable","name":"PlayerNewCard","nameLocation":"1262:13:5","nodeType":"VariableDeclaration","scope":3939,"src":"1254:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3911,"name":"uint256","nodeType":"ElementaryTypeName","src":"1254:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3914,"mutability":"mutable","name":"PlayerCardTotal","nameLocation":"1294:15:5","nodeType":"VariableDeclaration","scope":3939,"src":"1286:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1286:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3916,"mutability":"mutable","name":"PlayerSplitTotal","nameLocation":"1328:16:5","nodeType":"VariableDeclaration","scope":3939,"src":"1320:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"1320:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3918,"mutability":"mutable","name":"DealerCard1","nameLocation":"1365:11:5","nodeType":"VariableDeclaration","scope":3939,"src":"1357:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3917,"name":"uint256","nodeType":"ElementaryTypeName","src":"1357:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3920,"mutability":"mutable","name":"DealerCard2","nameLocation":"1395:11:5","nodeType":"VariableDeclaration","scope":3939,"src":"1387:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"1387:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3922,"mutability":"mutable","name":"DealerNewCard","nameLocation":"1425:13:5","nodeType":"VariableDeclaration","scope":3939,"src":"1417:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3921,"name":"uint256","nodeType":"ElementaryTypeName","src":"1417:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3924,"mutability":"mutable","name":"DealerCardTotal","nameLocation":"1457:15:5","nodeType":"VariableDeclaration","scope":3939,"src":"1449:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"1449:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3926,"mutability":"mutable","name":"CanDoubleDown","nameLocation":"1490:13:5","nodeType":"VariableDeclaration","scope":3939,"src":"1485:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3925,"name":"bool","nodeType":"ElementaryTypeName","src":"1485:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3928,"mutability":"mutable","name":"CanInsure","nameLocation":"1519:9:5","nodeType":"VariableDeclaration","scope":3939,"src":"1514:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3927,"name":"bool","nodeType":"ElementaryTypeName","src":"1514:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3930,"mutability":"mutable","name":"CanSplit","nameLocation":"1544:8:5","nodeType":"VariableDeclaration","scope":3939,"src":"1539:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3929,"name":"bool","nodeType":"ElementaryTypeName","src":"1539:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3932,"mutability":"mutable","name":"IsSplitting","nameLocation":"1568:11:5","nodeType":"VariableDeclaration","scope":3939,"src":"1563:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3931,"name":"bool","nodeType":"ElementaryTypeName","src":"1563:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3934,"mutability":"mutable","name":"IsSoftHand","nameLocation":"1595:10:5","nodeType":"VariableDeclaration","scope":3939,"src":"1590:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3933,"name":"bool","nodeType":"ElementaryTypeName","src":"1590:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3936,"mutability":"mutable","name":"IsRoundInProgress","nameLocation":"1623:17:5","nodeType":"VariableDeclaration","scope":3939,"src":"1618:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3935,"name":"bool","nodeType":"ElementaryTypeName","src":"1618:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3938,"mutability":"mutable","name":"DealerMsg","nameLocation":"1668:9:5","nodeType":"VariableDeclaration","scope":3939,"src":"1661:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3937,"name":"string","nodeType":"ElementaryTypeName","src":"1661:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Game","nameLocation":"934:4:5","nodeType":"StructDefinition","scope":6344,"src":"927:758:5","visibility":"public"},{"constant":true,"id":3942,"mutability":"constant","name":"_ethDepositLowLimit","nameLocation":"1718:19:5","nodeType":"VariableDeclaration","scope":6344,"src":"1693:56:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3940,"name":"uint256","nodeType":"ElementaryTypeName","src":"1693:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31303030","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1740:9:5","subdenomination":"gwei","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1000"},"visibility":"private"},{"constant":true,"id":3945,"mutability":"constant","name":"_ethDepositHighLimit","nameLocation":"1781:20:5","nodeType":"VariableDeclaration","scope":6344,"src":"1756:56:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3943,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1804:8:5","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000_by_1","typeString":"int_const 10000000000000000000"},"value":"10"},"visibility":"private"},{"constant":true,"id":3948,"mutability":"constant","name":"_ethBetLowLimit","nameLocation":"1846:15:5","nodeType":"VariableDeclaration","scope":6344,"src":"1821:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3946,"name":"uint256","nodeType":"ElementaryTypeName","src":"1821:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1864:8:5","subdenomination":"gwei","typeDescriptions":{"typeIdentifier":"t_rational_100000000000_by_1","typeString":"int_const 100000000000"},"value":"100"},"visibility":"private"},{"constant":true,"id":3951,"mutability":"constant","name":"_ethBetHighLimit","nameLocation":"1904:16:5","nodeType":"VariableDeclaration","scope":6344,"src":"1879:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3949,"name":"uint256","nodeType":"ElementaryTypeName","src":"1879:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1923:7:5","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"},"visibility":"private"},{"constant":false,"id":3953,"mutability":"mutable","name":"_rngCounter","nameLocation":"1982:11:5","nodeType":"VariableDeclaration","scope":6344,"src":"1966:27:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3952,"name":"uint256","nodeType":"ElementaryTypeName","src":"1966:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3955,"mutability":"mutable","name":"_indexCounter","nameLocation":"2018:13:5","nodeType":"VariableDeclaration","scope":6344,"src":"2002:29:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3954,"name":"uint256","nodeType":"ElementaryTypeName","src":"2002:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3957,"mutability":"immutable","name":"_owner","nameLocation":"2066:6:5","nodeType":"VariableDeclaration","scope":6344,"src":"2040:32:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3956,"name":"address","nodeType":"ElementaryTypeName","src":"2040:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3961,"mutability":"mutable","name":"_currentPlayersToGameIdMap","nameLocation":"2117:26:5","nodeType":"VariableDeclaration","scope":6344,"src":"2081:62:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3960,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3958,"name":"address","nodeType":"ElementaryTypeName","src":"2089:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2081:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":3966,"mutability":"mutable","name":"_idsToGameMap","nameLocation":"2183:13:5","nodeType":"VariableDeclaration","scope":6344,"src":"2150:46:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game)"},"typeName":{"id":3965,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3962,"name":"uint256","nodeType":"ElementaryTypeName","src":"2158:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2150:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3964,"nodeType":"UserDefinedTypeName","pathNode":{"id":3963,"name":"Game","nameLocations":["2169:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":3939,"src":"2169:4:5"},"referencedDeclaration":3939,"src":"2169:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"}}},"visibility":"private"},{"anonymous":false,"documentation":{"id":3967,"nodeType":"StructuredDocumentation","src":"2701:39:5","text":" @dev Event Logging"},"eventSelector":"8a045e8ca90abbb5faac5664ef1ab1a17450af55e4c7c1904cff223b299d0b71","id":3975,"name":"StartNewGameEvent","nameLocation":"2752:17:5","nodeType":"EventDefinition","parameters":{"id":3974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3969,"indexed":true,"mutability":"mutable","name":"GameId","nameLocation":"2786:6:5","nodeType":"VariableDeclaration","scope":3975,"src":"2770:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3968,"name":"uint256","nodeType":"ElementaryTypeName","src":"2770:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3971,"indexed":true,"mutability":"mutable","name":"Player","nameLocation":"2810:6:5","nodeType":"VariableDeclaration","scope":3975,"src":"2794:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3970,"name":"address","nodeType":"ElementaryTypeName","src":"2794:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3973,"indexed":true,"mutability":"mutable","name":"Amount","nameLocation":"2834:6:5","nodeType":"VariableDeclaration","scope":3975,"src":"2818:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3972,"name":"uint256","nodeType":"ElementaryTypeName","src":"2818:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2769:72:5"},"src":"2746:96:5"},{"anonymous":false,"eventSelector":"250efcb6be2a0ac5605d1cf71328b5851470f02f783ce2df316489c41ba96edd","id":3983,"name":"CashOutEvent","nameLocation":"2854:12:5","nodeType":"EventDefinition","parameters":{"id":3982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3977,"indexed":true,"mutability":"mutable","name":"GameId","nameLocation":"2883:6:5","nodeType":"VariableDeclaration","scope":3983,"src":"2867:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3976,"name":"uint256","nodeType":"ElementaryTypeName","src":"2867:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3979,"indexed":true,"mutability":"mutable","name":"Player","nameLocation":"2907:6:5","nodeType":"VariableDeclaration","scope":3983,"src":"2891:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3978,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3981,"indexed":true,"mutability":"mutable","name":"Amount","nameLocation":"2931:6:5","nodeType":"VariableDeclaration","scope":3983,"src":"2915:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3980,"name":"uint256","nodeType":"ElementaryTypeName","src":"2915:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2866:72:5"},"src":"2848:91:5"},{"anonymous":false,"eventSelector":"1d7497d6fd179a17c5c10fa701d5dd57fb68542c79473b9759b789ed784d5c27","id":3991,"name":"BeforeValueTransferEvent","nameLocation":"2951:24:5","nodeType":"EventDefinition","parameters":{"id":3990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3985,"indexed":true,"mutability":"mutable","name":"GameId","nameLocation":"2992:6:5","nodeType":"VariableDeclaration","scope":3991,"src":"2976:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3984,"name":"uint256","nodeType":"ElementaryTypeName","src":"2976:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3987,"indexed":true,"mutability":"mutable","name":"Player","nameLocation":"3016:6:5","nodeType":"VariableDeclaration","scope":3991,"src":"3000:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3986,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3989,"indexed":true,"mutability":"mutable","name":"Amount","nameLocation":"3040:6:5","nodeType":"VariableDeclaration","scope":3991,"src":"3024:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3988,"name":"uint256","nodeType":"ElementaryTypeName","src":"3024:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2975:72:5"},"src":"2945:103:5"},{"anonymous":false,"eventSelector":"fa63cafecf2c1c6ae30e5b5e06570ba0bf03859678e781644bfa3a0d6764343d","id":3995,"name":"AfterValueTransferEvent","nameLocation":"3060:23:5","nodeType":"EventDefinition","parameters":{"id":3994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3993,"indexed":true,"mutability":"mutable","name":"Player","nameLocation":"3100:6:5","nodeType":"VariableDeclaration","scope":3995,"src":"3084:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3992,"name":"address","nodeType":"ElementaryTypeName","src":"3084:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3083:24:5"},"src":"3054:54:5"},{"body":{"id":4010,"nodeType":"Block","src":"3184:81:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3999,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3203:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3207:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3203:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307830","id":4003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3225:3:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3217:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4001,"name":"address","nodeType":"ElementaryTypeName","src":"3217:7:5","typeDescriptions":{}}},"id":4004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3217:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3203:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573735f494e56","id":4006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3231:13:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ce2fea17e1bfdbc965b108c55d6405798514c890bf554156ecbcecd02288e9f","typeString":"literal_string \"Address_INV\""},"value":"Address_INV"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ce2fea17e1bfdbc965b108c55d6405798514c890bf554156ecbcecd02288e9f","typeString":"literal_string \"Address_INV\""}],"id":3998,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3195:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3195:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4008,"nodeType":"ExpressionStatement","src":"3195:50:5"},{"id":4009,"nodeType":"PlaceholderStatement","src":"3256:1:5"}]},"documentation":{"id":3996,"nodeType":"StructuredDocumentation","src":"3120:35:5","text":" @dev Modifiers"},"id":4011,"name":"IsValidAddr","nameLocation":"3170:11:5","nodeType":"ModifierDefinition","parameters":{"id":3997,"nodeType":"ParameterList","parameters":[],"src":"3181:2:5"},"src":"3161:104:5","virtual":false,"visibility":"internal"},{"body":{"id":4028,"nodeType":"Block","src":"3335:104:5","statements":[{"expression":{"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4015,"name":"_rngCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"3356:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3370:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3356:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4018,"nodeType":"ExpressionStatement","src":"3356:15:5"},{"expression":{"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4019,"name":"_indexCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"3382:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3398:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3382:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4022,"nodeType":"ExpressionStatement","src":"3382:17:5"},{"expression":{"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4023,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"3412:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4024,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3421:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3425:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3421:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3412:19:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4027,"nodeType":"ExpressionStatement","src":"3412:19:5"}]},"documentation":{"id":4012,"nodeType":"StructuredDocumentation","src":"3277:37:5","text":" @dev Constructor"},"id":4029,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4013,"nodeType":"ParameterList","parameters":[],"src":"3332:2:5"},"returnParameters":{"id":4014,"nodeType":"ParameterList","parameters":[],"src":"3335:0:5"},"scope":6344,"src":"3320:119:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4039,"nodeType":"Block","src":"3524:42:5","statements":[{"expression":{"arguments":[{"hexValue":"46756e6374696f6e5f444e452e","id":4036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3542:15:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e68d5b0a431515bb993e37d573d3bb2f8d5976eef230433de8255ac6ddf6b3f2","typeString":"literal_string \"Function_DNE.\""},"value":"Function_DNE."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e68d5b0a431515bb993e37d573d3bb2f8d5976eef230433de8255ac6ddf6b3f2","typeString":"literal_string \"Function_DNE.\""}],"id":4035,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3535:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3535:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4038,"nodeType":"ExpressionStatement","src":"3535:23:5"}]},"documentation":{"id":4030,"nodeType":"StructuredDocumentation","src":"3451:34:5","text":" @dev Fallback"},"id":4040,"implemented":true,"kind":"fallback","modifiers":[{"id":4033,"kind":"modifierInvocation","modifierName":{"id":4032,"name":"IsValidAddr","nameLocations":["3503:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":4011,"src":"3503:11:5"},"nodeType":"ModifierInvocation","src":"3503:11:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4031,"nodeType":"ParameterList","parameters":[],"src":"3500:2:5"},"returnParameters":{"id":4034,"nodeType":"ParameterList","parameters":[],"src":"3524:0:5"},"scope":6344,"src":"3491:75:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4050,"nodeType":"Block","src":"3653:136:5","statements":[{"expression":{"arguments":[{"hexValue":"506c65617365207573652053746172744e657747616d652046756e6374696f6e20746f2070617920636f6e74726163742e","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3729:51:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_74583bf40366140cdb71804e6d6a5f1c545237cd76be6536d0470668ca3d44de","typeString":"literal_string \"Please use StartNewGame Function to pay contract.\""},"value":"Please use StartNewGame Function to pay contract."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_74583bf40366140cdb71804e6d6a5f1c545237cd76be6536d0470668ca3d44de","typeString":"literal_string \"Please use StartNewGame Function to pay contract.\""}],"id":4046,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3722:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3722:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4049,"nodeType":"ExpressionStatement","src":"3722:59:5"}]},"documentation":{"id":4041,"nodeType":"StructuredDocumentation","src":"3574:33:5","text":" @dev Recieve"},"id":4051,"implemented":true,"kind":"receive","modifiers":[{"id":4044,"kind":"modifierInvocation","modifierName":{"id":4043,"name":"IsValidAddr","nameLocations":["3624:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":4011,"src":"3624:11:5"},"nodeType":"ModifierInvocation","src":"3624:11:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4042,"nodeType":"ParameterList","parameters":[],"src":"3621:2:5"},"returnParameters":{"id":4045,"nodeType":"ParameterList","parameters":[],"src":"3653:0:5"},"scope":6344,"src":"3613:176:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4142,"nodeType":"Block","src":"3954:756:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4056,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"3983:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4059,"indexExpression":{"expression":{"id":4057,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4010:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4014:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4010:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3983:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4025:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3983:43:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4578697374696e67506c617965725f434346","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4028:20:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f993d0eb2917936c12e6dfe50ccae82441180c058725aefd59bda83d15f9162","typeString":"literal_string \"ExistingPlayer_CCF\""},"value":"ExistingPlayer_CCF"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8f993d0eb2917936c12e6dfe50ccae82441180c058725aefd59bda83d15f9162","typeString":"literal_string \"ExistingPlayer_CCF\""}],"id":4055,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3975:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:74:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4064,"nodeType":"ExpressionStatement","src":"3975:74:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4066,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4123:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4127:5:5","memberName":"value","nodeType":"MemberAccess","src":"4123:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4068,"name":"_ethDepositLowLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"4135:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4123:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4070,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4158:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4162:5:5","memberName":"value","nodeType":"MemberAccess","src":"4158:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4072,"name":"_ethDepositHighLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"4171:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4158:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4123:68:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f7369745f4c696d6974","id":4075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4193:15:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0e4887e76f7fcd61a28101e915f9bb1da012679974d91aac6a12226aa17e16f7","typeString":"literal_string \"Deposit_Limit\""},"value":"Deposit_Limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0e4887e76f7fcd61a28101e915f9bb1da012679974d91aac6a12226aa17e16f7","typeString":"literal_string \"Deposit_Limit\""}],"id":4065,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4115:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4115:94:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4077,"nodeType":"ExpressionStatement","src":"4115:94:5"},{"assignments":[4080],"declarations":[{"constant":false,"id":4080,"mutability":"mutable","name":"game","nameLocation":"4269:4:5","nodeType":"VariableDeclaration","scope":4142,"src":"4257:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game"},"typeName":{"id":4079,"nodeType":"UserDefinedTypeName","pathNode":{"id":4078,"name":"Game","nameLocations":["4257:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":3939,"src":"4257:4:5"},"referencedDeclaration":3939,"src":"4257:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"}},"visibility":"internal"}],"id":4081,"nodeType":"VariableDeclarationStatement","src":"4257:16:5"},{"expression":{"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4082,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"4286:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":4084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4291:2:5","memberName":"Id","nodeType":"MemberAccess","referencedDeclaration":3892,"src":"4286:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4085,"name":"_indexCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"4296:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4286:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4087,"nodeType":"ExpressionStatement","src":"4286:23:5"},{"expression":{"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4088,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"4322:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":4090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4327:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"4322:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4091,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4342:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4346:5:5","memberName":"value","nodeType":"MemberAccess","src":"4342:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4322:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4094,"nodeType":"ExpressionStatement","src":"4322:29:5"},{"expression":{"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4095,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"4362:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":4097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4367:15:5","memberName":"OriginalBalance","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"4362:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4098,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4386:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4390:5:5","memberName":"value","nodeType":"MemberAccess","src":"4386:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4362:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4101,"nodeType":"ExpressionStatement","src":"4362:33:5"},{"expression":{"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4102,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"4416:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":4104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4421:6:5","memberName":"Player","nodeType":"MemberAccess","referencedDeclaration":3894,"src":"4416:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4105,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4430:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4434:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4430:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4416:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4108,"nodeType":"ExpressionStatement","src":"4416:24:5"},{"expression":{"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4109,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"4461:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":4111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4466:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"4461:14:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"436f6e747261637420506169642e","id":4112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4478:16:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1c9c6c6e1e7162bb82afa9295253b78f8c1d6046bc5c2088dfe9a3cbf6fa70e6","typeString":"literal_string \"Contract Paid.\""},"value":"Contract Paid."},"src":"4461:33:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4114,"nodeType":"ExpressionStatement","src":"4461:33:5"},{"expression":{"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4507:15:5","subExpression":{"id":4115,"name":"_indexCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"4507:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4117,"nodeType":"ExpressionStatement","src":"4507:15:5"},{"expression":{"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4118,"name":"_idsToGameMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"4535:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game storage ref)"}},"id":4121,"indexExpression":{"expression":{"id":4119,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"4549:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":4120,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4554:2:5","memberName":"Id","nodeType":"MemberAccess","referencedDeclaration":3892,"src":"4549:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4535:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage","typeString":"struct BlackJack.Game storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4122,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"4560:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"src":"4535:29:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage","typeString":"struct BlackJack.Game storage ref"}},"id":4124,"nodeType":"ExpressionStatement","src":"4535:29:5"},{"expression":{"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4125,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"4575:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4128,"indexExpression":{"expression":{"id":4126,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4602:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4606:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4602:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4575:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4129,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"4616:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":4130,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4621:2:5","memberName":"Id","nodeType":"MemberAccess","referencedDeclaration":3892,"src":"4616:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4575:48:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4132,"nodeType":"ExpressionStatement","src":"4575:48:5"},{"eventCall":{"arguments":[{"expression":{"id":4134,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"4659:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":4135,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4664:2:5","memberName":"Id","nodeType":"MemberAccess","referencedDeclaration":3892,"src":"4659:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4136,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"4668:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":4137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4673:6:5","memberName":"Player","nodeType":"MemberAccess","referencedDeclaration":3894,"src":"4668:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4138,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"4681:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":4139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4686:15:5","memberName":"OriginalBalance","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"4681:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4133,"name":"StartNewGameEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"4641:17:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4641:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4141,"nodeType":"EmitStatement","src":"4636:66:5"}]},"documentation":{"id":4052,"nodeType":"StructuredDocumentation","src":"3801:106:5","text":" @dev StartNewGame - Starts a new game with msg.sender's address registered as player."},"functionSelector":"24603eea","id":4143,"implemented":true,"kind":"function","modifiers":[],"name":"StartNewGame","nameLocation":"3922:12:5","nodeType":"FunctionDefinition","parameters":{"id":4053,"nodeType":"ParameterList","parameters":[],"src":"3934:2:5"},"returnParameters":{"id":4054,"nodeType":"ParameterList","parameters":[],"src":"3954:0:5"},"scope":6344,"src":"3913:797:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4256,"nodeType":"Block","src":"4919:1056:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4152,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"4940:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4155,"indexExpression":{"expression":{"id":4153,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4967:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4971:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4967:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4940:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4982:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4940:43:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d655f444e45","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4985:10:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa","typeString":"literal_string \"Game_DNE\""},"value":"Game_DNE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa","typeString":"literal_string \"Game_DNE\""}],"id":4151,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4932:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4932:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4160,"nodeType":"ExpressionStatement","src":"4932:64:5"},{"assignments":[4163],"declarations":[{"constant":false,"id":4163,"mutability":"mutable","name":"game","nameLocation":"5022:4:5","nodeType":"VariableDeclaration","scope":4256,"src":"5009:17:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"},"typeName":{"id":4162,"nodeType":"UserDefinedTypeName","pathNode":{"id":4161,"name":"Game","nameLocations":["5009:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":3939,"src":"5009:4:5"},"referencedDeclaration":3939,"src":"5009:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"}},"visibility":"internal"}],"id":4170,"initialValue":{"baseExpression":{"id":4164,"name":"_idsToGameMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"5029:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game storage ref)"}},"id":4169,"indexExpression":{"baseExpression":{"id":4165,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"5043:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4168,"indexExpression":{"expression":{"id":4166,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5070:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5074:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5070:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5043:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5029:53:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage","typeString":"struct BlackJack.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5009:73:5"},{"expression":{"arguments":[{"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5103:23:5","subExpression":{"expression":{"id":4172,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"5104:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4173,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5109:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"5104:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49734e6577526f756e645f4f6e6c79","id":4175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5128:17:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_48dc19631629da1b2346a32d98cbc4846a44ed7618f77c5c6a081ec8e4c25f61","typeString":"literal_string \"IsNewRound_Only\""},"value":"IsNewRound_Only"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48dc19631629da1b2346a32d98cbc4846a44ed7618f77c5c6a081ec8e4c25f61","typeString":"literal_string \"IsNewRound_Only\""}],"id":4171,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5095:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5095:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4177,"nodeType":"ExpressionStatement","src":"5095:51:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4179,"name":"bet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"5165:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4180,"name":"_ethBetLowLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"5172:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5165:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4182,"name":"bet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"5191:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4183,"name":"_ethBetHighLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"5198:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5191:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5165:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4265745f4c696d6974","id":4186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5216:11:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b3c2aed77e6e5e9253661cda300b247ee1688a664acf8b203ce47f5f70124ba","typeString":"literal_string \"Bet_Limit\""},"value":"Bet_Limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9b3c2aed77e6e5e9253661cda300b247ee1688a664acf8b203ce47f5f70124ba","typeString":"literal_string \"Bet_Limit\""}],"id":4178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5157:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5157:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4188,"nodeType":"ExpressionStatement","src":"5157:71:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4190,"name":"bet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"5278:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5284:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5278:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4193,"name":"bet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"5289:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":4194,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"5296:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5301:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"5296:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5289:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5278:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e535f46756e6473","id":4198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5314:11:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_619463c843b12538087273e01d1f541fd8442dd1bca0d59b893801731e06ef1d","typeString":"literal_string \"INS_Funds\""},"value":"INS_Funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_619463c843b12538087273e01d1f541fd8442dd1bca0d59b893801731e06ef1d","typeString":"literal_string \"INS_Funds\""}],"id":4189,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5270:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5270:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4200,"nodeType":"ExpressionStatement","src":"5270:56:5"},{"expression":{"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4201,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"5379:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5384:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"5379:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4204,"name":"bet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"5399:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5379:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4206,"nodeType":"ExpressionStatement","src":"5379:23:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4207,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"5456:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5461:13:5","memberName":"CanDoubleDown","nodeType":"MemberAccess","referencedDeclaration":3926,"src":"5456:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":4209,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"5478:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5483:8:5","memberName":"CanSplit","nodeType":"MemberAccess","referencedDeclaration":3930,"src":"5478:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5456:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4225,"nodeType":"Block","src":"5547:47:5","statements":[{"expression":{"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4219,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"5562:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5567:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"5562:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4222,"name":"bet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"5579:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5562:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4224,"nodeType":"ExpressionStatement","src":"5562:20:5"}]},"id":4226,"nodeType":"IfStatement","src":"5453:141:5","trueBody":{"id":4218,"nodeType":"Block","src":"5493:48:5","statements":[{"expression":{"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4212,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"5508:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5513:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"5508:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4215,"name":"bet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"5526:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4217,"nodeType":"ExpressionStatement","src":"5508:21:5"}]}},{"expression":{"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4227,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"5614:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5619:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"5614:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5639:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5614:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4232,"nodeType":"ExpressionStatement","src":"5614:29:5"},{"expression":{"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5679:18:5","subExpression":{"expression":{"id":4233,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"5679:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5684:11:5","memberName":"GamesPlayed","nodeType":"MemberAccess","referencedDeclaration":3902,"src":"5679:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4237,"nodeType":"ExpressionStatement","src":"5679:18:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4238,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"5825:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5830:13:5","memberName":"CanDoubleDown","nodeType":"MemberAccess","referencedDeclaration":3926,"src":"5825:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":4240,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"5847:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5852:8:5","memberName":"CanSplit","nodeType":"MemberAccess","referencedDeclaration":3930,"src":"5847:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5825:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4254,"nodeType":"Block","src":"5925:43:5","statements":[{"expression":{"arguments":[{"id":4251,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"5951:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}],"id":4250,"name":"DealCards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"5941:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$3939_storage_ptr_$returns$__$","typeString":"function (struct BlackJack.Game storage pointer)"}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5941:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4253,"nodeType":"ExpressionStatement","src":"5941:15:5"}]},"id":4255,"nodeType":"IfStatement","src":"5822:146:5","trueBody":{"id":4249,"nodeType":"Block","src":"5862:57:5","statements":[{"expression":{"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4243,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"5877:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5882:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"5877:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"42657420506c616365642e","id":4246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5894:13:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_a258d141ecd3dad493f8dd984854da23f42a7de109a1e5cfd0dfa3162a57d8e6","typeString":"literal_string \"Bet Placed.\""},"value":"Bet Placed."},"src":"5877:30:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4248,"nodeType":"ExpressionStatement","src":"5877:30:5"}]}}]},"documentation":{"id":4144,"nodeType":"StructuredDocumentation","src":"4722:141:5","text":" @dev PlaceBet - Begins a new game round.\n @param bet Amount to bet to start a new round 100 GWei < bet < 1 Ether."},"functionSelector":"5a6d41a0","id":4257,"implemented":true,"kind":"function","modifiers":[{"id":4149,"kind":"modifierInvocation","modifierName":{"id":4148,"name":"IsValidAddr","nameLocations":["4900:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":4011,"src":"4900:11:5"},"nodeType":"ModifierInvocation","src":"4900:11:5"}],"name":"PlaceBet","nameLocation":"4878:8:5","nodeType":"FunctionDefinition","parameters":{"id":4147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"bet","nameLocation":"4895:3:5","nodeType":"VariableDeclaration","scope":4257,"src":"4887:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4886:13:5"},"returnParameters":{"id":4150,"nodeType":"ParameterList","parameters":[],"src":"4919:0:5"},"scope":6344,"src":"4869:1106:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4629,"nodeType":"Block","src":"6148:3673:5","statements":[{"expression":{"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4264,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6206:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6211:11:5","memberName":"PlayerCard1","nodeType":"MemberAccess","referencedDeclaration":3908,"src":"6206:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6225:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6206:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4269,"nodeType":"ExpressionStatement","src":"6206:20:5"},{"expression":{"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4270,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6237:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6242:11:5","memberName":"PlayerCard2","nodeType":"MemberAccess","referencedDeclaration":3910,"src":"6237:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6256:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6237:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4275,"nodeType":"ExpressionStatement","src":"6237:20:5"},{"expression":{"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4276,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6268:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6273:13:5","memberName":"PlayerNewCard","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"6268:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6289:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6268:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4281,"nodeType":"ExpressionStatement","src":"6268:22:5"},{"expression":{"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4282,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6301:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6306:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"6301:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6324:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6301:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4287,"nodeType":"ExpressionStatement","src":"6301:24:5"},{"expression":{"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4288,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6336:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6341:16:5","memberName":"PlayerSplitTotal","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"6336:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6360:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6336:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4293,"nodeType":"ExpressionStatement","src":"6336:25:5"},{"expression":{"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4294,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6372:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6377:11:5","memberName":"DealerCard1","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"6372:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6391:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6372:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4299,"nodeType":"ExpressionStatement","src":"6372:20:5"},{"expression":{"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4300,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6403:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6408:11:5","memberName":"DealerCard2","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"6403:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6422:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6403:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4305,"nodeType":"ExpressionStatement","src":"6403:20:5"},{"expression":{"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4306,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6434:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6439:13:5","memberName":"DealerNewCard","nodeType":"MemberAccess","referencedDeclaration":3922,"src":"6434:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6455:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6434:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4311,"nodeType":"ExpressionStatement","src":"6434:22:5"},{"expression":{"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4312,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6467:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6472:15:5","memberName":"DealerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"6467:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6490:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6467:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4317,"nodeType":"ExpressionStatement","src":"6467:24:5"},{"expression":{"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4318,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6502:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4320,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6507:12:5","memberName":"SplitCounter","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"6502:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6522:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6502:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4323,"nodeType":"ExpressionStatement","src":"6502:21:5"},{"expression":{"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4324,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6534:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6539:12:5","memberName":"InsuranceBet","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"6534:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6554:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6534:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4329,"nodeType":"ExpressionStatement","src":"6534:21:5"},{"expression":{"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4330,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6566:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6571:10:5","memberName":"IsSoftHand","nodeType":"MemberAccess","referencedDeclaration":3934,"src":"6566:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6584:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6566:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4335,"nodeType":"ExpressionStatement","src":"6566:23:5"},{"expression":{"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4336,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6642:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6647:11:5","memberName":"PlayerCard1","nodeType":"MemberAccess","referencedDeclaration":3908,"src":"6642:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4339,"name":"GetCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"6661:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_uint256_$","typeString":"function () returns (uint256)"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6661:9:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6642:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4342,"nodeType":"ExpressionStatement","src":"6642:28:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4343,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6684:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6689:11:5","memberName":"PlayerCard1","nodeType":"MemberAccess","referencedDeclaration":3908,"src":"6684:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6704:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6684:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4360,"nodeType":"IfStatement","src":"6681:118:5","trueBody":{"id":4359,"nodeType":"Block","src":"6707:92:5","statements":[{"expression":{"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4347,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6722:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6727:11:5","memberName":"PlayerCard1","nodeType":"MemberAccess","referencedDeclaration":3908,"src":"6722:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3131","id":4350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6741:2:5","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"6722:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4352,"nodeType":"ExpressionStatement","src":"6722:21:5"},{"expression":{"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4353,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6765:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6770:10:5","memberName":"IsSoftHand","nodeType":"MemberAccess","referencedDeclaration":3934,"src":"6765:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6783:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6765:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4358,"nodeType":"ExpressionStatement","src":"6765:22:5"}]}},{"expression":{"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4361,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6851:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6856:11:5","memberName":"DealerCard1","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"6851:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4364,"name":"GetCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"6870:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_uint256_$","typeString":"function () returns (uint256)"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6870:9:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6851:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4367,"nodeType":"ExpressionStatement","src":"6851:28:5"},{"expression":{"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4368,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6932:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6937:11:5","memberName":"PlayerCard2","nodeType":"MemberAccess","referencedDeclaration":3910,"src":"6932:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4371,"name":"GetCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"6951:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_uint256_$","typeString":"function () returns (uint256)"}},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6951:9:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6932:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4374,"nodeType":"ExpressionStatement","src":"6932:28:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4375,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6974:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4376,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6979:11:5","memberName":"PlayerCard2","nodeType":"MemberAccess","referencedDeclaration":3910,"src":"6974:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6994:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6974:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4379,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"6999:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7004:11:5","memberName":"PlayerCard1","nodeType":"MemberAccess","referencedDeclaration":3908,"src":"6999:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3131","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7018:2:5","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"6999:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6974:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4397,"nodeType":"IfStatement","src":"6971:143:5","trueBody":{"id":4396,"nodeType":"Block","src":"7022:92:5","statements":[{"expression":{"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4384,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7037:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7042:11:5","memberName":"PlayerCard2","nodeType":"MemberAccess","referencedDeclaration":3910,"src":"7037:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3131","id":4387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7056:2:5","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"7037:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4389,"nodeType":"ExpressionStatement","src":"7037:21:5"},{"expression":{"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4390,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7080:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7085:10:5","memberName":"IsSoftHand","nodeType":"MemberAccess","referencedDeclaration":3934,"src":"7080:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7098:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7080:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4395,"nodeType":"ExpressionStatement","src":"7080:22:5"}]}},{"expression":{"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4398,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7164:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7169:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"7164:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4401,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7187:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4402,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7192:11:5","memberName":"PlayerCard1","nodeType":"MemberAccess","referencedDeclaration":3908,"src":"7187:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4403,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7206:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7211:11:5","memberName":"PlayerCard2","nodeType":"MemberAccess","referencedDeclaration":3910,"src":"7206:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7187:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7164:58:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4407,"nodeType":"ExpressionStatement","src":"7164:58:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4408,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7274:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7279:11:5","memberName":"DealerCard1","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"7274:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7294:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7274:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4425,"nodeType":"IfStatement","src":"7271:110:5","trueBody":{"id":4424,"nodeType":"Block","src":"7297:84:5","statements":[{"expression":{"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4412,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7312:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7317:11:5","memberName":"DealerCard1","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"7312:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3131","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7331:2:5","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"7312:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4417,"nodeType":"ExpressionStatement","src":"7312:21:5"},{"expression":{"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4418,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7348:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4420,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7353:9:5","memberName":"CanInsure","nodeType":"MemberAccess","referencedDeclaration":3928,"src":"7348:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7365:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7348:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4423,"nodeType":"ExpressionStatement","src":"7348:21:5"}]}},{"expression":{"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4426,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7428:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7433:15:5","memberName":"DealerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"7428:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4429,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7451:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7456:11:5","memberName":"DealerCard1","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"7451:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4431,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7470:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7475:11:5","memberName":"DealerCard2","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"7470:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7451:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7428:58:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4435,"nodeType":"ExpressionStatement","src":"7428:58:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4436,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7542:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7547:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"7542:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3231","id":4438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"7542:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4542,"nodeType":"Block","src":"8532:231:5","statements":[{"condition":{"expression":{"id":4525,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"8578:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8583:9:5","memberName":"CanInsure","nodeType":"MemberAccess","referencedDeclaration":3928,"src":"8578:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4540,"nodeType":"Block","src":"8684:68:5","statements":[{"expression":{"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4534,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"8703:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8708:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"8703:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"506c617965722773205475726e2e","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8720:16:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_422d15daa096778fda972fc5138b55e931f5643ba63509e805c78f7345dad80d","typeString":"literal_string \"Player's Turn.\""},"value":"Player's Turn."},"src":"8703:33:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4539,"nodeType":"ExpressionStatement","src":"8703:33:5"}]},"id":4541,"nodeType":"IfStatement","src":"8575:177:5","trueBody":{"id":4533,"nodeType":"Block","src":"8594:84:5","statements":[{"expression":{"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4527,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"8613:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8618:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"8613:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"506c617965722773205475726e2e2057616e7420496e737572616e63653f","id":4530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8630:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_82910614f1f6d149b944338a2ff42e687ecccde42ba51cc53d99673094a696c5","typeString":"literal_string \"Player's Turn. Want Insurance?\""},"value":"Player's Turn. Want Insurance?"},"src":"8613:49:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4532,"nodeType":"ExpressionStatement","src":"8613:49:5"}]}}]},"id":4543,"nodeType":"IfStatement","src":"7539:1224:5","trueBody":{"id":4524,"nodeType":"Block","src":"7570:956:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4440,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7630:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4441,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7635:11:5","memberName":"DealerCard1","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"7630:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3130","id":4442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7650:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7630:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4473,"nodeType":"IfStatement","src":"7627:369:5","trueBody":{"id":4472,"nodeType":"Block","src":"7654:342:5","statements":[{"expression":{"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4444,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7719:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7724:11:5","memberName":"DealerCard2","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"7719:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4447,"name":"GetCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"7738:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_uint256_$","typeString":"function () returns (uint256)"}},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7738:9:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7719:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4450,"nodeType":"ExpressionStatement","src":"7719:28:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4451,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7819:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7824:11:5","memberName":"DealerCard2","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"7819:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7839:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7819:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4461,"nodeType":"IfStatement","src":"7816:69:5","trueBody":{"expression":{"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4455,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7864:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7869:11:5","memberName":"DealerCard2","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"7864:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3131","id":4458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7883:2:5","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"7864:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4460,"nodeType":"ExpressionStatement","src":"7864:21:5"}},{"expression":{"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4462,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7922:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7927:15:5","memberName":"DealerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"7922:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4465,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7945:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7950:11:5","memberName":"DealerCard1","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"7945:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4467,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7964:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7969:11:5","memberName":"DealerCard2","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"7964:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7945:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7922:58:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4471,"nodeType":"ExpressionStatement","src":"7922:58:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4474,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"8057:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8062:15:5","memberName":"DealerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"8057:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4476,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"8081:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4477,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8086:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"8081:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8057:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4516,"nodeType":"Block","src":"8248:220:5","statements":[{"expression":{"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4493,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"8267:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8272:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"8267:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"426c61636b4a61636b2120506c617965722057696e732e","id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8284:25:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e5d18071df4a269817b0b857675424395c2482a5fec86e26362c103491c2dd7","typeString":"literal_string \"BlackJack! Player Wins.\""},"value":"BlackJack! Player Wins."},"src":"8267:42:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4498,"nodeType":"ExpressionStatement","src":"8267:42:5"},{"expression":{"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4499,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"8328:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8333:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"8328:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4502,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"8350:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8355:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"8350:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8367:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8350:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8349:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4507,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"8373:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8378:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"8373:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8390:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8373:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8372:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8349:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8348:45:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8328:65:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4515,"nodeType":"ExpressionStatement","src":"8328:65:5"}]},"id":4517,"nodeType":"IfStatement","src":"8054:414:5","trueBody":{"id":4492,"nodeType":"Block","src":"8103:139:5","statements":[{"expression":{"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4479,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"8122:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8127:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"8122:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5374616e644f666621","id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8139:11:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_dc2f6d0557f77901d97392d50fd9bcf9eaa7f6ad691535f6b7d2109aeb8b8ce0","typeString":"literal_string \"StandOff!\""},"value":"StandOff!"},"src":"8122:28:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4484,"nodeType":"ExpressionStatement","src":"8122:28:5"},{"expression":{"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4485,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"8169:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4487,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8174:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"8169:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4488,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"8189:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8194:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"8189:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8169:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4491,"nodeType":"ExpressionStatement","src":"8169:34:5"}]}},{"expression":{"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4518,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"8484:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8489:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"8484:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8509:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8484:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4523,"nodeType":"ExpressionStatement","src":"8484:30:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4544,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"8804:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4545,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8809:11:5","memberName":"PlayerCard1","nodeType":"MemberAccess","referencedDeclaration":3908,"src":"8804:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4546,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"8824:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8829:11:5","memberName":"PlayerCard2","nodeType":"MemberAccess","referencedDeclaration":3910,"src":"8824:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8804:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4571,"nodeType":"IfStatement","src":"8801:308:5","trueBody":{"id":4570,"nodeType":"Block","src":"8842:267:5","statements":[{"condition":{"expression":{"id":4549,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"8860:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4550,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8865:9:5","memberName":"CanInsure","nodeType":"MemberAccess","referencedDeclaration":3928,"src":"8860:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4557,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"8997:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9002:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"8997:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"506c617965722773205475726e2e20506c617965722063616e2053706c69742e","id":4560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9014:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5c6cd1cc418c324f9009a5f03572d3c2217b5ff9268f68239da45a571851df2a","typeString":"literal_string \"Player's Turn. Player can Split.\""},"value":"Player's Turn. Player can Split."},"src":"8997:51:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4562,"nodeType":"ExpressionStatement","src":"8997:51:5"},"id":4563,"nodeType":"IfStatement","src":"8857:191:5","trueBody":{"expression":{"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4551,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"8893:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8898:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"8893:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"506c617965722773205475726e2e2057616e7420496e737572616e63653f20506c617965722063616e2053706c69742e","id":4554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8910:50:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_43f6191593673f42e81691a1ce2e6b2fb442715ea6c082ac00301ebb04bd8a24","typeString":"literal_string \"Player's Turn. Want Insurance? Player can Split.\""},"value":"Player's Turn. Want Insurance? Player can Split."},"src":"8893:67:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4556,"nodeType":"ExpressionStatement","src":"8893:67:5"}},{"expression":{"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4564,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"9077:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9082:8:5","memberName":"CanSplit","nodeType":"MemberAccess","referencedDeclaration":3930,"src":"9077:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9093:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9077:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4569,"nodeType":"ExpressionStatement","src":"9077:20:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4572,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"9172:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9177:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"9172:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"39","id":4574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9196:1:5","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"9172:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4576,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"9201:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9206:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"9201:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3130","id":4578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9225:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"9201:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9172:55:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4581,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"9231:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9236:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"9231:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3131","id":4583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9255:2:5","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"9231:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9172:85:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4628,"nodeType":"IfStatement","src":"9169:645:5","trueBody":{"id":4627,"nodeType":"Block","src":"9259:555:5","statements":[{"condition":{"expression":{"id":4586,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"9277:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4587,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9282:9:5","memberName":"CanInsure","nodeType":"MemberAccess","referencedDeclaration":3928,"src":"9277:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4619,"nodeType":"Block","src":"9547:216:5","statements":[{"expression":{"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4604,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"9566:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4606,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9571:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"9566:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"506c617965722773205475726e2e20506c617965722063616e20446f75626c6520446f776e2e","id":4607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9583:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_eddfe9ecc4872930b90682bc699b4b944c580cbb6fe34848736eb9b23667ad51","typeString":"literal_string \"Player's Turn. Player can Double Down.\""},"value":"Player's Turn. Player can Double Down."},"src":"9566:57:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4609,"nodeType":"ExpressionStatement","src":"9566:57:5"},{"condition":{"expression":{"id":4610,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"9645:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4611,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9650:8:5","memberName":"CanSplit","nodeType":"MemberAccess","referencedDeclaration":3930,"src":"9645:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4618,"nodeType":"IfStatement","src":"9642:105:5","trueBody":{"expression":{"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4612,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"9681:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9686:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"9681:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"506c617965722773205475726e2e20506c617965722063616e2053706c6974206f7220446f75626c6520446f776e2e","id":4615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9698:49:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac4cafa4551dafeacaf1b27d558c6709e6b2360bac78fcbd1ab18ba0085081d","typeString":"literal_string \"Player's Turn. Player can Split or Double Down.\""},"value":"Player's Turn. Player can Split or Double Down."},"src":"9681:66:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4617,"nodeType":"ExpressionStatement","src":"9681:66:5"}}]},"id":4620,"nodeType":"IfStatement","src":"9274:489:5","trueBody":{"id":4603,"nodeType":"Block","src":"9293:248:5","statements":[{"expression":{"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4588,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"9312:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4590,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9317:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"9312:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"506c617965722773205475726e2e2057616e7420496e737572616e63653f20506c617965722063616e20446f75626c6520446f776e2e","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9329:56:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_35c6597c03fa4fb60545250a3470d78b7e9c6cc7f1bf74ec306e7779360a8bd3","typeString":"literal_string \"Player's Turn. Want Insurance? Player can Double Down.\""},"value":"Player's Turn. Want Insurance? Player can Double Down."},"src":"9312:73:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4593,"nodeType":"ExpressionStatement","src":"9312:73:5"},{"condition":{"expression":{"id":4594,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"9407:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9412:8:5","memberName":"CanSplit","nodeType":"MemberAccess","referencedDeclaration":3930,"src":"9407:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4602,"nodeType":"IfStatement","src":"9404:121:5","trueBody":{"expression":{"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4596,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"9443:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9448:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"9443:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"506c617965722773205475726e2e2057616e7420496e737572616e63653f20506c617965722063616e2053706c6974206f7220446f75626c6520446f776e2e","id":4599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9460:65:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_533c5bb65aea6ad4a3a35ba7425cc636e5f674b7695b779da0ca0df830836dee","typeString":"literal_string \"Player's Turn. Want Insurance? Player can Split or Double Down.\""},"value":"Player's Turn. Want Insurance? Player can Split or Double Down."},"src":"9443:82:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4601,"nodeType":"ExpressionStatement","src":"9443:82:5"}}]}},{"expression":{"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4621,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"9777:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9782:13:5","memberName":"CanDoubleDown","nodeType":"MemberAccess","referencedDeclaration":3926,"src":"9777:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9798:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9777:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4626,"nodeType":"ExpressionStatement","src":"9777:25:5"}]}}]},"documentation":{"id":4258,"nodeType":"StructuredDocumentation","src":"5987:109:5","text":" @dev DealCards\n @param game Ongoing game to store game state after dealing cards."},"id":4630,"implemented":true,"kind":"function","modifiers":[],"name":"DealCards","nameLocation":"6111:9:5","nodeType":"FunctionDefinition","parameters":{"id":4262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4261,"mutability":"mutable","name":"game","nameLocation":"6134:4:5","nodeType":"VariableDeclaration","scope":4630,"src":"6121:17:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"},"typeName":{"id":4260,"nodeType":"UserDefinedTypeName","pathNode":{"id":4259,"name":"Game","nameLocations":["6121:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":3939,"src":"6121:4:5"},"referencedDeclaration":3939,"src":"6121:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"}},"visibility":"internal"}],"src":"6120:19:5"},"returnParameters":{"id":4263,"nodeType":"ParameterList","parameters":[],"src":"6148:0:5"},"scope":6344,"src":"6102:3719:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4803,"nodeType":"Block","src":"9955:1672:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4637,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"9984:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4640,"indexExpression":{"expression":{"id":4638,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10011:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10015:6:5","memberName":"sender","nodeType":"MemberAccess","src":"10011:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9984:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9984:43:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d655f444e45","id":4643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10029:10:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa","typeString":"literal_string \"Game_DNE\""},"value":"Game_DNE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa","typeString":"literal_string \"Game_DNE\""}],"id":4636,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9976:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9976:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4645,"nodeType":"ExpressionStatement","src":"9976:64:5"},{"assignments":[4648],"declarations":[{"constant":false,"id":4648,"mutability":"mutable","name":"game","nameLocation":"10066:4:5","nodeType":"VariableDeclaration","scope":4803,"src":"10053:17:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"},"typeName":{"id":4647,"nodeType":"UserDefinedTypeName","pathNode":{"id":4646,"name":"Game","nameLocations":["10053:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":3939,"src":"10053:4:5"},"referencedDeclaration":3939,"src":"10053:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"}},"visibility":"internal"}],"id":4655,"initialValue":{"baseExpression":{"id":4649,"name":"_idsToGameMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"10073:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game storage ref)"}},"id":4654,"indexExpression":{"baseExpression":{"id":4650,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"10087:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4653,"indexExpression":{"expression":{"id":4651,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10114:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10118:6:5","memberName":"sender","nodeType":"MemberAccess","src":"10114:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10087:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10073:53:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage","typeString":"struct BlackJack.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10053:73:5"},{"expression":{"arguments":[{"expression":{"id":4657,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"10145:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10150:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"10145:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e506c617965725475726e5f4f6e6c79","id":4659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10169:19:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203","typeString":"literal_string \"OnPlayerTurn_Only\""},"value":"OnPlayerTurn_Only"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203","typeString":"literal_string \"OnPlayerTurn_Only\""}],"id":4656,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10137:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10137:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4661,"nodeType":"ExpressionStatement","src":"10137:52:5"},{"expression":{"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4662,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"10202:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10207:13:5","memberName":"CanDoubleDown","nodeType":"MemberAccess","referencedDeclaration":3926,"src":"10202:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10223:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"10202:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4667,"nodeType":"ExpressionStatement","src":"10202:26:5"},{"expression":{"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4668,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"10266:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10271:8:5","memberName":"CanSplit","nodeType":"MemberAccess","referencedDeclaration":3930,"src":"10266:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10282:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"10266:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4673,"nodeType":"ExpressionStatement","src":"10266:21:5"},{"expression":{"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4674,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"10324:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4676,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10329:9:5","memberName":"CanInsure","nodeType":"MemberAccess","referencedDeclaration":3928,"src":"10324:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10341:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"10324:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4679,"nodeType":"ExpressionStatement","src":"10324:22:5"},{"expression":{"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4680,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"10394:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10399:13:5","memberName":"PlayerNewCard","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"10394:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4683,"name":"GetCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"10415:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_uint256_$","typeString":"function () returns (uint256)"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10415:9:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10394:30:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4686,"nodeType":"ExpressionStatement","src":"10394:30:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4687,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"10440:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10445:13:5","memberName":"PlayerNewCard","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"10440:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10462:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10440:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4691,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"10467:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10472:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"10467:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3131","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10490:2:5","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"10467:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10440:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4709,"nodeType":"IfStatement","src":"10437:208:5","trueBody":{"id":4708,"nodeType":"Block","src":"10494:151:5","statements":[{"expression":{"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4696,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"10573:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10578:13:5","memberName":"PlayerNewCard","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"10573:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3131","id":4699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10594:2:5","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"10573:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4701,"nodeType":"ExpressionStatement","src":"10573:23:5"},{"expression":{"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4702,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"10611:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10616:10:5","memberName":"IsSoftHand","nodeType":"MemberAccess","referencedDeclaration":3934,"src":"10611:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10629:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10611:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4707,"nodeType":"ExpressionStatement","src":"10611:22:5"}]}},{"condition":{"expression":{"id":4710,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"10671:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4711,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10676:11:5","memberName":"IsSplitting","nodeType":"MemberAccess","referencedDeclaration":3932,"src":"10671:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4801,"nodeType":"Block","src":"11274:346:5","statements":[{"expression":{"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4770,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"11364:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11369:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"11364:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4773,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"11388:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11393:13:5","memberName":"PlayerNewCard","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"11388:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11364:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4776,"nodeType":"ExpressionStatement","src":"11364:42:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4777,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"11426:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11431:10:5","memberName":"IsSoftHand","nodeType":"MemberAccess","referencedDeclaration":3934,"src":"11426:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4779,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"11445:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11450:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"11445:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3231","id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11468:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"11445:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11426:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4797,"nodeType":"IfStatement","src":"11423:151:5","trueBody":{"id":4796,"nodeType":"Block","src":"11471:103:5","statements":[{"expression":{"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4784,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"11490:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11495:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"11490:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3130","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11514:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"11490:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4789,"nodeType":"ExpressionStatement","src":"11490:26:5"},{"expression":{"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4790,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"11535:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11540:10:5","memberName":"IsSoftHand","nodeType":"MemberAccess","referencedDeclaration":3934,"src":"11535:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11553:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"11535:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4795,"nodeType":"ExpressionStatement","src":"11535:23:5"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4798,"name":"CheckWinnerOnHit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"11590:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11590:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4800,"nodeType":"ExpressionStatement","src":"11590:18:5"}]},"id":4802,"nodeType":"IfStatement","src":"10668:952:5","trueBody":{"id":4769,"nodeType":"Block","src":"10689:579:5","statements":[{"expression":{"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4712,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"10765:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4714,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10770:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"10765:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"506c617965722773205475726e2e","id":4715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10782:16:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_422d15daa096778fda972fc5138b55e931f5643ba63509e805c78f7345dad80d","typeString":"literal_string \"Player's Turn.\""},"value":"Player's Turn."},"src":"10765:33:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4717,"nodeType":"ExpressionStatement","src":"10765:33:5"},{"expression":{"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4718,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"10813:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10818:16:5","memberName":"PlayerSplitTotal","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"10813:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4721,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"10838:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10843:13:5","memberName":"PlayerNewCard","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"10838:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10813:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4724,"nodeType":"ExpressionStatement","src":"10813:43:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4725,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"10876:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10881:10:5","memberName":"IsSoftHand","nodeType":"MemberAccess","referencedDeclaration":3934,"src":"10876:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4727,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"10895:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10900:16:5","memberName":"PlayerSplitTotal","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"10895:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3231","id":4729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10919:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"10895:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10876:45:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4745,"nodeType":"IfStatement","src":"10873:154:5","trueBody":{"id":4744,"nodeType":"Block","src":"10923:104:5","statements":[{"expression":{"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4732,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"10942:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4734,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10947:16:5","memberName":"PlayerSplitTotal","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"10942:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3130","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10967:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"10942:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4737,"nodeType":"ExpressionStatement","src":"10942:27:5"},{"expression":{"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4738,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"10988:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10993:10:5","memberName":"IsSoftHand","nodeType":"MemberAccess","referencedDeclaration":3934,"src":"10988:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11006:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"10988:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4743,"nodeType":"ExpressionStatement","src":"10988:23:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4746,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"11058:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11063:16:5","memberName":"PlayerSplitTotal","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"11058:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3231","id":4748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11082:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"11058:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4768,"nodeType":"IfStatement","src":"11055:202:5","trueBody":{"id":4767,"nodeType":"Block","src":"11086:171:5","statements":[{"expression":{"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4750,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"11105:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11110:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"11105:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"53706c69742068616e6420636f6d706c6574652e20506c617965722773205475726e2e","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11122:37:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_27060807f988422d7133d254daff7029c4d3180d72ecf9956ac4851525d550ef","typeString":"literal_string \"Split hand complete. Player's Turn.\""},"value":"Split hand complete. Player's Turn."},"src":"11105:54:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4755,"nodeType":"ExpressionStatement","src":"11105:54:5"},{"expression":{"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11178:19:5","subExpression":{"expression":{"id":4756,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"11178:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11183:12:5","memberName":"SplitCounter","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"11178:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4760,"nodeType":"ExpressionStatement","src":"11178:19:5"},{"expression":{"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4761,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"11216:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11221:11:5","memberName":"IsSplitting","nodeType":"MemberAccess","referencedDeclaration":3932,"src":"11216:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11235:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"11216:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4766,"nodeType":"ExpressionStatement","src":"11216:24:5"}]}}]}}]},"documentation":{"id":4631,"nodeType":"StructuredDocumentation","src":"9833:80:5","text":" @dev Hit - Can only be called by player in an ongoing game."},"functionSelector":"39ae2133","id":4804,"implemented":true,"kind":"function","modifiers":[{"id":4634,"kind":"modifierInvocation","modifierName":{"id":4633,"name":"IsValidAddr","nameLocations":["9934:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":4011,"src":"9934:11:5"},"nodeType":"ModifierInvocation","src":"9934:11:5"}],"name":"Hit","nameLocation":"9928:3:5","nodeType":"FunctionDefinition","parameters":{"id":4632,"nodeType":"ParameterList","parameters":[],"src":"9931:2:5"},"returnParameters":{"id":4635,"nodeType":"ParameterList","parameters":[],"src":"9955:0:5"},"scope":6344,"src":"9919:1708:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4880,"nodeType":"Block","src":"11769:672:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4811,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"11798:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4814,"indexExpression":{"expression":{"id":4812,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11825:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11829:6:5","memberName":"sender","nodeType":"MemberAccess","src":"11825:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11798:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11840:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11798:43:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d655f444e45","id":4817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11843:10:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa","typeString":"literal_string \"Game_DNE\""},"value":"Game_DNE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa","typeString":"literal_string \"Game_DNE\""}],"id":4810,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11790:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11790:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4819,"nodeType":"ExpressionStatement","src":"11790:64:5"},{"assignments":[4822],"declarations":[{"constant":false,"id":4822,"mutability":"mutable","name":"game","nameLocation":"11880:4:5","nodeType":"VariableDeclaration","scope":4880,"src":"11867:17:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"},"typeName":{"id":4821,"nodeType":"UserDefinedTypeName","pathNode":{"id":4820,"name":"Game","nameLocations":["11867:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":3939,"src":"11867:4:5"},"referencedDeclaration":3939,"src":"11867:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"}},"visibility":"internal"}],"id":4829,"initialValue":{"baseExpression":{"id":4823,"name":"_idsToGameMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"11887:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game storage ref)"}},"id":4828,"indexExpression":{"baseExpression":{"id":4824,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"11901:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4827,"indexExpression":{"expression":{"id":4825,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11928:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11932:6:5","memberName":"sender","nodeType":"MemberAccess","src":"11928:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11901:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11887:53:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage","typeString":"struct BlackJack.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11867:73:5"},{"expression":{"arguments":[{"expression":{"id":4831,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"11959:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11964:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"11959:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e506c617965725475726e5f4f6e6c79","id":4833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11983:19:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203","typeString":"literal_string \"OnPlayerTurn_Only\""},"value":"OnPlayerTurn_Only"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203","typeString":"literal_string \"OnPlayerTurn_Only\""}],"id":4830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11951:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11951:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4835,"nodeType":"ExpressionStatement","src":"11951:52:5"},{"expression":{"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4836,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"12025:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4838,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12030:13:5","memberName":"CanDoubleDown","nodeType":"MemberAccess","referencedDeclaration":3926,"src":"12025:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12046:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"12025:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4841,"nodeType":"ExpressionStatement","src":"12025:26:5"},{"expression":{"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4842,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"12089:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12094:8:5","memberName":"CanSplit","nodeType":"MemberAccess","referencedDeclaration":3930,"src":"12089:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12105:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"12089:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4847,"nodeType":"ExpressionStatement","src":"12089:21:5"},{"expression":{"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4848,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"12147:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12152:9:5","memberName":"CanInsure","nodeType":"MemberAccess","referencedDeclaration":3928,"src":"12147:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12164:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"12147:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4853,"nodeType":"ExpressionStatement","src":"12147:22:5"},{"condition":{"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12212:17:5","subExpression":{"expression":{"id":4854,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"12213:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4855,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12218:11:5","memberName":"IsSplitting","nodeType":"MemberAccess","referencedDeclaration":3932,"src":"12213:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4878,"nodeType":"Block","src":"12280:154:5","statements":[{"expression":{"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4861,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"12295:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12300:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"12295:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"53706c69742068616e6420636f6d706c6574652e20506c617965722773205475726e2e","id":4864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12312:37:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_27060807f988422d7133d254daff7029c4d3180d72ecf9956ac4851525d550ef","typeString":"literal_string \"Split hand complete. Player's Turn.\""},"value":"Split hand complete. Player's Turn."},"src":"12295:54:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4866,"nodeType":"ExpressionStatement","src":"12295:54:5"},{"expression":{"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12364:19:5","subExpression":{"expression":{"id":4867,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"12364:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12369:12:5","memberName":"SplitCounter","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"12364:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4871,"nodeType":"ExpressionStatement","src":"12364:19:5"},{"expression":{"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4872,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"12398:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12403:11:5","memberName":"IsSplitting","nodeType":"MemberAccess","referencedDeclaration":3932,"src":"12398:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12417:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"12398:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4877,"nodeType":"ExpressionStatement","src":"12398:24:5"}]},"id":4879,"nodeType":"IfStatement","src":"12209:225:5","trueBody":{"id":4860,"nodeType":"Block","src":"12231:43:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4857,"name":"PlayDealerHand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"12246:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12246:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4859,"nodeType":"ExpressionStatement","src":"12246:16:5"}]}}]},"documentation":{"id":4805,"nodeType":"StructuredDocumentation","src":"11645:82:5","text":" @dev Stand - Can only be called by player in an ongoing game."},"functionSelector":"58c5a7cc","id":4881,"implemented":true,"kind":"function","modifiers":[{"id":4808,"kind":"modifierInvocation","modifierName":{"id":4807,"name":"IsValidAddr","nameLocations":["11750:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":4011,"src":"11750:11:5"},"nodeType":"ModifierInvocation","src":"11750:11:5"}],"name":"Stand","nameLocation":"11742:5:5","nodeType":"FunctionDefinition","parameters":{"id":4806,"nodeType":"ParameterList","parameters":[],"src":"11747:2:5"},"returnParameters":{"id":4809,"nodeType":"ParameterList","parameters":[],"src":"11769:0:5"},"scope":6344,"src":"11733:708:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4967,"nodeType":"Block","src":"12529:770:5","statements":[{"assignments":[4887],"declarations":[{"constant":false,"id":4887,"mutability":"mutable","name":"game","nameLocation":"12555:4:5","nodeType":"VariableDeclaration","scope":4967,"src":"12542:17:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"},"typeName":{"id":4886,"nodeType":"UserDefinedTypeName","pathNode":{"id":4885,"name":"Game","nameLocations":["12542:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":3939,"src":"12542:4:5"},"referencedDeclaration":3939,"src":"12542:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"}},"visibility":"internal"}],"id":4894,"initialValue":{"baseExpression":{"id":4888,"name":"_idsToGameMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"12562:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game storage ref)"}},"id":4893,"indexExpression":{"baseExpression":{"id":4889,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"12576:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4892,"indexExpression":{"expression":{"id":4890,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12603:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12607:6:5","memberName":"sender","nodeType":"MemberAccess","src":"12603:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12576:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12562:53:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage","typeString":"struct BlackJack.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12542:73:5"},{"expression":{"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4895,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"12659:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12664:11:5","memberName":"DealerCard2","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"12659:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4898,"name":"GetCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"12678:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_uint256_$","typeString":"function () returns (uint256)"}},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12678:9:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12659:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4901,"nodeType":"ExpressionStatement","src":"12659:28:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4902,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"12701:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12706:11:5","memberName":"DealerCard2","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"12701:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12721:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12701:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4906,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"12726:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4907,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12731:11:5","memberName":"DealerCard1","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"12726:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3131","id":4908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12745:2:5","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"12726:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12701:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4917,"nodeType":"IfStatement","src":"12698:85:5","trueBody":{"expression":{"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4911,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"12762:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12767:11:5","memberName":"DealerCard2","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"12762:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3131","id":4914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12781:2:5","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"12762:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4916,"nodeType":"ExpressionStatement","src":"12762:21:5"}},{"expression":{"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4918,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"12850:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12855:15:5","memberName":"DealerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"12850:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4921,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"12873:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12878:11:5","memberName":"DealerCard1","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"12873:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4923,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"12892:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12897:11:5","memberName":"DealerCard2","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"12892:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12873:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12850:58:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4927,"nodeType":"ExpressionStatement","src":"12850:58:5"},{"body":{"id":4962,"nodeType":"Block","src":"13010:249:5","statements":[{"expression":{"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4932,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"13027:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13032:13:5","memberName":"DealerNewCard","nodeType":"MemberAccess","referencedDeclaration":3922,"src":"13027:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4935,"name":"GetCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"13048:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_uint256_$","typeString":"function () returns (uint256)"}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13048:9:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13027:30:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4938,"nodeType":"ExpressionStatement","src":"13027:30:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4939,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"13075:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13080:13:5","memberName":"DealerNewCard","nodeType":"MemberAccess","referencedDeclaration":3922,"src":"13075:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13097:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13075:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4943,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"13102:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13107:15:5","memberName":"DealerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"13102:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3131","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13125:2:5","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"13102:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13075:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4954,"nodeType":"IfStatement","src":"13072:97:5","trueBody":{"expression":{"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4948,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"13146:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13151:13:5","memberName":"DealerNewCard","nodeType":"MemberAccess","referencedDeclaration":3922,"src":"13146:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3131","id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13167:2:5","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"13146:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4953,"nodeType":"ExpressionStatement","src":"13146:23:5"}},{"expression":{"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4955,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"13205:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4957,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13210:15:5","memberName":"DealerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"13205:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4958,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"13229:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13234:13:5","memberName":"DealerNewCard","nodeType":"MemberAccess","referencedDeclaration":3922,"src":"13229:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13205:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4961,"nodeType":"ExpressionStatement","src":"13205:42:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4928,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"12983:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12988:15:5","memberName":"DealerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"12983:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3137","id":4930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13006:2:5","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"17"},"src":"12983:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4963,"nodeType":"WhileStatement","src":"12977:282:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4964,"name":"CheckWinnerOnStand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"13271:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13271:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4966,"nodeType":"ExpressionStatement","src":"13271:20:5"}]},"documentation":{"id":4882,"nodeType":"StructuredDocumentation","src":"12449:40:5","text":" @dev PlayDealerHand"},"id":4968,"implemented":true,"kind":"function","modifiers":[],"name":"PlayDealerHand","nameLocation":"12504:14:5","nodeType":"FunctionDefinition","parameters":{"id":4883,"nodeType":"ParameterList","parameters":[],"src":"12518:2:5"},"returnParameters":{"id":4884,"nodeType":"ParameterList","parameters":[],"src":"12529:0:5"},"scope":6344,"src":"12495:804:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5075,"nodeType":"Block","src":"13447:1031:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4975,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"13476:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4978,"indexExpression":{"expression":{"id":4976,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13503:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13507:6:5","memberName":"sender","nodeType":"MemberAccess","src":"13503:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13476:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13518:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13476:43:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d655f444e45","id":4981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13521:10:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa","typeString":"literal_string \"Game_DNE\""},"value":"Game_DNE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa","typeString":"literal_string \"Game_DNE\""}],"id":4974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13468:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13468:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4983,"nodeType":"ExpressionStatement","src":"13468:64:5"},{"assignments":[4986],"declarations":[{"constant":false,"id":4986,"mutability":"mutable","name":"game","nameLocation":"13558:4:5","nodeType":"VariableDeclaration","scope":5075,"src":"13545:17:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"},"typeName":{"id":4985,"nodeType":"UserDefinedTypeName","pathNode":{"id":4984,"name":"Game","nameLocations":["13545:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":3939,"src":"13545:4:5"},"referencedDeclaration":3939,"src":"13545:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"}},"visibility":"internal"}],"id":4993,"initialValue":{"baseExpression":{"id":4987,"name":"_idsToGameMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"13565:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game storage ref)"}},"id":4992,"indexExpression":{"baseExpression":{"id":4988,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"13579:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4991,"indexExpression":{"expression":{"id":4989,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13606:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13610:6:5","memberName":"sender","nodeType":"MemberAccess","src":"13606:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13579:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13565:53:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage","typeString":"struct BlackJack.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13545:73:5"},{"expression":{"arguments":[{"expression":{"id":4995,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"13637:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":4996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13642:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"13637:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e506c617965725475726e5f4f6e6c79","id":4997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13661:19:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203","typeString":"literal_string \"OnPlayerTurn_Only\""},"value":"OnPlayerTurn_Only"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203","typeString":"literal_string \"OnPlayerTurn_Only\""}],"id":4994,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13629:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13629:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4999,"nodeType":"ExpressionStatement","src":"13629:52:5"},{"expression":{"arguments":[{"expression":{"id":5001,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"13700:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5002,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13705:13:5","memberName":"CanDoubleDown","nodeType":"MemberAccess","referencedDeclaration":3926,"src":"13700:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e43616e446f75626c65446f776e5475726e5f4f6e6c79","id":5003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13720:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_11c0e650c89aa2a2bcc82172d574c83a55d46b332c6c5d528dd67e12fe46a726","typeString":"literal_string \"OnCanDoubleDownTurn_Only\""},"value":"OnCanDoubleDownTurn_Only"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_11c0e650c89aa2a2bcc82172d574c83a55d46b332c6c5d528dd67e12fe46a726","typeString":"literal_string \"OnCanDoubleDownTurn_Only\""}],"id":5000,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13692:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13692:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5005,"nodeType":"ExpressionStatement","src":"13692:55:5"},{"expression":{"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5006,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"13768:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13773:8:5","memberName":"CanSplit","nodeType":"MemberAccess","referencedDeclaration":3930,"src":"13768:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13784:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13768:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5011,"nodeType":"ExpressionStatement","src":"13768:21:5"},{"expression":{"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5012,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"13826:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13831:9:5","memberName":"CanInsure","nodeType":"MemberAccess","referencedDeclaration":3928,"src":"13826:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13843:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13826:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5017,"nodeType":"ExpressionStatement","src":"13826:22:5"},{"expression":{"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5018,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"13896:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13901:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"13896:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13921:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13896:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5023,"nodeType":"ExpressionStatement","src":"13896:30:5"},{"expression":{"arguments":[{"expression":{"id":5025,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"13983:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5026,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13988:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"13983:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5024,"name":"PlaceBet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"13974:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13974:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5028,"nodeType":"ExpressionStatement","src":"13974:24:5"},{"expression":{"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5029,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"14064:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14069:13:5","memberName":"CanDoubleDown","nodeType":"MemberAccess","referencedDeclaration":3926,"src":"14064:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14085:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"14064:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5034,"nodeType":"ExpressionStatement","src":"14064:26:5"},{"expression":{"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5035,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"14111:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14116:13:5","memberName":"PlayerNewCard","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"14111:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":5038,"name":"GetCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"14132:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_uint256_$","typeString":"function () returns (uint256)"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14132:9:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14111:30:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5041,"nodeType":"ExpressionStatement","src":"14111:30:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5042,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"14174:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5043,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14179:13:5","memberName":"PlayerNewCard","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"14174:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14196:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14174:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5046,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"14201:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14206:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"14201:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3131","id":5048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14224:2:5","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"14201:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14174:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5064,"nodeType":"IfStatement","src":"14171:151:5","trueBody":{"id":5063,"nodeType":"Block","src":"14228:94:5","statements":[{"expression":{"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5051,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"14243:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14248:13:5","memberName":"PlayerNewCard","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"14243:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3131","id":5054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14264:2:5","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"14243:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5056,"nodeType":"ExpressionStatement","src":"14243:23:5"},{"expression":{"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5057,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"14288:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5059,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14293:10:5","memberName":"IsSoftHand","nodeType":"MemberAccess","referencedDeclaration":3934,"src":"14288:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14306:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14288:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5062,"nodeType":"ExpressionStatement","src":"14288:22:5"}]}},{"expression":{"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5065,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"14342:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14347:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"14342:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":5068,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"14366:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14371:13:5","memberName":"PlayerNewCard","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"14366:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14342:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5071,"nodeType":"ExpressionStatement","src":"14342:42:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5072,"name":"PlayDealerHand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"14454:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14454:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5074,"nodeType":"ExpressionStatement","src":"14454:16:5"}]},"documentation":{"id":4969,"nodeType":"StructuredDocumentation","src":"13311:87:5","text":" @dev DoubleDown - Can only be called by player in an ongoing game."},"functionSelector":"e8a80e9a","id":5076,"implemented":true,"kind":"function","modifiers":[{"id":4972,"kind":"modifierInvocation","modifierName":{"id":4971,"name":"IsValidAddr","nameLocations":["13426:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":4011,"src":"13426:11:5"},"nodeType":"ModifierInvocation","src":"13426:11:5"}],"name":"DoubleDown","nameLocation":"13413:10:5","nodeType":"FunctionDefinition","parameters":{"id":4970,"nodeType":"ParameterList","parameters":[],"src":"13423:2:5"},"returnParameters":{"id":4973,"nodeType":"ParameterList","parameters":[],"src":"13447:0:5"},"scope":6344,"src":"13404:1074:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5233,"nodeType":"Block","src":"14622:1614:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5083,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"14651:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5086,"indexExpression":{"expression":{"id":5084,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14678:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14682:6:5","memberName":"sender","nodeType":"MemberAccess","src":"14678:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14651:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14693:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14651:43:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d655f444e45","id":5089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14696:10:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa","typeString":"literal_string \"Game_DNE\""},"value":"Game_DNE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa","typeString":"literal_string \"Game_DNE\""}],"id":5082,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14643:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14643:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5091,"nodeType":"ExpressionStatement","src":"14643:64:5"},{"assignments":[5094],"declarations":[{"constant":false,"id":5094,"mutability":"mutable","name":"game","nameLocation":"14733:4:5","nodeType":"VariableDeclaration","scope":5233,"src":"14720:17:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"},"typeName":{"id":5093,"nodeType":"UserDefinedTypeName","pathNode":{"id":5092,"name":"Game","nameLocations":["14720:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":3939,"src":"14720:4:5"},"referencedDeclaration":3939,"src":"14720:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"}},"visibility":"internal"}],"id":5101,"initialValue":{"baseExpression":{"id":5095,"name":"_idsToGameMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"14740:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game storage ref)"}},"id":5100,"indexExpression":{"baseExpression":{"id":5096,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"14754:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5099,"indexExpression":{"expression":{"id":5097,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14781:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14785:6:5","memberName":"sender","nodeType":"MemberAccess","src":"14781:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14754:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14740:53:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage","typeString":"struct BlackJack.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14720:73:5"},{"expression":{"arguments":[{"expression":{"id":5103,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"14812:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14817:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"14812:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e506c617965725475726e5f4f6e6c79","id":5105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14836:19:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203","typeString":"literal_string \"OnPlayerTurn_Only\""},"value":"OnPlayerTurn_Only"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203","typeString":"literal_string \"OnPlayerTurn_Only\""}],"id":5102,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14804:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14804:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5107,"nodeType":"ExpressionStatement","src":"14804:52:5"},{"expression":{"arguments":[{"expression":{"id":5109,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"14875:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14880:8:5","memberName":"CanSplit","nodeType":"MemberAccess","referencedDeclaration":3930,"src":"14875:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e43616e53706c69745475726e5f4f6e6c79","id":5111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14890:21:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_dfd89935418421718fe83b17eaba9a49f57ee5a18bf73312e2efbf630b9b1ee9","typeString":"literal_string \"OnCanSplitTurn_Only\""},"value":"OnCanSplitTurn_Only"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dfd89935418421718fe83b17eaba9a49f57ee5a18bf73312e2efbf630b9b1ee9","typeString":"literal_string \"OnCanSplitTurn_Only\""}],"id":5108,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14867:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14867:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5113,"nodeType":"ExpressionStatement","src":"14867:45:5"},{"expression":{"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5114,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"14933:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5116,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14938:13:5","memberName":"CanDoubleDown","nodeType":"MemberAccess","referencedDeclaration":3926,"src":"14933:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14954:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"14933:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5119,"nodeType":"ExpressionStatement","src":"14933:26:5"},{"expression":{"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5120,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"14997:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15002:9:5","memberName":"CanInsure","nodeType":"MemberAccess","referencedDeclaration":3928,"src":"14997:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15014:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"14997:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5125,"nodeType":"ExpressionStatement","src":"14997:22:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5126,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"15070:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15075:11:5","memberName":"PlayerCard1","nodeType":"MemberAccess","referencedDeclaration":3908,"src":"15070:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3131","id":5128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15090:2:5","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"15070:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5159,"nodeType":"Block","src":"15193:131:5","statements":[{"expression":{"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5143,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"15208:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15213:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"15208:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5146,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"15231:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15236:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"15231:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15252:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15231:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15208:45:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5151,"nodeType":"ExpressionStatement","src":"15208:45:5"},{"expression":{"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5152,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"15268:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15273:16:5","memberName":"PlayerSplitTotal","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"15268:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5155,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"15292:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15297:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"15292:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15268:44:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5158,"nodeType":"ExpressionStatement","src":"15268:44:5"}]},"id":5160,"nodeType":"IfStatement","src":"15067:257:5","trueBody":{"id":5142,"nodeType":"Block","src":"15094:93:5","statements":[{"expression":{"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5130,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"15109:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15114:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"15109:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3131","id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15132:2:5","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"15109:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5135,"nodeType":"ExpressionStatement","src":"15109:25:5"},{"expression":{"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5136,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"15149:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15154:16:5","memberName":"PlayerSplitTotal","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"15149:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3131","id":5139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15173:2:5","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"15149:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5141,"nodeType":"ExpressionStatement","src":"15149:26:5"}]}},{"expression":{"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5161,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"15336:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15341:12:5","memberName":"SplitCounter","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"15336:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15356:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15336:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5166,"nodeType":"ExpressionStatement","src":"15336:21:5"},{"expression":{"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5167,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"15368:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15373:11:5","memberName":"IsSplitting","nodeType":"MemberAccess","referencedDeclaration":3932,"src":"15368:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15387:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"15368:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5172,"nodeType":"ExpressionStatement","src":"15368:23:5"},{"expression":{"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5173,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"15412:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15417:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"15412:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15437:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"15412:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5178,"nodeType":"ExpressionStatement","src":"15412:30:5"},{"expression":{"arguments":[{"expression":{"id":5180,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"15499:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5181,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15504:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"15499:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5179,"name":"PlaceBet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"15490:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15490:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5183,"nodeType":"ExpressionStatement","src":"15490:24:5"},{"expression":{"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5184,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"15656:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15661:8:5","memberName":"CanSplit","nodeType":"MemberAccess","referencedDeclaration":3930,"src":"15656:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15672:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"15656:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5189,"nodeType":"ExpressionStatement","src":"15656:21:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5190,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"15742:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15747:11:5","memberName":"PlayerCard1","nodeType":"MemberAccess","referencedDeclaration":3908,"src":"15742:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3131","id":5192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15762:2:5","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"15742:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5232,"nodeType":"IfStatement","src":"15739:490:5","trueBody":{"id":5231,"nodeType":"Block","src":"15766:463:5","statements":[{"expression":{"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5194,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"15781:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15786:13:5","memberName":"PlayerNewCard","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"15781:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":5197,"name":"GetCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"15802:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_uint256_$","typeString":"function () returns (uint256)"}},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15802:9:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15781:30:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5200,"nodeType":"ExpressionStatement","src":"15781:30:5"},{"expression":{"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5201,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"15899:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15904:16:5","memberName":"PlayerSplitTotal","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"15899:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":5204,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"15924:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15929:13:5","memberName":"PlayerNewCard","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"15924:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15899:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5207,"nodeType":"ExpressionStatement","src":"15899:43:5"},{"expression":{"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5208,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"15959:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15964:13:5","memberName":"PlayerNewCard","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"15959:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":5211,"name":"GetCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"15980:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_uint256_$","typeString":"function () returns (uint256)"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15980:9:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15959:30:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5214,"nodeType":"ExpressionStatement","src":"15959:30:5"},{"expression":{"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5215,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"16077:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16082:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"16077:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":5218,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"16101:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16106:13:5","memberName":"PlayerNewCard","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"16101:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16077:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5221,"nodeType":"ExpressionStatement","src":"16077:42:5"},{"expression":{"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5222,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"16148:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16153:11:5","memberName":"IsSplitting","nodeType":"MemberAccess","referencedDeclaration":3932,"src":"16148:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16167:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"16148:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5227,"nodeType":"ExpressionStatement","src":"16148:24:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5228,"name":"PlayDealerHand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"16201:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16201:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5230,"nodeType":"ExpressionStatement","src":"16201:16:5"}]}}]},"documentation":{"id":5077,"nodeType":"StructuredDocumentation","src":"14496:82:5","text":" @dev Split - Can only be called by player in an ongoing game."},"functionSelector":"55d842d7","id":5234,"implemented":true,"kind":"function","modifiers":[{"id":5080,"kind":"modifierInvocation","modifierName":{"id":5079,"name":"IsValidAddr","nameLocations":["14601:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":4011,"src":"14601:11:5"},"nodeType":"ModifierInvocation","src":"14601:11:5"}],"name":"Split","nameLocation":"14593:5:5","nodeType":"FunctionDefinition","parameters":{"id":5078,"nodeType":"ParameterList","parameters":[],"src":"14598:2:5"},"returnParameters":{"id":5081,"nodeType":"ParameterList","parameters":[],"src":"14622:0:5"},"scope":6344,"src":"14584:1652:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5314,"nodeType":"Block","src":"16388:679:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5241,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"16409:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5244,"indexExpression":{"expression":{"id":5242,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16436:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16440:6:5","memberName":"sender","nodeType":"MemberAccess","src":"16436:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16409:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16409:43:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d655f444e45","id":5247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16454:10:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa","typeString":"literal_string \"Game_DNE\""},"value":"Game_DNE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa","typeString":"literal_string \"Game_DNE\""}],"id":5240,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16401:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16401:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5249,"nodeType":"ExpressionStatement","src":"16401:64:5"},{"assignments":[5252],"declarations":[{"constant":false,"id":5252,"mutability":"mutable","name":"game","nameLocation":"16491:4:5","nodeType":"VariableDeclaration","scope":5314,"src":"16478:17:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"},"typeName":{"id":5251,"nodeType":"UserDefinedTypeName","pathNode":{"id":5250,"name":"Game","nameLocations":["16478:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":3939,"src":"16478:4:5"},"referencedDeclaration":3939,"src":"16478:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"}},"visibility":"internal"}],"id":5259,"initialValue":{"baseExpression":{"id":5253,"name":"_idsToGameMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"16498:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game storage ref)"}},"id":5258,"indexExpression":{"baseExpression":{"id":5254,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"16512:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5257,"indexExpression":{"expression":{"id":5255,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16539:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16543:6:5","memberName":"sender","nodeType":"MemberAccess","src":"16539:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16512:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16498:53:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage","typeString":"struct BlackJack.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16478:73:5"},{"expression":{"arguments":[{"expression":{"id":5261,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"16570:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16575:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"16570:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e506c617965725475726e5f4f6e6c79","id":5263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16594:19:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203","typeString":"literal_string \"OnPlayerTurn_Only\""},"value":"OnPlayerTurn_Only"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203","typeString":"literal_string \"OnPlayerTurn_Only\""}],"id":5260,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16562:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16562:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5265,"nodeType":"ExpressionStatement","src":"16562:52:5"},{"expression":{"arguments":[{"expression":{"id":5267,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"16633:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5268,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16638:9:5","memberName":"CanInsure","nodeType":"MemberAccess","referencedDeclaration":3928,"src":"16633:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e43616e496e737572655475726e5f4f6e6c79","id":5269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16649:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_926f9055e8483a0dd91587bf3472e05d3bc4576e61997b1970b39355b74b26b9","typeString":"literal_string \"OnCanInsureTurn_Only\""},"value":"OnCanInsureTurn_Only"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_926f9055e8483a0dd91587bf3472e05d3bc4576e61997b1970b39355b74b26b9","typeString":"literal_string \"OnCanInsureTurn_Only\""}],"id":5266,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16625:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16625:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5271,"nodeType":"ExpressionStatement","src":"16625:47:5"},{"expression":{"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5272,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"16693:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16698:12:5","memberName":"InsuranceBet","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"16693:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5275,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"16713:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16718:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"16713:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16730:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"16713:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16693:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5280,"nodeType":"ExpressionStatement","src":"16693:38:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5282,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"16752:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16757:12:5","memberName":"InsuranceBet","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"16752:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16772:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16752:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5286,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"16777:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16782:12:5","memberName":"InsuranceBet","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"16777:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":5288,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"16798:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16803:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"16798:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16777:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16752:62:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e535f46756e6473","id":5292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16816:11:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_619463c843b12538087273e01d1f541fd8442dd1bca0d59b893801731e06ef1d","typeString":"literal_string \"INS_Funds\""},"value":"INS_Funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_619463c843b12538087273e01d1f541fd8442dd1bca0d59b893801731e06ef1d","typeString":"literal_string \"INS_Funds\""}],"id":5281,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16744:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16744:84:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5294,"nodeType":"ExpressionStatement","src":"16744:84:5"},{"expression":{"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5295,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"16883:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16888:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"16883:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":5298,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"16903:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16908:12:5","memberName":"InsuranceBet","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"16903:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16883:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5301,"nodeType":"ExpressionStatement","src":"16883:37:5"},{"expression":{"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5302,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"16981:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16986:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"16981:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"506c617965722773205475726e2e","id":5305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16998:16:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_422d15daa096778fda972fc5138b55e931f5643ba63509e805c78f7345dad80d","typeString":"literal_string \"Player's Turn.\""},"value":"Player's Turn."},"src":"16981:33:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5307,"nodeType":"ExpressionStatement","src":"16981:33:5"},{"expression":{"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5308,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"17027:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17032:9:5","memberName":"CanInsure","nodeType":"MemberAccess","referencedDeclaration":3928,"src":"17027:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17044:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"17027:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5313,"nodeType":"ExpressionStatement","src":"17027:22:5"}]},"documentation":{"id":5235,"nodeType":"StructuredDocumentation","src":"16254:86:5","text":" @dev Insurance - Can only be called by player in an ongoing game."},"functionSelector":"622e5026","id":5315,"implemented":true,"kind":"function","modifiers":[{"id":5238,"kind":"modifierInvocation","modifierName":{"id":5237,"name":"IsValidAddr","nameLocations":["16367:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":4011,"src":"16367:11:5"},"nodeType":"ModifierInvocation","src":"16367:11:5"}],"name":"Insurance","nameLocation":"16355:9:5","nodeType":"FunctionDefinition","parameters":{"id":5236,"nodeType":"ParameterList","parameters":[],"src":"16364:2:5"},"returnParameters":{"id":5239,"nodeType":"ParameterList","parameters":[],"src":"16388:0:5"},"scope":6344,"src":"16346:721:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5398,"nodeType":"Block","src":"17169:760:5","statements":[{"assignments":[5321],"declarations":[{"constant":false,"id":5321,"mutability":"mutable","name":"game","nameLocation":"17195:4:5","nodeType":"VariableDeclaration","scope":5398,"src":"17182:17:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"},"typeName":{"id":5320,"nodeType":"UserDefinedTypeName","pathNode":{"id":5319,"name":"Game","nameLocations":["17182:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":3939,"src":"17182:4:5"},"referencedDeclaration":3939,"src":"17182:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"}},"visibility":"internal"}],"id":5328,"initialValue":{"baseExpression":{"id":5322,"name":"_idsToGameMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"17202:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game storage ref)"}},"id":5327,"indexExpression":{"baseExpression":{"id":5323,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"17216:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5326,"indexExpression":{"expression":{"id":5324,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17243:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17247:6:5","memberName":"sender","nodeType":"MemberAccess","src":"17243:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17216:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17202:53:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage","typeString":"struct BlackJack.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17182:73:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5329,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"17279:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17284:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"17279:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3231","id":5331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17302:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"17279:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5396,"nodeType":"Block","src":"17862:60:5","statements":[{"expression":{"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5390,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"17877:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17882:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"17877:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"506c617965722773205475726e2e","id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17894:16:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_422d15daa096778fda972fc5138b55e931f5643ba63509e805c78f7345dad80d","typeString":"literal_string \"Player's Turn.\""},"value":"Player's Turn."},"src":"17877:33:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5395,"nodeType":"ExpressionStatement","src":"17877:33:5"}]},"id":5397,"nodeType":"IfStatement","src":"17276:646:5","trueBody":{"id":5389,"nodeType":"Block","src":"17306:550:5","statements":[{"expression":{"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5333,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"17329:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17334:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"17329:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"506c6179657220427573742e","id":5336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17346:14:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e6f90717efa5444b6da9449dc4792cdb85c4305faf2b10a860ffe423ea11bebc","typeString":"literal_string \"Player Bust.\""},"value":"Player Bust."},"src":"17329:31:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5338,"nodeType":"ExpressionStatement","src":"17329:31:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5339,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"17380:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17385:12:5","memberName":"InsuranceBet","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"17380:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17401:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17380:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5373,"nodeType":"IfStatement","src":"17377:318:5","trueBody":{"id":5372,"nodeType":"Block","src":"17404:291:5","statements":[{"expression":{"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5343,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"17423:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17428:11:5","memberName":"DealerCard2","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"17423:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":5346,"name":"GetCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"17442:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_uint256_$","typeString":"function () returns (uint256)"}},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17442:9:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17423:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5349,"nodeType":"ExpressionStatement","src":"17423:28:5"},{"expression":{"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5350,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"17470:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17475:15:5","memberName":"DealerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"17470:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":5353,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"17494:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17499:11:5","memberName":"DealerCard2","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"17494:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17470:40:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5356,"nodeType":"ExpressionStatement","src":"17470:40:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5357,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"17550:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17555:15:5","memberName":"DealerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"17550:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3231","id":5359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17574:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"17550:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5371,"nodeType":"IfStatement","src":"17547:95:5","trueBody":{"expression":{"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5361,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"17599:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17604:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"17599:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5364,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"17620:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17625:12:5","memberName":"InsuranceBet","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"17620:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17640:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"17620:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17619:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17599:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5370,"nodeType":"ExpressionStatement","src":"17599:43:5"}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5374,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"17714:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5375,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17719:12:5","memberName":"SplitCounter","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"17714:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17735:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17714:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5382,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"17812:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17817:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"17812:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17837:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"17812:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5387,"nodeType":"ExpressionStatement","src":"17812:30:5"},"id":5388,"nodeType":"IfStatement","src":"17711:131:5","trueBody":{"id":5381,"nodeType":"Block","src":"17738:51:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5378,"name":"PlayDealerHand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"17757:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17757:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5380,"nodeType":"ExpressionStatement","src":"17757:16:5"}]}}]}}]},"documentation":{"id":5316,"nodeType":"StructuredDocumentation","src":"17085:42:5","text":" @dev CheckWinnerOnHit"},"id":5399,"implemented":true,"kind":"function","modifiers":[],"name":"CheckWinnerOnHit","nameLocation":"17142:16:5","nodeType":"FunctionDefinition","parameters":{"id":5317,"nodeType":"ParameterList","parameters":[],"src":"17158:2:5"},"returnParameters":{"id":5318,"nodeType":"ParameterList","parameters":[],"src":"17169:0:5"},"scope":6344,"src":"17133:796:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5858,"nodeType":"Block","src":"18025:4416:5","statements":[{"assignments":[5405],"declarations":[{"constant":false,"id":5405,"mutability":"mutable","name":"game","nameLocation":"18051:4:5","nodeType":"VariableDeclaration","scope":5858,"src":"18038:17:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"},"typeName":{"id":5404,"nodeType":"UserDefinedTypeName","pathNode":{"id":5403,"name":"Game","nameLocations":["18038:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":3939,"src":"18038:4:5"},"referencedDeclaration":3939,"src":"18038:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"}},"visibility":"internal"}],"id":5412,"initialValue":{"baseExpression":{"id":5406,"name":"_idsToGameMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"18058:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game storage ref)"}},"id":5411,"indexExpression":{"baseExpression":{"id":5407,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"18072:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5410,"indexExpression":{"expression":{"id":5408,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18099:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18103:6:5","memberName":"sender","nodeType":"MemberAccess","src":"18099:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18072:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18058:53:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage","typeString":"struct BlackJack.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18038:73:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5413,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"18135:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18140:15:5","memberName":"DealerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"18135:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3231","id":5415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18158:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"18135:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5510,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19178:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19183:15:5","memberName":"DealerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"19178:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3231","id":5512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19202:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"19178:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5855,"nodeType":"Block","src":"20305:2129:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5624,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"20354:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20359:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"20354:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3231","id":5626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20377:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"20354:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3231","id":5628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20384:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":5629,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"20389:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20394:15:5","memberName":"DealerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"20389:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20384:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5632,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20383:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3231","id":5633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20415:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":5634,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"20420:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20425:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"20420:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20415:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20414:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20383:58:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20354:87:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5675,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"20828:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5676,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20833:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"20828:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3231","id":5677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20851:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"20828:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3231","id":5679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20858:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":5680,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"20863:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20868:15:5","memberName":"DealerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"20863:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20858:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20857:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3231","id":5684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20888:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":5685,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"20893:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20898:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"20893:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20888:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5688,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20887:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20857:57:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20828:86:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5738,"nodeType":"Block","src":"21037:369:5","statements":[{"expression":{"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5704,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21056:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5706,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21061:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"21056:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"506c617965722057696e732e","id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21073:14:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_162685390732bd15507d46a818580b66c051c4a4c80ea0781153d38461056349","typeString":"literal_string \"Player Wins.\""},"value":"Player Wins."},"src":"21056:31:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5709,"nodeType":"ExpressionStatement","src":"21056:31:5"},{"expression":{"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5710,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21106:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21111:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"21106:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21131:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"21106:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5715,"nodeType":"ExpressionStatement","src":"21106:30:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5716,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21160:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5717,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21165:12:5","memberName":"SplitCounter","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"21160:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21181:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"21160:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5727,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21323:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21328:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"21323:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5730,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21344:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21349:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"21344:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21361:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"21344:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21343:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21323:40:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5736,"nodeType":"ExpressionStatement","src":"21323:40:5"},"id":5737,"nodeType":"IfStatement","src":"21157:206:5","trueBody":{"expression":{"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5720,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21205:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21210:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"21205:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":5723,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21225:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5724,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21230:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"21225:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21205:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5726,"nodeType":"ExpressionStatement","src":"21205:34:5"}}]},"id":5739,"nodeType":"IfStatement","src":"20825:581:5","trueBody":{"id":5703,"nodeType":"Block","src":"20916:115:5","statements":[{"expression":{"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5691,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"20935:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5693,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20940:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"20935:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4465616c65722057696e732e","id":5694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20952:14:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0099f0cf855f4eab5807fa4a0a918bcff332a66b818e8340b1a7e7f872862657","typeString":"literal_string \"Dealer Wins.\""},"value":"Dealer Wins."},"src":"20935:31:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5696,"nodeType":"ExpressionStatement","src":"20935:31:5"},{"expression":{"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5697,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"20985:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20990:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"20985:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21010:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"20985:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5702,"nodeType":"ExpressionStatement","src":"20985:30:5"}]}},"id":5740,"nodeType":"IfStatement","src":"20351:1055:5","trueBody":{"id":5674,"nodeType":"Block","src":"20443:376:5","statements":[{"expression":{"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5640,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"20474:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20479:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"20474:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5374616e644f666621","id":5643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20491:11:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_dc2f6d0557f77901d97392d50fd9bcf9eaa7f6ad691535f6b7d2109aeb8b8ce0","typeString":"literal_string \"StandOff!\""},"value":"StandOff!"},"src":"20474:28:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5645,"nodeType":"ExpressionStatement","src":"20474:28:5"},{"expression":{"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5646,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"20521:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20526:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"20521:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20546:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"20521:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5651,"nodeType":"ExpressionStatement","src":"20521:30:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5652,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"20575:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5653,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20580:12:5","memberName":"SplitCounter","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"20575:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20596:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20575:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5666,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"20746:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20751:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"20746:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":5669,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"20766:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20771:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"20766:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20746:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5672,"nodeType":"ExpressionStatement","src":"20746:34:5"},"id":5673,"nodeType":"IfStatement","src":"20572:208:5","trueBody":{"expression":{"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5656,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"20620:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20625:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"20620:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5659,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"20641:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5660,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20646:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"20641:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20658:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"20641:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5663,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20640:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20620:40:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5665,"nodeType":"ExpressionStatement","src":"20620:40:5"}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5741,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21425:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5742,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21430:12:5","memberName":"SplitCounter","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"21425:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21446:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"21425:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5854,"nodeType":"IfStatement","src":"21422:1001:5","trueBody":{"id":5853,"nodeType":"Block","src":"21449:974:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5745,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21471:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21476:16:5","memberName":"PlayerSplitTotal","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"21471:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3231","id":5747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21495:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"21471:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3231","id":5749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21502:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":5750,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21507:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5751,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21512:15:5","memberName":"DealerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"21507:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21502:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5753,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21501:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3231","id":5754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21533:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":5755,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21538:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5756,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21543:16:5","memberName":"PlayerSplitTotal","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"21538:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21533:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21532:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21501:59:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21471:89:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5790,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21871:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21876:16:5","memberName":"PlayerSplitTotal","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"21871:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3231","id":5792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21895:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"21871:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3231","id":5794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21902:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":5795,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21907:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21912:15:5","memberName":"DealerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"21907:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21902:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21901:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3231","id":5799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21932:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":5800,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21937:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21942:16:5","memberName":"PlayerSplitTotal","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"21937:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21932:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21931:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21901:58:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21871:88:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5850,"nodeType":"Block","src":"22137:271:5","statements":[{"expression":{"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5825,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"22160:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"22165:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"22160:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5831,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"22191:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22196:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"22191:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"20506c6179657220776f6e2073706c69742068616e642e","id":5833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22207:25:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7800ecc545656055dd459b5ea70d2d0ec79bc697c86eb523259a8e50e1652be1","typeString":"literal_string \" Player won split hand.\""},"value":" Player won split hand."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_7800ecc545656055dd459b5ea70d2d0ec79bc697c86eb523259a8e50e1652be1","typeString":"literal_string \" Player won split hand.\""}],"expression":{"id":5829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22177:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5828,"name":"string","nodeType":"ElementaryTypeName","src":"22177:6:5","typeDescriptions":{}}},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22184:6:5","memberName":"concat","nodeType":"MemberAccess","src":"22177:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22177:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"22160:73:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5836,"nodeType":"ExpressionStatement","src":"22160:73:5"},{"expression":{"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5837,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"22256:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"22261:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"22256:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22281:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"22256:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5842,"nodeType":"ExpressionStatement","src":"22256:30:5"},{"expression":{"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5843,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"22311:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"22316:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"22311:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":5846,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"22331:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5847,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22336:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"22331:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22311:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5849,"nodeType":"ExpressionStatement","src":"22311:34:5"}]},"id":5851,"nodeType":"IfStatement","src":"21868:540:5","trueBody":{"id":5824,"nodeType":"Block","src":"21961:170:5","statements":[{"expression":{"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5806,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21984:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5808,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21989:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"21984:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5812,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"22015:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22020:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"22015:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"20506c61796572206c6f73742073706c69742068616e642e","id":5814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22031:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_514ea601867e3f587ad35939476f254258c9acad4a417792829c4ad92621b30a","typeString":"literal_string \" Player lost split hand.\""},"value":" Player lost split hand."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_514ea601867e3f587ad35939476f254258c9acad4a417792829c4ad92621b30a","typeString":"literal_string \" Player lost split hand.\""}],"expression":{"id":5810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22001:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5809,"name":"string","nodeType":"ElementaryTypeName","src":"22001:6:5","typeDescriptions":{}}},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22008:6:5","memberName":"concat","nodeType":"MemberAccess","src":"22001:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22001:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"21984:74:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5817,"nodeType":"ExpressionStatement","src":"21984:74:5"},{"expression":{"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5818,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"22081:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5820,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"22086:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"22081:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22106:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"22081:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5823,"nodeType":"ExpressionStatement","src":"22081:30:5"}]}},"id":5852,"nodeType":"IfStatement","src":"21468:940:5","trueBody":{"id":5789,"nodeType":"Block","src":"21562:300:5","statements":[{"expression":{"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5761,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21609:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21614:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"21609:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5767,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21640:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21645:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"21640:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"205374616e644f6666206f6e2073706c69742068616e6421","id":5769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21656:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c78e2f0190d9b2a72f3ca17298f686a31c20707bc8e3a5b02a40c96e4fee0189","typeString":"literal_string \" StandOff on split hand!\""},"value":" StandOff on split hand!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_c78e2f0190d9b2a72f3ca17298f686a31c20707bc8e3a5b02a40c96e4fee0189","typeString":"literal_string \" StandOff on split hand!\""}],"expression":{"id":5765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21626:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5764,"name":"string","nodeType":"ElementaryTypeName","src":"21626:6:5","typeDescriptions":{}}},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21633:6:5","memberName":"concat","nodeType":"MemberAccess","src":"21626:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21626:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"21609:74:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5772,"nodeType":"ExpressionStatement","src":"21609:74:5"},{"expression":{"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5773,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21706:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21711:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"21706:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21731:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"21706:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5778,"nodeType":"ExpressionStatement","src":"21706:30:5"},{"expression":{"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5779,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21761:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21766:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"21761:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5782,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"21782:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21787:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"21782:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21799:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"21782:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5786,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21781:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21761:40:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5788,"nodeType":"ExpressionStatement","src":"21761:40:5"}]}}]}}]},"id":5856,"nodeType":"IfStatement","src":"19175:3259:5","trueBody":{"id":5623,"nodeType":"Block","src":"19206:1093:5","statements":[{"expression":{"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5514,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19223:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19228:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"19223:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4465616c65722057696e732e","id":5517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19240:14:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0099f0cf855f4eab5807fa4a0a918bcff332a66b818e8340b1a7e7f872862657","typeString":"literal_string \"Dealer Wins.\""},"value":"Dealer Wins."},"src":"19223:31:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5519,"nodeType":"ExpressionStatement","src":"19223:31:5"},{"expression":{"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5520,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19269:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19274:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"19269:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19294:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"19269:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5525,"nodeType":"ExpressionStatement","src":"19269:30:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5526,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19319:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5527,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19324:12:5","memberName":"InsuranceBet","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"19319:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19340:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19319:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5540,"nodeType":"IfStatement","src":"19316:87:5","trueBody":{"expression":{"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5530,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19360:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5532,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19365:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"19360:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5533,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19381:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19386:12:5","memberName":"InsuranceBet","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"19381:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19401:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19381:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5537,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19380:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19360:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5539,"nodeType":"ExpressionStatement","src":"19360:43:5"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5541,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19460:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19465:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"19460:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3231","id":5543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19484:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"19460:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5575,"nodeType":"IfStatement","src":"19457:376:5","trueBody":{"id":5574,"nodeType":"Block","src":"19488:345:5","statements":[{"expression":{"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5545,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19519:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19524:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"19519:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5374616e644f666621","id":5548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19536:11:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_dc2f6d0557f77901d97392d50fd9bcf9eaa7f6ad691535f6b7d2109aeb8b8ce0","typeString":"literal_string \"StandOff!\""},"value":"StandOff!"},"src":"19519:28:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5550,"nodeType":"ExpressionStatement","src":"19519:28:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5551,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19587:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19592:12:5","memberName":"SplitCounter","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"19587:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19608:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19587:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5565,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19758:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19763:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"19758:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"components":[{"expression":{"id":5568,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19779:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19784:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"19779:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5570,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19778:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19758:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5572,"nodeType":"ExpressionStatement","src":"19758:36:5"},"id":5573,"nodeType":"IfStatement","src":"19584:210:5","trueBody":{"expression":{"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5555,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19632:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19637:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"19632:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5558,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19653:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19658:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"19653:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19670:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19653:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19652:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19632:40:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5564,"nodeType":"ExpressionStatement","src":"19632:40:5"}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5576,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19852:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19857:12:5","memberName":"SplitCounter","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"19852:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19873:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19852:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5622,"nodeType":"IfStatement","src":"19849:437:5","trueBody":{"id":5621,"nodeType":"Block","src":"19876:410:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5580,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19898:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19903:16:5","memberName":"PlayerSplitTotal","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"19898:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3231","id":5582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19923:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"19898:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5619,"nodeType":"Block","src":"20154:117:5","statements":[{"expression":{"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5607,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"20177:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5609,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20182:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"20177:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5613,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"20208:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20213:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"20208:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"20506c61796572206c6f73742073706c69742068616e642e","id":5615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20224:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_514ea601867e3f587ad35939476f254258c9acad4a417792829c4ad92621b30a","typeString":"literal_string \" Player lost split hand.\""},"value":" Player lost split hand."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_514ea601867e3f587ad35939476f254258c9acad4a417792829c4ad92621b30a","typeString":"literal_string \" Player lost split hand.\""}],"expression":{"id":5611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20194:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5610,"name":"string","nodeType":"ElementaryTypeName","src":"20194:6:5","typeDescriptions":{}}},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20201:6:5","memberName":"concat","nodeType":"MemberAccess","src":"20194:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20194:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"20177:74:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5618,"nodeType":"ExpressionStatement","src":"20177:74:5"}]},"id":5620,"nodeType":"IfStatement","src":"19895:376:5","trueBody":{"id":5606,"nodeType":"Block","src":"19927:221:5","statements":[{"expression":{"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5584,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19950:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5586,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19955:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"19950:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5590,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19981:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5591,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19986:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"19981:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"205374616e644f6666206f6e2073706c69742068616e6421","id":5592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19997:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c78e2f0190d9b2a72f3ca17298f686a31c20707bc8e3a5b02a40c96e4fee0189","typeString":"literal_string \" StandOff on split hand!\""},"value":" StandOff on split hand!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_c78e2f0190d9b2a72f3ca17298f686a31c20707bc8e3a5b02a40c96e4fee0189","typeString":"literal_string \" StandOff on split hand!\""}],"expression":{"id":5588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19967:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5587,"name":"string","nodeType":"ElementaryTypeName","src":"19967:6:5","typeDescriptions":{}}},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19974:6:5","memberName":"concat","nodeType":"MemberAccess","src":"19967:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19967:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"19950:74:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5595,"nodeType":"ExpressionStatement","src":"19950:74:5"},{"expression":{"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5596,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"20047:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20052:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"20047:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5599,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"20068:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20073:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"20068:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20085:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"20068:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5603,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20067:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20047:40:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5605,"nodeType":"ExpressionStatement","src":"20047:40:5"}]}}]}}]}},"id":5857,"nodeType":"IfStatement","src":"18132:4302:5","trueBody":{"id":5509,"nodeType":"Block","src":"18162:1007:5","statements":[{"expression":{"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5417,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"18177:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5419,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18182:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"18177:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4465616c657220427573742e","id":5420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18194:14:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d906516776133d8443b22499ec952d2de95e6824de130bd142e8774f8366f592","typeString":"literal_string \"Dealer Bust.\""},"value":"Dealer Bust."},"src":"18177:31:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5422,"nodeType":"ExpressionStatement","src":"18177:31:5"},{"expression":{"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5423,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"18223:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18228:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"18223:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18248:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"18223:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5428,"nodeType":"ExpressionStatement","src":"18223:30:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5429,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"18273:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18278:12:5","memberName":"SplitCounter","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"18273:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18294:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18273:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5507,"nodeType":"Block","src":"18976:180:5","statements":[{"expression":{"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5491,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19010:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19015:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"19010:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4465616c657220427573742e20506c617965722057696e732e","id":5494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19027:27:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_28966c74caee3c056cc94fad2320c42e6dd97c1b636430be4de8d76c8c3d1d49","typeString":"literal_string \"Dealer Bust. Player Wins.\""},"value":"Dealer Bust. Player Wins."},"src":"19010:44:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5496,"nodeType":"ExpressionStatement","src":"19010:44:5"},{"expression":{"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5497,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19073:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19078:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"19073:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5500,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"19094:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19099:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"19094:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19111:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19094:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19093:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19073:40:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5506,"nodeType":"ExpressionStatement","src":"19073:40:5"}]},"id":5508,"nodeType":"IfStatement","src":"18270:886:5","trueBody":{"id":5490,"nodeType":"Block","src":"18297:673:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5433,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"18333:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18338:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"18333:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3231","id":5435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18357:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"18333:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5451,"nodeType":"IfStatement","src":"18330:218:5","trueBody":{"id":5450,"nodeType":"Block","src":"18361:187:5","statements":[{"expression":{"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5437,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"18384:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18389:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"18384:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4465616c657220427573742e20506c617965722057696e732e","id":5440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18401:27:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_28966c74caee3c056cc94fad2320c42e6dd97c1b636430be4de8d76c8c3d1d49","typeString":"literal_string \"Dealer Bust. Player Wins.\""},"value":"Dealer Bust. Player Wins."},"src":"18384:44:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5442,"nodeType":"ExpressionStatement","src":"18384:44:5"},{"expression":{"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5443,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"18451:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5445,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18456:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"18451:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":5446,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"18471:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5447,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18476:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"18471:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18451:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5449,"nodeType":"ExpressionStatement","src":"18451:34:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5452,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"18587:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5453,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18592:16:5","memberName":"PlayerSplitTotal","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"18587:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3231","id":5454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18612:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"18587:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5488,"nodeType":"Block","src":"18838:117:5","statements":[{"expression":{"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5476,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"18861:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18866:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"18861:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5482,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"18892:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18897:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"18892:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"20506c61796572206c6f73742073706c69742068616e642e","id":5484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18908:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_514ea601867e3f587ad35939476f254258c9acad4a417792829c4ad92621b30a","typeString":"literal_string \" Player lost split hand.\""},"value":" Player lost split hand."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_514ea601867e3f587ad35939476f254258c9acad4a417792829c4ad92621b30a","typeString":"literal_string \" Player lost split hand.\""}],"expression":{"id":5480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5479,"name":"string","nodeType":"ElementaryTypeName","src":"18878:6:5","typeDescriptions":{}}},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18885:6:5","memberName":"concat","nodeType":"MemberAccess","src":"18878:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"18861:74:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5487,"nodeType":"ExpressionStatement","src":"18861:74:5"}]},"id":5489,"nodeType":"IfStatement","src":"18584:371:5","trueBody":{"id":5475,"nodeType":"Block","src":"18616:216:5","statements":[{"expression":{"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5456,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"18639:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18644:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"18639:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5462,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"18670:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18675:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"18670:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"20506c6179657220776f6e2073706c69742068616e642e","id":5464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18686:25:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7800ecc545656055dd459b5ea70d2d0ec79bc697c86eb523259a8e50e1652be1","typeString":"literal_string \" Player won split hand.\""},"value":" Player won split hand."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_7800ecc545656055dd459b5ea70d2d0ec79bc697c86eb523259a8e50e1652be1","typeString":"literal_string \" Player won split hand.\""}],"expression":{"id":5460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18656:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5459,"name":"string","nodeType":"ElementaryTypeName","src":"18656:6:5","typeDescriptions":{}}},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18663:6:5","memberName":"concat","nodeType":"MemberAccess","src":"18656:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18656:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"18639:73:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5467,"nodeType":"ExpressionStatement","src":"18639:73:5"},{"expression":{"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5468,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"18735:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18740:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"18735:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":5471,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"18755:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game storage pointer"}},"id":5472,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18760:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"18755:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18735:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5474,"nodeType":"ExpressionStatement","src":"18735:34:5"}]}}]}}]}}]},"documentation":{"id":5400,"nodeType":"StructuredDocumentation","src":"17937:44:5","text":" @dev CheckWinnerOnStand"},"id":5859,"implemented":true,"kind":"function","modifiers":[],"name":"CheckWinnerOnStand","nameLocation":"17996:18:5","nodeType":"FunctionDefinition","parameters":{"id":5401,"nodeType":"ParameterList","parameters":[],"src":"18014:2:5"},"returnParameters":{"id":5402,"nodeType":"ParameterList","parameters":[],"src":"18025:0:5"},"scope":6344,"src":"17987:4454:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5969,"nodeType":"Block","src":"22589:780:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5866,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"22618:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5869,"indexExpression":{"expression":{"id":5867,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22645:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22649:6:5","memberName":"sender","nodeType":"MemberAccess","src":"22645:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22618:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22660:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22618:43:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d655f444e45","id":5872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22663:10:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa","typeString":"literal_string \"Game_DNE\""},"value":"Game_DNE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa","typeString":"literal_string \"Game_DNE\""}],"id":5865,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22610:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22610:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5874,"nodeType":"ExpressionStatement","src":"22610:64:5"},{"assignments":[5877],"declarations":[{"constant":false,"id":5877,"mutability":"mutable","name":"game","nameLocation":"22699:4:5","nodeType":"VariableDeclaration","scope":5969,"src":"22687:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game"},"typeName":{"id":5876,"nodeType":"UserDefinedTypeName","pathNode":{"id":5875,"name":"Game","nameLocations":["22687:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":3939,"src":"22687:4:5"},"referencedDeclaration":3939,"src":"22687:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"}},"visibility":"internal"}],"id":5884,"initialValue":{"baseExpression":{"id":5878,"name":"_idsToGameMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"22706:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game storage ref)"}},"id":5883,"indexExpression":{"baseExpression":{"id":5879,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"22720:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5882,"indexExpression":{"expression":{"id":5880,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22747:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22751:6:5","memberName":"sender","nodeType":"MemberAccess","src":"22747:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22720:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22706:53:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage","typeString":"struct BlackJack.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"22687:72:5"},{"expression":{"arguments":[{"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"22778:23:5","subExpression":{"expression":{"id":5886,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"22779:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":5887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22784:17:5","memberName":"IsRoundInProgress","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"22779:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49734e6577526f756e645f4f6e6c79","id":5889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22803:17:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_48dc19631629da1b2346a32d98cbc4846a44ed7618f77c5c6a081ec8e4c25f61","typeString":"literal_string \"IsNewRound_Only\""},"value":"IsNewRound_Only"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48dc19631629da1b2346a32d98cbc4846a44ed7618f77c5c6a081ec8e4c25f61","typeString":"literal_string \"IsNewRound_Only\""}],"id":5885,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22770:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22770:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5891,"nodeType":"ExpressionStatement","src":"22770:51:5"},{"assignments":[5893],"declarations":[{"constant":false,"id":5893,"mutability":"mutable","name":"tempBalance","nameLocation":"22850:11:5","nodeType":"VariableDeclaration","scope":5969,"src":"22842:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5892,"name":"uint256","nodeType":"ElementaryTypeName","src":"22842:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5896,"initialValue":{"expression":{"id":5894,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"22864:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":5895,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22869:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"22864:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22842:38:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5899,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"22902:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_BlackJack_$6344","typeString":"contract BlackJack"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BlackJack_$6344","typeString":"contract BlackJack"}],"id":5898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22894:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5897,"name":"address","nodeType":"ElementaryTypeName","src":"22894:7:5","typeDescriptions":{}}},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22894:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22908:7:5","memberName":"balance","nodeType":"MemberAccess","src":"22894:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22919:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22894:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5906,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"22932:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_BlackJack_$6344","typeString":"contract BlackJack"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BlackJack_$6344","typeString":"contract BlackJack"}],"id":5905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22924:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5904,"name":"address","nodeType":"ElementaryTypeName","src":"22924:7:5","typeDescriptions":{}}},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22924:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22938:7:5","memberName":"balance","nodeType":"MemberAccess","src":"22924:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5909,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"22948:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":5910,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22953:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"22948:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22924:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22894:70:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5922,"nodeType":"IfStatement","src":"22891:137:5","trueBody":{"id":5921,"nodeType":"Block","src":"22966:62:5","statements":[{"expression":{"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5913,"name":"tempBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"22981:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":5916,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"23003:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_BlackJack_$6344","typeString":"contract BlackJack"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BlackJack_$6344","typeString":"contract BlackJack"}],"id":5915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22995:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5914,"name":"address","nodeType":"ElementaryTypeName","src":"22995:7:5","typeDescriptions":{}}},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22995:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23009:7:5","memberName":"balance","nodeType":"MemberAccess","src":"22995:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22981:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5920,"nodeType":"ExpressionStatement","src":"22981:35:5"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5926,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"23055:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_BlackJack_$6344","typeString":"contract BlackJack"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BlackJack_$6344","typeString":"contract BlackJack"}],"id":5925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23047:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5924,"name":"address","nodeType":"ElementaryTypeName","src":"23047:7:5","typeDescriptions":{}}},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23047:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23061:7:5","memberName":"balance","nodeType":"MemberAccess","src":"23047:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5929,"name":"tempBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"23072:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23047:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5923,"name":"assert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-3,"src":"23040:6:5","typeDescriptions":{"typeIdentifier":"t_function_assert_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23040:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5932,"nodeType":"ExpressionStatement","src":"23040:44:5"},{"expression":{"arguments":[{"expression":{"id":5934,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23125:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23129:6:5","memberName":"sender","nodeType":"MemberAccess","src":"23125:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5933,"name":"BeforeValueTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"23105:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23105:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5937,"nodeType":"ExpressionStatement","src":"23105:31:5"},{"expression":{"arguments":[{"id":5944,"name":"tempBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"23178:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":5940,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23157:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23161:6:5","memberName":"sender","nodeType":"MemberAccess","src":"23157:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23149:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":5938,"name":"address","nodeType":"ElementaryTypeName","src":"23149:8:5","stateMutability":"payable","typeDescriptions":{}}},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23149:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23169:8:5","memberName":"transfer","nodeType":"MemberAccess","src":"23149:28:5","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23149:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5946,"nodeType":"ExpressionStatement","src":"23149:41:5"},{"expression":{"arguments":[{"expression":{"id":5948,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23222:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23226:6:5","memberName":"sender","nodeType":"MemberAccess","src":"23222:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5947,"name":"AfterValueTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"23203:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23203:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5951,"nodeType":"ExpressionStatement","src":"23203:30:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5953,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"23253:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5956,"indexExpression":{"expression":{"id":5954,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23280:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23284:6:5","memberName":"sender","nodeType":"MemberAccess","src":"23280:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23253:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23295:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23253:43:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5952,"name":"assert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-3,"src":"23246:6:5","typeDescriptions":{"typeIdentifier":"t_function_assert_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23246:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5960,"nodeType":"ExpressionStatement","src":"23246:51:5"},{"eventCall":{"arguments":[{"expression":{"id":5962,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"23328:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":5963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23333:2:5","memberName":"Id","nodeType":"MemberAccess","referencedDeclaration":3892,"src":"23328:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5964,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23337:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23341:6:5","memberName":"sender","nodeType":"MemberAccess","src":"23337:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5966,"name":"tempBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"23349:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5961,"name":"CashOutEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"23315:12:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23315:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5968,"nodeType":"EmitStatement","src":"23310:51:5"}]},"documentation":{"id":5860,"nodeType":"StructuredDocumentation","src":"22449:94:5","text":" @dev CashOut - Can only be called by player before or after a game round."},"functionSelector":"a1e564b1","id":5970,"implemented":true,"kind":"function","modifiers":[{"id":5863,"kind":"modifierInvocation","modifierName":{"id":5862,"name":"IsValidAddr","nameLocations":["22568:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":4011,"src":"22568:11:5"},"nodeType":"ModifierInvocation","src":"22568:11:5"}],"name":"CashOut","nameLocation":"22558:7:5","nodeType":"FunctionDefinition","parameters":{"id":5861,"nodeType":"ParameterList","parameters":[],"src":"22565:2:5"},"returnParameters":{"id":5864,"nodeType":"ParameterList","parameters":[],"src":"22589:0:5"},"scope":6344,"src":"22549:820:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6013,"nodeType":"Block","src":"23574:467:5","statements":[{"assignments":[5977],"declarations":[{"constant":false,"id":5977,"mutability":"mutable","name":"gameId","nameLocation":"23654:6:5","nodeType":"VariableDeclaration","scope":6013,"src":"23646:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5976,"name":"uint256","nodeType":"ElementaryTypeName","src":"23646:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5984,"initialValue":{"expression":{"baseExpression":{"id":5978,"name":"_idsToGameMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"23663:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game storage ref)"}},"id":5982,"indexExpression":{"baseExpression":{"id":5979,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"23677:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5981,"indexExpression":{"id":5980,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"23704:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23677:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23663:56:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage","typeString":"struct BlackJack.Game storage ref"}},"id":5983,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23720:2:5","memberName":"Id","nodeType":"MemberAccess","referencedDeclaration":3892,"src":"23663:59:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23646:76:5"},{"assignments":[5986],"declarations":[{"constant":false,"id":5986,"mutability":"mutable","name":"tempBalance","nameLocation":"23741:11:5","nodeType":"VariableDeclaration","scope":6013,"src":"23733:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5985,"name":"uint256","nodeType":"ElementaryTypeName","src":"23733:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5993,"initialValue":{"expression":{"baseExpression":{"id":5987,"name":"_idsToGameMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"23755:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game storage ref)"}},"id":5991,"indexExpression":{"baseExpression":{"id":5988,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"23769:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5990,"indexExpression":{"id":5989,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"23796:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23769:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23755:56:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage","typeString":"struct BlackJack.Game storage ref"}},"id":5992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23812:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"23755:68:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23733:90:5"},{"expression":{"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5994,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"23836:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5996,"indexExpression":{"id":5995,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"23863:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23836:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23880:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23836:45:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5999,"nodeType":"ExpressionStatement","src":"23836:45:5"},{"expression":{"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"23892:63:5","subExpression":{"baseExpression":{"id":6000,"name":"_idsToGameMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"23899:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game storage ref)"}},"id":6004,"indexExpression":{"baseExpression":{"id":6001,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"23913:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6003,"indexExpression":{"id":6002,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"23940:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23913:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23899:56:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage","typeString":"struct BlackJack.Game storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6006,"nodeType":"ExpressionStatement","src":"23892:63:5"},{"eventCall":{"arguments":[{"id":6008,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"23998:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6009,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"24006:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6010,"name":"tempBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"24021:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6007,"name":"BeforeValueTransferEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"23973:24:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23973:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6012,"nodeType":"EmitStatement","src":"23968:65:5"}]},"documentation":{"id":5971,"nodeType":"StructuredDocumentation","src":"23377:131:5","text":" @dev BeforeValueTransfer - hook function.\n @param playerAddress Address of player to transfer value to."},"id":6014,"implemented":true,"kind":"function","modifiers":[],"name":"BeforeValueTransfer","nameLocation":"23523:19:5","nodeType":"FunctionDefinition","parameters":{"id":5974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5973,"mutability":"mutable","name":"playerAddress","nameLocation":"23551:13:5","nodeType":"VariableDeclaration","scope":6014,"src":"23543:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5972,"name":"address","nodeType":"ElementaryTypeName","src":"23543:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23542:23:5"},"returnParameters":{"id":5975,"nodeType":"ParameterList","parameters":[],"src":"23574:0:5"},"scope":6344,"src":"23514:527:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6053,"nodeType":"Block","src":"24244:426:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6020,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"24332:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6022,"indexExpression":{"id":6021,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"24359:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24332:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24377:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24332:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6025,"name":"_idsToGameMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"24382:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game storage ref)"}},"id":6029,"indexExpression":{"baseExpression":{"id":6026,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"24396:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6028,"indexExpression":{"id":6027,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"24423:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24396:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24382:56:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage","typeString":"struct BlackJack.Game storage ref"}},"id":6030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24439:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"24382:68:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24454:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24382:73:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24332:123:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6048,"nodeType":"IfStatement","src":"24329:278:5","trueBody":{"id":6047,"nodeType":"Block","src":"24457:150:5","statements":[{"expression":{"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6034,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"24472:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6036,"indexExpression":{"id":6035,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"24499:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24472:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":6037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24516:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24472:45:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6039,"nodeType":"ExpressionStatement","src":"24472:45:5"},{"expression":{"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"24532:63:5","subExpression":{"baseExpression":{"id":6040,"name":"_idsToGameMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"24539:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game storage ref)"}},"id":6044,"indexExpression":{"baseExpression":{"id":6041,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"24553:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6043,"indexExpression":{"id":6042,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"24580:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24553:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24539:56:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage","typeString":"struct BlackJack.Game storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6046,"nodeType":"ExpressionStatement","src":"24532:63:5"}]}},{"eventCall":{"arguments":[{"id":6050,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"24648:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6049,"name":"AfterValueTransferEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"24624:23:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24624:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6052,"nodeType":"EmitStatement","src":"24619:43:5"}]},"documentation":{"id":6015,"nodeType":"StructuredDocumentation","src":"24049:130:5","text":" @dev AfterValueTransfer - hook function.\n @param playerAddress Address of player to transfer value to."},"id":6054,"implemented":true,"kind":"function","modifiers":[],"name":"AfterValueTransfer","nameLocation":"24194:18:5","nodeType":"FunctionDefinition","parameters":{"id":6018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6017,"mutability":"mutable","name":"playerAddress","nameLocation":"24221:13:5","nodeType":"VariableDeclaration","scope":6054,"src":"24213:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6016,"name":"address","nodeType":"ElementaryTypeName","src":"24213:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24212:23:5"},"returnParameters":{"id":6019,"nodeType":"ParameterList","parameters":[],"src":"24244:0:5"},"scope":6344,"src":"24185:485:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6073,"nodeType":"Block","src":"24860:146:5","statements":[{"expression":{"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6060,"name":"cardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"24871:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":6061,"name":"GenerateRandomNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"24883:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_uint256_$","typeString":"function () returns (uint256)"}},"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24883:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24871:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6064,"nodeType":"ExpressionStatement","src":"24871:34:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6065,"name":"cardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"24955:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3130","id":6066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24967:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"24955:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6072,"nodeType":"IfStatement","src":"24952:46:5","trueBody":{"expression":{"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6068,"name":"cardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"24984:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3130","id":6069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24996:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"24984:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6071,"nodeType":"ExpressionStatement","src":"24984:14:5"}}]},"documentation":{"id":6055,"nodeType":"StructuredDocumentation","src":"24678:121:5","text":" @dev GetCard - Get a card from the deck. 11 is Joker, 12 is Queen, 13 is King, each worth 10 points."},"id":6074,"implemented":true,"kind":"function","modifiers":[],"name":"GetCard","nameLocation":"24814:7:5","nodeType":"FunctionDefinition","parameters":{"id":6056,"nodeType":"ParameterList","parameters":[],"src":"24821:2:5"},"returnParameters":{"id":6059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6058,"mutability":"mutable","name":"cardValue","nameLocation":"24849:9:5","nodeType":"VariableDeclaration","scope":6074,"src":"24841:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6057,"name":"uint256","nodeType":"ElementaryTypeName","src":"24841:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24840:19:5"},"scope":6344,"src":"24805:201:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6131,"nodeType":"Block","src":"25238:411:5","statements":[{"expression":{"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6080,"name":"_rngCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"25249:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3231","id":6081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25264:2:5","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"25249:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6083,"nodeType":"ExpressionStatement","src":"25249:17:5"},{"assignments":[6085],"declarations":[{"constant":false,"id":6085,"mutability":"mutable","name":"seed","nameLocation":"25285:4:5","nodeType":"VariableDeclaration","scope":6131,"src":"25277:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6084,"name":"uint256","nodeType":"ElementaryTypeName","src":"25277:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6096,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6086,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"25293:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25299:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"25293:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":6088,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"25311:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25317:10:5","memberName":"prevrandao","nodeType":"MemberAccess","src":"25311:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25293:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6091,"name":"_rngCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"25330:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25293:48:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25292:50:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"313030","id":6094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25345:3:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"25292:56:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25277:71:5"},{"expression":{"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6097,"name":"randomNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"25359:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6104,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"25420:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25426:6:5","memberName":"number","nodeType":"MemberAccess","src":"25420:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25435:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25420:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6103,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"25410:9:5","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25410:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6109,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"25439:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6101,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"25393:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25397:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"25393:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25393:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6100,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"25383:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25383:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25375:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6098,"name":"uint256","nodeType":"ElementaryTypeName","src":"25375:7:5","typeDescriptions":{}}},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25375:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3133","id":6113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25449:2:5","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"13"},"src":"25375:76:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25454:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25375:80:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6117,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25374:82:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25359:97:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6119,"nodeType":"ExpressionStatement","src":"25359:97:5"},{"expression":{"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"25469:13:5","subExpression":{"id":6120,"name":"_rngCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"25469:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6122,"nodeType":"ExpressionStatement","src":"25469:13:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6123,"name":"_rngCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"25575:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"343230303030303030","id":6124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25589:9:5","typeDescriptions":{"typeIdentifier":"t_rational_420000000_by_1","typeString":"int_const 420000000"},"value":"420000000"},"src":"25575:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6130,"nodeType":"IfStatement","src":"25572:67:5","trueBody":{"expression":{"id":6128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6126,"name":"_rngCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"25613:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6127,"name":"randomNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"25627:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25613:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6129,"nodeType":"ExpressionStatement","src":"25613:26:5"}}]},"documentation":{"id":6075,"nodeType":"StructuredDocumentation","src":"25014:147:5","text":" @dev GenerateRandomNumber - Generates a random number between 1 and 13 based on the previous block's timestamp and difficulty."},"id":6132,"implemented":true,"kind":"function","modifiers":[],"name":"GenerateRandomNumber","nameLocation":"25176:20:5","nodeType":"FunctionDefinition","parameters":{"id":6076,"nodeType":"ParameterList","parameters":[],"src":"25196:2:5"},"returnParameters":{"id":6079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6078,"mutability":"mutable","name":"randomNumber","nameLocation":"25224:12:5","nodeType":"VariableDeclaration","scope":6132,"src":"25216:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6077,"name":"uint256","nodeType":"ElementaryTypeName","src":"25216:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25215:22:5"},"scope":6344,"src":"25167:482:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6148,"nodeType":"Block","src":"25807:79:5","statements":[{"expression":{"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6139,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"25818:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6140,"name":"_idsToGameMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"25825:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game storage ref)"}},"id":6145,"indexExpression":{"baseExpression":{"id":6141,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"25839:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6144,"indexExpression":{"expression":{"id":6142,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"25866:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25870:6:5","memberName":"sender","nodeType":"MemberAccess","src":"25866:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25839:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25825:53:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage","typeString":"struct BlackJack.Game storage ref"}},"src":"25818:60:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":6147,"nodeType":"ExpressionStatement","src":"25818:60:5"}]},"documentation":{"id":6133,"nodeType":"StructuredDocumentation","src":"25657:84:5","text":" @dev GetGame - helper function to get game info for msg.sender."},"functionSelector":"9ad01e3e","id":6149,"implemented":true,"kind":"function","modifiers":[],"name":"GetGame","nameLocation":"25756:7:5","nodeType":"FunctionDefinition","parameters":{"id":6134,"nodeType":"ParameterList","parameters":[],"src":"25763:2:5"},"returnParameters":{"id":6138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6137,"mutability":"mutable","name":"game","nameLocation":"25801:4:5","nodeType":"VariableDeclaration","scope":6149,"src":"25789:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game"},"typeName":{"id":6136,"nodeType":"UserDefinedTypeName","pathNode":{"id":6135,"name":"Game","nameLocations":["25789:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":3939,"src":"25789:4:5"},"referencedDeclaration":3939,"src":"25789:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"}},"visibility":"internal"}],"src":"25788:18:5"},"scope":6344,"src":"25747:139:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6342,"nodeType":"Block","src":"26437:1131:5","statements":[{"assignments":[6179],"declarations":[{"constant":false,"id":6179,"mutability":"mutable","name":"game","nameLocation":"26462:4:5","nodeType":"VariableDeclaration","scope":6342,"src":"26450:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game"},"typeName":{"id":6178,"nodeType":"UserDefinedTypeName","pathNode":{"id":6177,"name":"Game","nameLocations":["26450:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":3939,"src":"26450:4:5"},"referencedDeclaration":3939,"src":"26450:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage_ptr","typeString":"struct BlackJack.Game"}},"visibility":"internal"}],"id":6186,"initialValue":{"baseExpression":{"id":6180,"name":"_idsToGameMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"26469:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3939_storage_$","typeString":"mapping(uint256 => struct BlackJack.Game storage ref)"}},"id":6185,"indexExpression":{"baseExpression":{"id":6181,"name":"_currentPlayersToGameIdMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"26483:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6184,"indexExpression":{"expression":{"id":6182,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"26510:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26514:6:5","memberName":"sender","nodeType":"MemberAccess","src":"26510:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26483:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26469:53:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_storage","typeString":"struct BlackJack.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"26450:72:5"},{"expression":{"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6187,"name":"DealerMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6153,"src":"26543:13:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"202d2d3e20","id":6191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26573:7:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395","typeString":"literal_string \" --> \""},"value":" --> "},{"expression":{"id":6192,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"26582:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":6193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26587:9:5","memberName":"DealerMsg","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"26582:14:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395","typeString":"literal_string \" --> \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26559:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6188,"name":"string","nodeType":"ElementaryTypeName","src":"26559:6:5","typeDescriptions":{}}},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26566:6:5","memberName":"concat","nodeType":"MemberAccess","src":"26559:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26559:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"26543:54:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6196,"nodeType":"ExpressionStatement","src":"26543:54:5"},{"expression":{"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6197,"name":"PlayerCard1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"26608:11:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"202d2d3e20","id":6201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26636:7:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395","typeString":"literal_string \" --> \""},"value":" --> "},{"arguments":[{"expression":{"id":6204,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"26662:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":6205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26667:11:5","memberName":"PlayerCard1","nodeType":"MemberAccess","referencedDeclaration":3908,"src":"26662:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6202,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"26645:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$371_$","typeString":"type(library Strings)"}},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26653:8:5","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":119,"src":"26645:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26645:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395","typeString":"literal_string \" --> \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26622:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6198,"name":"string","nodeType":"ElementaryTypeName","src":"26622:6:5","typeDescriptions":{}}},"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26629:6:5","memberName":"concat","nodeType":"MemberAccess","src":"26622:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26622:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"26608:72:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6209,"nodeType":"ExpressionStatement","src":"26608:72:5"},{"expression":{"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6210,"name":"PlayerCard2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6157,"src":"26691:11:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"202d2d3e20","id":6214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26719:7:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395","typeString":"literal_string \" --> \""},"value":" --> "},{"arguments":[{"expression":{"id":6217,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"26745:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":6218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26750:11:5","memberName":"PlayerCard2","nodeType":"MemberAccess","referencedDeclaration":3910,"src":"26745:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6215,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"26728:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$371_$","typeString":"type(library Strings)"}},"id":6216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26736:8:5","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":119,"src":"26728:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26728:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395","typeString":"literal_string \" --> \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26705:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6211,"name":"string","nodeType":"ElementaryTypeName","src":"26705:6:5","typeDescriptions":{}}},"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26712:6:5","memberName":"concat","nodeType":"MemberAccess","src":"26705:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26705:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"26691:72:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6222,"nodeType":"ExpressionStatement","src":"26691:72:5"},{"expression":{"id":6234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6223,"name":"PlayerNewCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"26774:13:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"202d2d3e20","id":6227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26804:7:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395","typeString":"literal_string \" --> \""},"value":" --> "},{"arguments":[{"expression":{"id":6230,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"26830:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":6231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26835:13:5","memberName":"PlayerNewCard","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"26830:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6228,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"26813:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$371_$","typeString":"type(library Strings)"}},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26821:8:5","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":119,"src":"26813:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26813:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395","typeString":"literal_string \" --> \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26790:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6224,"name":"string","nodeType":"ElementaryTypeName","src":"26790:6:5","typeDescriptions":{}}},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26797:6:5","memberName":"concat","nodeType":"MemberAccess","src":"26790:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26790:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"26774:76:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6235,"nodeType":"ExpressionStatement","src":"26774:76:5"},{"expression":{"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6236,"name":"PlayerCardTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6161,"src":"26861:15:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"202d2d2d2d2d2d3e20","id":6240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26893:11:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0257a43edd2a7a85580801ec2f283037586509160ac0481da651693f3dcbda20","typeString":"literal_string \" ------> \""},"value":" ------> "},{"arguments":[{"expression":{"id":6243,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"26923:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":6244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26928:15:5","memberName":"PlayerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"26923:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6241,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"26906:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$371_$","typeString":"type(library Strings)"}},"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26914:8:5","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":119,"src":"26906:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26906:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0257a43edd2a7a85580801ec2f283037586509160ac0481da651693f3dcbda20","typeString":"literal_string \" ------> \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26879:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6237,"name":"string","nodeType":"ElementaryTypeName","src":"26879:6:5","typeDescriptions":{}}},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26886:6:5","memberName":"concat","nodeType":"MemberAccess","src":"26879:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"26861:84:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6248,"nodeType":"ExpressionStatement","src":"26861:84:5"},{"expression":{"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6249,"name":"PlayerSplitTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"26956:16:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"202d2d2d2d2d2d3e20","id":6253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26989:11:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0257a43edd2a7a85580801ec2f283037586509160ac0481da651693f3dcbda20","typeString":"literal_string \" ------> \""},"value":" ------> "},{"arguments":[{"expression":{"id":6256,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"27019:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":6257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27024:16:5","memberName":"PlayerSplitTotal","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"27019:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6254,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"27002:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$371_$","typeString":"type(library Strings)"}},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27010:8:5","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":119,"src":"27002:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27002:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0257a43edd2a7a85580801ec2f283037586509160ac0481da651693f3dcbda20","typeString":"literal_string \" ------> \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26975:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6250,"name":"string","nodeType":"ElementaryTypeName","src":"26975:6:5","typeDescriptions":{}}},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26982:6:5","memberName":"concat","nodeType":"MemberAccess","src":"26975:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26975:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"26956:86:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6261,"nodeType":"ExpressionStatement","src":"26956:86:5"},{"expression":{"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6262,"name":"DealerCard1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"27053:11:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"202d2d3e20","id":6266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27081:7:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395","typeString":"literal_string \" --> \""},"value":" --> "},{"arguments":[{"expression":{"id":6269,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"27107:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":6270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27112:11:5","memberName":"DealerCard1","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"27107:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6267,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"27090:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$371_$","typeString":"type(library Strings)"}},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27098:8:5","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":119,"src":"27090:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27090:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395","typeString":"literal_string \" --> \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27067:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6263,"name":"string","nodeType":"ElementaryTypeName","src":"27067:6:5","typeDescriptions":{}}},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27074:6:5","memberName":"concat","nodeType":"MemberAccess","src":"27067:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27067:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"27053:72:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6274,"nodeType":"ExpressionStatement","src":"27053:72:5"},{"expression":{"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6275,"name":"DealerCard2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"27136:11:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"202d2d3e20","id":6279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27164:7:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395","typeString":"literal_string \" --> \""},"value":" --> "},{"arguments":[{"expression":{"id":6282,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"27190:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":6283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27195:11:5","memberName":"DealerCard2","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"27190:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6280,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"27173:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$371_$","typeString":"type(library Strings)"}},"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27181:8:5","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":119,"src":"27173:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27173:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395","typeString":"literal_string \" --> \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27150:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6276,"name":"string","nodeType":"ElementaryTypeName","src":"27150:6:5","typeDescriptions":{}}},"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27157:6:5","memberName":"concat","nodeType":"MemberAccess","src":"27150:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27150:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"27136:72:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6287,"nodeType":"ExpressionStatement","src":"27136:72:5"},{"expression":{"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6288,"name":"DealerNewCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6169,"src":"27219:13:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"202d2d3e20","id":6292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27249:7:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395","typeString":"literal_string \" --> \""},"value":" --> "},{"arguments":[{"expression":{"id":6295,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"27275:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":6296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27280:13:5","memberName":"DealerNewCard","nodeType":"MemberAccess","referencedDeclaration":3922,"src":"27275:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6293,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"27258:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$371_$","typeString":"type(library Strings)"}},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27266:8:5","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":119,"src":"27258:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27258:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395","typeString":"literal_string \" --> \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27235:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6289,"name":"string","nodeType":"ElementaryTypeName","src":"27235:6:5","typeDescriptions":{}}},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27242:6:5","memberName":"concat","nodeType":"MemberAccess","src":"27235:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27235:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"27219:76:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6300,"nodeType":"ExpressionStatement","src":"27219:76:5"},{"expression":{"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6301,"name":"DealerCardTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"27306:15:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"202d2d2d2d2d2d3e20","id":6305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27338:11:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0257a43edd2a7a85580801ec2f283037586509160ac0481da651693f3dcbda20","typeString":"literal_string \" ------> \""},"value":" ------> "},{"arguments":[{"expression":{"id":6308,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"27368:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":6309,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27373:15:5","memberName":"DealerCardTotal","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"27368:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6306,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"27351:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$371_$","typeString":"type(library Strings)"}},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27359:8:5","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":119,"src":"27351:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27351:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0257a43edd2a7a85580801ec2f283037586509160ac0481da651693f3dcbda20","typeString":"literal_string \" ------> \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27324:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6302,"name":"string","nodeType":"ElementaryTypeName","src":"27324:6:5","typeDescriptions":{}}},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27331:6:5","memberName":"concat","nodeType":"MemberAccess","src":"27324:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27324:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"27306:84:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6313,"nodeType":"ExpressionStatement","src":"27306:84:5"},{"expression":{"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6314,"name":"PlayerBet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"27401:9:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"202d2d3e20","id":6318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27427:7:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395","typeString":"literal_string \" --> \""},"value":" --> "},{"arguments":[{"expression":{"id":6321,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"27453:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":6322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27458:9:5","memberName":"PlayerBet","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"27453:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6319,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"27436:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$371_$","typeString":"type(library Strings)"}},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27444:8:5","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":119,"src":"27436:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27436:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"20776569","id":6324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27470:6:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6884c8765ed9c3ce28a01297f38e5acbb4b3ee59bf507abdb41f31b919ff7019","typeString":"literal_string \" wei\""},"value":" wei"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395","typeString":"literal_string \" --> \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6884c8765ed9c3ce28a01297f38e5acbb4b3ee59bf507abdb41f31b919ff7019","typeString":"literal_string \" wei\""}],"expression":{"id":6316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27413:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6315,"name":"string","nodeType":"ElementaryTypeName","src":"27413:6:5","typeDescriptions":{}}},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27420:6:5","memberName":"concat","nodeType":"MemberAccess","src":"27413:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27413:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"27401:76:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6327,"nodeType":"ExpressionStatement","src":"27401:76:5"},{"expression":{"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6328,"name":"Pot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"27488:3:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"202d2d3e20","id":6332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27508:7:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395","typeString":"literal_string \" --> \""},"value":" --> "},{"arguments":[{"expression":{"id":6335,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"27534:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3939_memory_ptr","typeString":"struct BlackJack.Game memory"}},"id":6336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27539:11:5","memberName":"SafeBalance","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"27534:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6333,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"27517:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$371_$","typeString":"type(library Strings)"}},"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27525:8:5","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":119,"src":"27517:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27517:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"20776569","id":6338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27553:6:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6884c8765ed9c3ce28a01297f38e5acbb4b3ee59bf507abdb41f31b919ff7019","typeString":"literal_string \" wei\""},"value":" wei"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395","typeString":"literal_string \" --> \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6884c8765ed9c3ce28a01297f38e5acbb4b3ee59bf507abdb41f31b919ff7019","typeString":"literal_string \" wei\""}],"expression":{"id":6330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27494:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6329,"name":"string","nodeType":"ElementaryTypeName","src":"27494:6:5","typeDescriptions":{}}},"id":6331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27501:6:5","memberName":"concat","nodeType":"MemberAccess","src":"27494:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":6339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27494:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"27488:72:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6341,"nodeType":"ExpressionStatement","src":"27488:72:5"}]},"documentation":{"id":6150,"nodeType":"StructuredDocumentation","src":"25898:90:5","text":" @dev ShowTable - helper function to display game info for msg.sender."},"functionSelector":"7ce2974d","id":6343,"implemented":true,"kind":"function","modifiers":[],"name":"ShowTable","nameLocation":"26003:9:5","nodeType":"FunctionDefinition","parameters":{"id":6151,"nodeType":"ParameterList","parameters":[],"src":"26012:2:5"},"returnParameters":{"id":6176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6153,"mutability":"mutable","name":"DealerMessage","nameLocation":"26052:13:5","nodeType":"VariableDeclaration","scope":6343,"src":"26038:27:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6152,"name":"string","nodeType":"ElementaryTypeName","src":"26038:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6155,"mutability":"mutable","name":"PlayerCard1","nameLocation":"26081:11:5","nodeType":"VariableDeclaration","scope":6343,"src":"26067:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6154,"name":"string","nodeType":"ElementaryTypeName","src":"26067:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6157,"mutability":"mutable","name":"PlayerCard2","nameLocation":"26130:11:5","nodeType":"VariableDeclaration","scope":6343,"src":"26116:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6156,"name":"string","nodeType":"ElementaryTypeName","src":"26116:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6159,"mutability":"mutable","name":"PlayerNewCard","nameLocation":"26157:13:5","nodeType":"VariableDeclaration","scope":6343,"src":"26143:27:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6158,"name":"string","nodeType":"ElementaryTypeName","src":"26143:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6161,"mutability":"mutable","name":"PlayerCardTotal","nameLocation":"26186:15:5","nodeType":"VariableDeclaration","scope":6343,"src":"26172:29:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6160,"name":"string","nodeType":"ElementaryTypeName","src":"26172:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6163,"mutability":"mutable","name":"PlayerSplitTotal","nameLocation":"26217:16:5","nodeType":"VariableDeclaration","scope":6343,"src":"26203:30:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6162,"name":"string","nodeType":"ElementaryTypeName","src":"26203:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6165,"mutability":"mutable","name":"DealerCard1","nameLocation":"26271:11:5","nodeType":"VariableDeclaration","scope":6343,"src":"26257:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6164,"name":"string","nodeType":"ElementaryTypeName","src":"26257:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6167,"mutability":"mutable","name":"DealerCard2","nameLocation":"26298:11:5","nodeType":"VariableDeclaration","scope":6343,"src":"26284:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6166,"name":"string","nodeType":"ElementaryTypeName","src":"26284:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6169,"mutability":"mutable","name":"DealerNewCard","nameLocation":"26325:13:5","nodeType":"VariableDeclaration","scope":6343,"src":"26311:27:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6168,"name":"string","nodeType":"ElementaryTypeName","src":"26311:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6171,"mutability":"mutable","name":"DealerCardTotal","nameLocation":"26354:15:5","nodeType":"VariableDeclaration","scope":6343,"src":"26340:29:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6170,"name":"string","nodeType":"ElementaryTypeName","src":"26340:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6173,"mutability":"mutable","name":"PlayerBet","nameLocation":"26407:9:5","nodeType":"VariableDeclaration","scope":6343,"src":"26393:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6172,"name":"string","nodeType":"ElementaryTypeName","src":"26393:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6175,"mutability":"mutable","name":"Pot","nameLocation":"26432:3:5","nodeType":"VariableDeclaration","scope":6343,"src":"26418:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6174,"name":"string","nodeType":"ElementaryTypeName","src":"26418:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26037:399:5"},"scope":6344,"src":"25994:1574:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6345,"src":"864:26709:5","usedErrors":[],"usedEvents":[3975,3983,3991,3995]}],"src":"35:27538:5"},"id":5}},"contracts":{"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220977b3701748da23dbba655a370057edb773ff990e6a7aa3961d6f0a0d2800e0964736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 PUSH28 0x3701748DA23DBBA655A370057EDB773FF990E6A7AA3961D6F0A0D280 0xE MULMOD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"251:3680:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220977b3701748da23dbba655a370057edb773ff990e6a7aa3961d6f0a0d2800e0964736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 PUSH28 0x3701748DA23DBBA655A370057EDB773FF990E6A7AA3961D6F0A0D280 0xE MULMOD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"251:3680:1:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:2:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:3:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/blackjack.sol":{"BlackJack":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"Player","type":"address"}],"name":"AfterValueTransferEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"GameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"Player","type":"address"},{"indexed":true,"internalType":"uint256","name":"Amount","type":"uint256"}],"name":"BeforeValueTransferEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"GameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"Player","type":"address"},{"indexed":true,"internalType":"uint256","name":"Amount","type":"uint256"}],"name":"CashOutEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"GameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"Player","type":"address"},{"indexed":true,"internalType":"uint256","name":"Amount","type":"uint256"}],"name":"StartNewGameEvent","type":"event"},{"stateMutability":"nonpayable","type":"fallback"},{"inputs":[],"name":"CashOut","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"DoubleDown","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"GetGame","outputs":[{"components":[{"internalType":"uint256","name":"Id","type":"uint256"},{"internalType":"address","name":"Player","type":"address"},{"internalType":"uint256","name":"SafeBalance","type":"uint256"},{"internalType":"uint256","name":"OriginalBalance","type":"uint256"},{"internalType":"uint256","name":"SplitCounter","type":"uint256"},{"internalType":"uint256","name":"GamesPlayed","type":"uint256"},{"internalType":"uint256","name":"PlayerBet","type":"uint256"},{"internalType":"uint256","name":"InsuranceBet","type":"uint256"},{"internalType":"uint256","name":"PlayerCard1","type":"uint256"},{"internalType":"uint256","name":"PlayerCard2","type":"uint256"},{"internalType":"uint256","name":"PlayerNewCard","type":"uint256"},{"internalType":"uint256","name":"PlayerCardTotal","type":"uint256"},{"internalType":"uint256","name":"PlayerSplitTotal","type":"uint256"},{"internalType":"uint256","name":"DealerCard1","type":"uint256"},{"internalType":"uint256","name":"DealerCard2","type":"uint256"},{"internalType":"uint256","name":"DealerNewCard","type":"uint256"},{"internalType":"uint256","name":"DealerCardTotal","type":"uint256"},{"internalType":"bool","name":"CanDoubleDown","type":"bool"},{"internalType":"bool","name":"CanInsure","type":"bool"},{"internalType":"bool","name":"CanSplit","type":"bool"},{"internalType":"bool","name":"IsSplitting","type":"bool"},{"internalType":"bool","name":"IsSoftHand","type":"bool"},{"internalType":"bool","name":"IsRoundInProgress","type":"bool"},{"internalType":"string","name":"DealerMsg","type":"string"}],"internalType":"struct BlackJack.Game","name":"game","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"Hit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"Insurance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"bet","type":"uint256"}],"name":"PlaceBet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ShowTable","outputs":[{"internalType":"string","name":"DealerMessage","type":"string"},{"internalType":"string","name":"PlayerCard1","type":"string"},{"internalType":"string","name":"PlayerCard2","type":"string"},{"internalType":"string","name":"PlayerNewCard","type":"string"},{"internalType":"string","name":"PlayerCardTotal","type":"string"},{"internalType":"string","name":"PlayerSplitTotal","type":"string"},{"internalType":"string","name":"DealerCard1","type":"string"},{"internalType":"string","name":"DealerCard2","type":"string"},{"internalType":"string","name":"DealerNewCard","type":"string"},{"internalType":"string","name":"DealerCardTotal","type":"string"},{"internalType":"string","name":"PlayerBet","type":"string"},{"internalType":"string","name":"Pot","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"Split","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"Stand","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"StartNewGame","outputs":[],"stateMutability":"payable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_4029":{"entryPoint":null,"id":4029,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x80 MLOAD PUSH2 0x55AD PUSH2 0x6C PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH2 0x55AD PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x622E5026 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x622E5026 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x7CE2974D EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x9AD01E3E EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xA1E564B1 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xE8A80E9A EQ PUSH2 0x302 JUMPI PUSH2 0x144 JUMP JUMPDEST DUP1 PUSH4 0x24603EEA EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x39AE2133 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x55D842D7 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x58C5A7CC EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x5A6D41A0 EQ PUSH2 0x24A JUMPI PUSH2 0x144 JUMP JUMPDEST CALLDATASIZE PUSH2 0x144 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x109 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B SWAP1 PUSH2 0x42CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F2 SWAP1 PUSH2 0x433A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x203 PUSH2 0x319 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x74F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0xB71 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH2 0xEE1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x4395 JUMP JUMPDEST PUSH2 0x1158 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x14D6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29F PUSH2 0x17B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4441 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x4804 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x1F25 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH2 0x2415 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x392 SWAP1 PUSH2 0x4872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH5 0xE8D4A51000 CALLVALUE GT DUP1 ISZERO PUSH2 0x3B7 JUMPI POP PUSH8 0x8AC7230489E80000 CALLVALUE GT ISZERO JUMPDEST PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3ED SWAP1 PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3FE PUSH2 0x40AB JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP CALLVALUE DUP2 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP CALLVALUE DUP2 PUSH1 0x60 ADD DUP2 DUP2 MLOAD PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP CALLER DUP2 PUSH1 0x20 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F6E747261637420506169642E000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH2 0x2E0 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x4C6 SWAP1 PUSH2 0x4961 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD SSTORE PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0xB ADD SSTORE PUSH2 0x180 DUP3 ADD MLOAD DUP2 PUSH1 0xC ADD SSTORE PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0xD ADD SSTORE PUSH2 0x1C0 DUP3 ADD MLOAD DUP2 PUSH1 0xE ADD SSTORE PUSH2 0x1E0 DUP3 ADD MLOAD DUP2 PUSH1 0xF ADD SSTORE PUSH2 0x200 DUP3 ADD MLOAD DUP2 PUSH1 0x10 ADD SSTORE PUSH2 0x220 DUP3 ADD MLOAD DUP2 PUSH1 0x11 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x240 DUP3 ADD MLOAD DUP2 PUSH1 0x11 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x260 DUP3 ADD MLOAD DUP2 PUSH1 0x11 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x280 DUP3 ADD MLOAD DUP2 PUSH1 0x11 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2A0 DUP3 ADD MLOAD DUP2 PUSH1 0x11 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2C0 DUP3 ADD MLOAD DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2E0 DUP3 ADD MLOAD DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x6AF SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP SWAP1 POP POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x60 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 ADD MLOAD PUSH32 0x8A045E8CA90ABBB5FAAC5664EF1AB1A17450AF55E4C7C1904CFF223B299D0B71 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B5 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x840 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x4D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x11 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DE SWAP1 PUSH2 0x4D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x946 PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0xA ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0xA ADD SLOAD EQ DUP1 ISZERO PUSH2 0x966 JUMPI POP PUSH1 0xB DUP2 PUSH1 0xB ADD SLOAD LT JUMPDEST ISZERO PUSH2 0x993 JUMPI PUSH1 0xB DUP2 PUSH1 0xA ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x11 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x11 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAE5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C617965722773205475726E2E000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x9F0 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP DUP1 PUSH1 0xA ADD SLOAD DUP2 PUSH1 0xC ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x11 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xA32 JUMPI POP PUSH1 0x15 DUP2 PUSH1 0xC ADD SLOAD GT JUMPDEST ISZERO PUSH2 0xA71 JUMPI PUSH1 0xA DUP2 PUSH1 0xC ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA4C SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x15 DUP2 PUSH1 0xC ADD SLOAD GT ISZERO PUSH2 0xAE0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x545B PUSH1 0x23 SWAP2 CODECOPY DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xABD SWAP1 PUSH2 0x4961 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xB6E JUMP JUMPDEST DUP1 PUSH1 0xA ADD SLOAD DUP2 PUSH1 0xB ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x11 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xB26 JUMPI POP PUSH1 0x15 DUP2 PUSH1 0xB ADD SLOAD GT JUMPDEST ISZERO PUSH2 0xB65 JUMPI PUSH1 0xA DUP2 PUSH1 0xB ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xB6D PUSH2 0x271B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD7 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC59 SWAP1 PUSH2 0x4D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x11 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD00 SWAP1 PUSH2 0x4D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x11 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD51 SWAP1 PUSH2 0x4E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xB DUP2 PUSH1 0x8 ADD SLOAD SUB PUSH2 0xDB9 JUMPI PUSH1 0xB DUP2 PUSH1 0xB ADD DUP2 SWAP1 SSTORE POP PUSH1 0xB DUP2 PUSH1 0xC ADD DUP2 SWAP1 SSTORE POP PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0xB ADD SLOAD PUSH2 0xDCA SWAP2 SWAP1 PUSH2 0x4E5D JUMP JUMPDEST DUP2 PUSH1 0xB ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB ADD SLOAD DUP2 PUSH1 0xC ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x11 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE31 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xB DUP2 PUSH1 0x8 ADD SLOAD SUB PUSH2 0xEDE JUMPI PUSH2 0xE62 PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0xA ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xA ADD SLOAD DUP2 PUSH1 0xC ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE82 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE91 PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0xA ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xA ADD SLOAD DUP2 PUSH1 0xB ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEB1 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xEDD PUSH2 0x28C0 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF47 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0xFD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC9 SWAP1 PUSH2 0x4D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x11 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1079 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1070 SWAP1 PUSH2 0x4D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x11 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10F3 JUMPI PUSH2 0x10EE PUSH2 0x28C0 JUMP JUMPDEST PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x545B PUSH1 0x23 SWAP2 CODECOPY DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x111C SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1132 SWAP1 PUSH2 0x4961 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BE SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x1249 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1240 SWAP1 PUSH2 0x4D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x11 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x12F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E8 SWAP1 PUSH2 0x4EDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH5 0x174876E800 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x130E JUMPI POP PUSH8 0xDE0B6B3A7640000 DUP3 GT ISZERO JUMPDEST PUSH2 0x134D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1344 SWAP1 PUSH2 0x4F46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x1361 JUMPI POP DUP1 PUSH1 0x2 ADD SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1397 SWAP1 PUSH2 0x4FB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13B4 SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x11 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x13E6 JUMPI POP DUP1 PUSH1 0x11 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x140B JUMPI DUP2 DUP2 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13FF SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1415 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1447 SWAP1 PUSH2 0x4961 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x11 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1477 JUMPI POP DUP1 PUSH1 0x11 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x42657420506C616365642E000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x14C2 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH2 0x14D2 JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x29DF JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1545 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153C SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x15C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BE SWAP1 PUSH2 0x4D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x11 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x166E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1665 SWAP1 PUSH2 0x4D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x11 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x16BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B6 SWAP1 PUSH2 0x501E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x16D0 SWAP2 SWAP1 PUSH2 0x4E5D JUMP JUMPDEST DUP2 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x7 ADD SLOAD GT DUP1 ISZERO PUSH2 0x16F4 JUMPI POP DUP1 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0x7 ADD SLOAD GT ISZERO JUMPDEST PUSH2 0x1733 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172A SWAP1 PUSH2 0x4FB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 ADD SLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x174B SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C617965722773205475726E2E000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x1798 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x300 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xE DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xF DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x10 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x12 DUP3 ADD DUP1 SLOAD PUSH2 0x19D3 SWAP1 PUSH2 0x4A07 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19FF SWAP1 PUSH2 0x4A07 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH2 0x2E0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A6D SWAP2 SWAP1 PUSH2 0x50A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP13 POP PUSH2 0x1A8C DUP2 PUSH2 0x100 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A9C SWAP2 SWAP1 PUSH2 0x50A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP12 POP PUSH2 0x1ABB DUP2 PUSH2 0x120 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1ACB SWAP2 SWAP1 PUSH2 0x50A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP11 POP PUSH2 0x1AEA DUP2 PUSH2 0x140 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AFA SWAP2 SWAP1 PUSH2 0x50A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP10 POP PUSH2 0x1B19 DUP2 PUSH2 0x160 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B29 SWAP2 SWAP1 PUSH2 0x50EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP9 POP PUSH2 0x1B48 DUP2 PUSH2 0x180 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B58 SWAP2 SWAP1 PUSH2 0x50EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP8 POP PUSH2 0x1B77 DUP2 PUSH2 0x1A0 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B87 SWAP2 SWAP1 PUSH2 0x50A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP7 POP PUSH2 0x1BA6 DUP2 PUSH2 0x1C0 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BB6 SWAP2 SWAP1 PUSH2 0x50A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP6 POP PUSH2 0x1BD5 DUP2 PUSH2 0x1E0 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BE5 SWAP2 SWAP1 PUSH2 0x50A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP5 POP PUSH2 0x1C04 DUP2 PUSH2 0x200 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C14 SWAP2 SWAP1 PUSH2 0x50EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 POP PUSH2 0x1C32 DUP2 PUSH1 0xC0 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C42 SWAP2 SWAP1 PUSH2 0x5138 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP PUSH2 0x1C60 DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C70 SWAP2 SWAP1 PUSH2 0x5138 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 SWAP12 JUMP JUMPDEST PUSH2 0x1C98 PUSH2 0x40AB JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x300 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xE DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xF DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x10 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x12 DUP3 ADD DUP1 SLOAD PUSH2 0x1E9E SWAP1 PUSH2 0x4A07 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1ECA SWAP1 PUSH2 0x4A07 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F17 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EEC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F17 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1EFA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F8B SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x2016 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x200D SWAP1 PUSH2 0x4D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x300 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xE DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xF DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x10 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x12 DUP3 ADD DUP1 SLOAD PUSH2 0x221E SWAP1 PUSH2 0x4A07 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x224A SWAP1 PUSH2 0x4A07 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2297 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x226C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2297 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x227A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH2 0x2C0 ADD MLOAD ISZERO PUSH2 0x22E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22DF SWAP1 PUSH2 0x4EDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD SWAP1 POP PUSH1 0x0 SELFBALANCE LT ISZERO DUP1 ISZERO PUSH2 0x2305 JUMPI POP DUP2 PUSH1 0x40 ADD MLOAD SELFBALANCE LT JUMPDEST ISZERO PUSH2 0x230E JUMPI SELFBALANCE SWAP1 POP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x231F JUMPI PUSH2 0x231E PUSH2 0x516D JUMP JUMPDEST JUMPDEST PUSH2 0x2328 CALLER PUSH2 0x307B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x236E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x2378 CALLER PUSH2 0x3342 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x23C8 JUMPI PUSH2 0x23C7 PUSH2 0x516D JUMP JUMPDEST JUMPDEST DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x0 ADD MLOAD PUSH32 0x250EFCB6BE2A0AC5605D1CF71328B5851470F02F783CE2DF316489C41BA96EDD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x247B SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x2506 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24FD SWAP1 PUSH2 0x4D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x11 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x25AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25A4 SWAP1 PUSH2 0x4D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x11 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x25FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F5 SWAP1 PUSH2 0x51E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2662 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2687 PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0xA ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0xA ADD SLOAD EQ DUP1 ISZERO PUSH2 0x26A7 JUMPI POP PUSH1 0xB DUP2 PUSH1 0xB ADD SLOAD LT JUMPDEST ISZERO PUSH2 0x26D4 JUMPI PUSH1 0xB DUP2 PUSH1 0xA ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x11 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xA ADD SLOAD DUP2 PUSH1 0xB ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x26EC SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x26FB PUSH2 0x28C0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2708 PUSH2 0x35FC JUMP JUMPDEST SWAP1 POP PUSH1 0xA DUP2 GT ISZERO PUSH2 0x2718 JUMPI PUSH1 0xA SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x15 DUP2 PUSH1 0xB ADD SLOAD GT ISZERO PUSH2 0x2875 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C6179657220427573742E0000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x27C4 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x7 ADD SLOAD EQ PUSH2 0x2839 JUMPI PUSH2 0x27D9 PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0xE ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xE ADD SLOAD DUP2 PUSH1 0x10 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x27F9 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x15 DUP2 PUSH1 0x10 ADD SLOAD SUB PUSH2 0x2838 JUMPI PUSH1 0x2 DUP2 PUSH1 0x7 ADD SLOAD PUSH2 0x281D SWAP2 SWAP1 PUSH2 0x5208 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2830 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0x2852 JUMPI PUSH2 0x284D PUSH2 0x28C0 JUMP JUMPDEST PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x28BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C617965722773205475726E2E000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x28BB SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x291E PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0xE ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0xE ADD SLOAD EQ DUP1 ISZERO PUSH2 0x293E JUMPI POP PUSH1 0xB DUP2 PUSH1 0xD ADD SLOAD LT JUMPDEST ISZERO PUSH2 0x294E JUMPI PUSH1 0xB DUP2 PUSH1 0xE ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xE ADD SLOAD DUP2 PUSH1 0xD ADD SLOAD PUSH2 0x2962 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST DUP2 PUSH1 0x10 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x11 DUP2 PUSH1 0x10 ADD SLOAD LT ISZERO PUSH2 0x29D4 JUMPI PUSH2 0x2980 PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0xF ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0xF ADD SLOAD EQ DUP1 ISZERO PUSH2 0x29A0 JUMPI POP PUSH1 0xB DUP2 PUSH1 0x10 ADD SLOAD LT JUMPDEST ISZERO PUSH2 0x29B0 JUMPI PUSH1 0xB DUP2 PUSH1 0xF ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xF ADD SLOAD DUP2 PUSH1 0x10 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x29C8 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x296B JUMP JUMPDEST PUSH2 0x29DC PUSH2 0x36C4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x9 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0xA ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0xB ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0xC ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0xD ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0xE ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0xF ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x10 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2A72 PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x8 ADD SLOAD SUB PUSH2 0x2AAE JUMPI PUSH1 0xB DUP2 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x11 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x2AB6 PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0xD ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2AC6 PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0x9 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x9 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x2AE6 JUMPI POP PUSH1 0xB DUP2 PUSH1 0x8 ADD SLOAD LT JUMPDEST ISZERO PUSH2 0x2B13 JUMPI PUSH1 0xB DUP2 PUSH1 0x9 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x11 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x9 ADD SLOAD DUP2 PUSH1 0x8 ADD SLOAD PUSH2 0x2B27 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST DUP2 PUSH1 0xB ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0xD ADD SLOAD SUB PUSH2 0x2B63 JUMPI PUSH1 0xB DUP2 PUSH1 0xD ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x11 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xE ADD SLOAD DUP2 PUSH1 0xD ADD SLOAD PUSH2 0x2B77 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST DUP2 PUSH1 0x10 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x15 DUP2 PUSH1 0xB ADD SLOAD SUB PUSH2 0x2D05 JUMPI PUSH1 0xA DUP2 PUSH1 0xD ADD SLOAD SUB PUSH2 0x2BDB JUMPI PUSH2 0x2B9F PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0xE ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0xE ADD SLOAD SUB PUSH2 0x2BBE JUMPI PUSH1 0xB DUP2 PUSH1 0xE ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xE ADD SLOAD DUP2 PUSH1 0xD ADD SLOAD PUSH2 0x2BD2 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST DUP2 PUSH1 0x10 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xB ADD SLOAD DUP2 PUSH1 0x10 ADD SLOAD SUB PUSH2 0x2C55 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5374616E644F6666210000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2C30 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP DUP1 PUSH1 0x6 ADD SLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2C49 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x426C61636B4A61636B2120506C617965722057696E732E000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2C9B SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x2 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x2CAD SWAP2 SWAP1 PUSH2 0x4E5D JUMP JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x6 ADD SLOAD PUSH2 0x2CBE SWAP2 SWAP1 PUSH2 0x5208 JUMP JUMPDEST PUSH2 0x2CC8 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2CDB SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2DB1 JUMP JUMPDEST DUP1 PUSH1 0x11 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2D68 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C617965722773205475726E2E2057616E7420496E737572616E63653F0000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2D62 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH2 0x2DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C617965722773205475726E2E000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2DAE SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP JUMPDEST JUMPDEST DUP1 PUSH1 0x9 ADD SLOAD DUP2 PUSH1 0x8 ADD SLOAD SUB PUSH2 0x2E6C JUMPI DUP1 PUSH1 0x11 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2E06 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x54B4 PUSH1 0x30 SWAP2 CODECOPY DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2E00 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH2 0x2E4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C617965722773205475726E2E20506C617965722063616E2053706C69742E DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2E4C SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x11 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x9 DUP2 PUSH1 0xB ADD SLOAD EQ DUP1 PUSH2 0x2E83 JUMPI POP PUSH1 0xA DUP2 PUSH1 0xB ADD SLOAD EQ JUMPDEST DUP1 PUSH2 0x2E92 JUMPI POP PUSH1 0xB DUP2 PUSH1 0xB ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x2FAA JUMPI DUP1 PUSH1 0x11 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2F1F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x547E PUSH1 0x36 SWAP2 CODECOPY DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2ED7 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP DUP1 PUSH1 0x11 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2F1A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x54E4 PUSH1 0x3F SWAP2 CODECOPY DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2F18 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP JUMPDEST PUSH2 0x2F8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5552 PUSH1 0x26 SWAP2 CODECOPY DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2F48 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP DUP1 PUSH1 0x11 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2F8B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5523 PUSH1 0x2F SWAP2 CODECOPY DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2F89 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x11 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x2FBC DUP5 PUSH2 0x3F58 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FDB JUMPI PUSH2 0x2FDA PUSH2 0x49A9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x300D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x3070 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x3064 JUMPI PUSH2 0x3063 PUSH2 0x4E2E JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x301B JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xA DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xB DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xC DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xD DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xE DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xF DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x10 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x12 DUP3 ADD PUSH1 0x0 PUSH2 0x32F6 SWAP2 SWAP1 PUSH2 0x4182 JUMP JUMPDEST POP POP DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x1D7497D6FD179A17C5C10FA701D5DD57FB68542C79473B9759B789ED784D5C27 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO DUP1 PUSH2 0x33E7 JUMPI POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x35B6 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xA DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xB DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xC DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xD DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xE DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xF DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x10 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x12 DUP3 ADD PUSH1 0x0 PUSH2 0x35B3 SWAP2 SWAP1 PUSH2 0x4182 JUMP JUMPDEST POP POP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFA63CAFECF2C1C6AE30E5B5E06570BA0BF03859678E781644BFA3A0D6764343D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x15 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x3610 SWAP2 SWAP1 PUSH2 0x5208 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x0 SLOAD PREVRANDAO TIMESTAMP PUSH2 0x362A SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST PUSH2 0x3634 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST PUSH2 0x363E SWAP2 SWAP1 PUSH2 0x524A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0xD PUSH1 0x1 NUMBER PUSH2 0x3651 SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST BLOCKHASH DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3664 SWAP3 SWAP2 SWAP1 PUSH2 0x52C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x3687 SWAP2 SWAP1 PUSH2 0x524A JUMP JUMPDEST PUSH2 0x3691 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x36A5 SWAP1 PUSH2 0x4961 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH4 0x1908B100 PUSH1 0x0 SLOAD GT ISZERO PUSH2 0x36C0 JUMPI DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x15 DUP2 PUSH1 0x10 ADD SLOAD GT ISZERO PUSH2 0x3920 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4465616C657220427573742E0000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x376D SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0x38A8 JUMPI PUSH1 0x15 DUP2 PUSH1 0xB ADD SLOAD GT PUSH2 0x380A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4465616C657220427573742E20506C617965722057696E732E00000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x37E9 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP DUP1 PUSH1 0x6 ADD SLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3802 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x15 DUP2 PUSH1 0xC ADD SLOAD GT PUSH2 0x386E JUMPI DUP1 PUSH1 0x12 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x382A SWAP2 SWAP1 PUSH2 0x539C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3849 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP DUP1 PUSH1 0x6 ADD SLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3862 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x38A3 JUMP JUMPDEST DUP1 PUSH1 0x12 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3882 SWAP2 SWAP1 PUSH2 0x53E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x38A1 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP JUMPDEST PUSH2 0x391B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4465616C657220427573742E20506C617965722057696E732E00000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x38EE SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x2 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x3900 SWAP2 SWAP1 PUSH2 0x5208 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3913 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x3F55 JUMP JUMPDEST PUSH1 0x15 DUP2 PUSH1 0x10 ADD SLOAD SUB PUSH2 0x3B2F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4465616C65722057696E732E0000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3972 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x7 ADD SLOAD EQ PUSH2 0x39C8 JUMPI PUSH1 0x2 DUP2 PUSH1 0x7 ADD SLOAD PUSH2 0x39AD SWAP2 SWAP1 PUSH2 0x5208 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x39C0 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x15 DUP2 PUSH1 0xB ADD SLOAD SUB PUSH2 0x3A78 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5374616E644F6666210000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3A1A SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0x3A57 JUMPI PUSH1 0x2 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x3A38 SWAP2 SWAP1 PUSH2 0x4E5D JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3A4B SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3A77 JUMP JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3A6F SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0x3B2A JUMPI PUSH1 0x15 DUP2 PUSH1 0xC ADD SLOAD SUB PUSH2 0x3AF4 JUMPI DUP1 PUSH1 0x12 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3AA4 SWAP2 SWAP1 PUSH2 0x5434 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3AC3 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x2 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x3AD5 SWAP2 SWAP1 PUSH2 0x4E5D JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3AE8 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3B29 JUMP JUMPDEST DUP1 PUSH1 0x12 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3B08 SWAP2 SWAP1 PUSH2 0x53E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3B27 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH2 0x3F54 JUMP JUMPDEST PUSH1 0x15 DUP2 PUSH1 0xB ADD SLOAD LT DUP1 ISZERO PUSH2 0x3B62 JUMPI POP DUP1 PUSH1 0xB ADD SLOAD PUSH1 0x15 PUSH2 0x3B4F SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST DUP2 PUSH1 0x10 ADD SLOAD PUSH1 0x15 PUSH2 0x3B60 SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x3C2C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5374616E644F6666210000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3BAD SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0x3C07 JUMPI PUSH1 0x2 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x3BE8 SWAP2 SWAP1 PUSH2 0x4E5D JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3BFB SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3C27 JUMP JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3C1F SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x3D8E JUMP JUMPDEST PUSH1 0x15 DUP2 PUSH1 0xB ADD SLOAD GT DUP1 PUSH2 0x3C5E JUMPI POP DUP1 PUSH1 0xB ADD SLOAD PUSH1 0x15 PUSH2 0x3C4B SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST DUP2 PUSH1 0x10 ADD SLOAD PUSH1 0x15 PUSH2 0x3C5C SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x3CCC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4465616C65722057696E732E0000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3CA9 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3D8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C617965722057696E732E0000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3D12 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0x3D60 JUMPI DUP1 PUSH1 0x6 ADD SLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3D54 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3D8C JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x3D71 SWAP2 SWAP1 PUSH2 0x5208 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3D84 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0x3F53 JUMPI PUSH1 0x15 DUP2 PUSH1 0xC ADD SLOAD LT DUP1 ISZERO PUSH2 0x3DCD JUMPI POP DUP1 PUSH1 0xC ADD SLOAD PUSH1 0x15 PUSH2 0x3DBA SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST DUP2 PUSH1 0x10 ADD SLOAD PUSH1 0x15 PUSH2 0x3DCB SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x3E53 JUMPI DUP1 PUSH1 0x12 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3DE6 SWAP2 SWAP1 PUSH2 0x5434 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3E05 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x3E34 SWAP2 SWAP1 PUSH2 0x4E5D JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3E47 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3F52 JUMP JUMPDEST PUSH1 0x15 DUP2 PUSH1 0xC ADD SLOAD GT DUP1 PUSH2 0x3E85 JUMPI POP DUP1 PUSH1 0xC ADD SLOAD PUSH1 0x15 PUSH2 0x3E72 SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST DUP2 PUSH1 0x10 ADD SLOAD PUSH1 0x15 PUSH2 0x3E83 SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x3EE0 JUMPI DUP1 PUSH1 0x12 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3E9E SWAP2 SWAP1 PUSH2 0x53E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3EBD SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3F51 JUMP JUMPDEST DUP1 PUSH1 0x12 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3EF4 SWAP2 SWAP1 PUSH2 0x539C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3F13 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x6 ADD SLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3F49 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x3FB6 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x3FAC JUMPI PUSH2 0x3FAB PUSH2 0x4E2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x3FF3 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x3FE9 JUMPI PUSH2 0x3FE8 PUSH2 0x4E2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x4022 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x4018 JUMPI PUSH2 0x4017 PUSH2 0x4E2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x404B JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x4041 JUMPI PUSH2 0x4040 PUSH2 0x4E2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x4070 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x4066 JUMPI PUSH2 0x4065 PUSH2 0x4E2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x4093 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x4089 JUMPI PUSH2 0x4088 PUSH2 0x4E2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x40A2 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x300 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x418E SWAP1 PUSH2 0x4A07 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x41A0 JUMPI POP PUSH2 0x41BF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x41BE SWAP2 SWAP1 PUSH2 0x41C2 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x41DB JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x41C3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573735F494E56000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4226 PUSH1 0xB DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4231 DUP3 PUSH2 0x41F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4255 DUP2 PUSH2 0x4219 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C65617365207573652053746172744E657747616D652046756E6374696F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F2070617920636F6E74726163742E000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B8 PUSH1 0x31 DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x42C3 DUP3 PUSH2 0x425C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42E7 DUP2 PUSH2 0x42AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E5F444E452E00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4324 PUSH1 0xD DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x432F DUP3 PUSH2 0x42EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4353 DUP2 PUSH2 0x4317 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4372 DUP2 PUSH2 0x435F JUMP JUMPDEST DUP2 EQ PUSH2 0x437D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x438F DUP2 PUSH2 0x4369 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43AB JUMPI PUSH2 0x43AA PUSH2 0x435A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43B9 DUP5 DUP3 DUP6 ADD PUSH2 0x4380 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x43EB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x43D0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4413 DUP3 PUSH2 0x43C2 JUMP JUMPDEST PUSH2 0x441D DUP2 DUP6 PUSH2 0x41DF JUMP JUMPDEST SWAP4 POP PUSH2 0x442D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x43CD JUMP JUMPDEST PUSH2 0x4436 DUP2 PUSH2 0x43F7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x445C DUP2 DUP16 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4470 DUP2 DUP15 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4484 DUP2 DUP14 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4498 DUP2 DUP13 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x44AC DUP2 DUP12 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x44C0 DUP2 DUP11 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x44D4 DUP2 DUP10 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x44E8 DUP2 DUP9 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x44FD DUP2 DUP8 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x4512 DUP2 DUP7 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x4527 DUP2 DUP6 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x453C DUP2 DUP5 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4558 DUP2 PUSH2 0x435F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4589 DUP3 PUSH2 0x455E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4599 DUP2 PUSH2 0x457E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45B4 DUP2 PUSH2 0x459F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45D6 DUP3 PUSH2 0x43C2 JUMP JUMPDEST PUSH2 0x45E0 DUP2 DUP6 PUSH2 0x45BA JUMP JUMPDEST SWAP4 POP PUSH2 0x45F0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x43CD JUMP JUMPDEST PUSH2 0x45F9 DUP2 PUSH2 0x43F7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x300 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x461D PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x4630 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x4590 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x4643 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x4656 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x4669 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x467C PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x468F PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x46A2 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x46B7 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x120 DUP4 ADD MLOAD PUSH2 0x46CC PUSH2 0x120 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x140 DUP4 ADD MLOAD PUSH2 0x46E1 PUSH2 0x140 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x160 DUP4 ADD MLOAD PUSH2 0x46F6 PUSH2 0x160 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x180 DUP4 ADD MLOAD PUSH2 0x470B PUSH2 0x180 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x1A0 DUP4 ADD MLOAD PUSH2 0x4720 PUSH2 0x1A0 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x1C0 DUP4 ADD MLOAD PUSH2 0x4735 PUSH2 0x1C0 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x1E0 DUP4 ADD MLOAD PUSH2 0x474A PUSH2 0x1E0 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x200 DUP4 ADD MLOAD PUSH2 0x475F PUSH2 0x200 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x220 DUP4 ADD MLOAD PUSH2 0x4774 PUSH2 0x220 DUP7 ADD DUP3 PUSH2 0x45AB JUMP JUMPDEST POP PUSH2 0x240 DUP4 ADD MLOAD PUSH2 0x4789 PUSH2 0x240 DUP7 ADD DUP3 PUSH2 0x45AB JUMP JUMPDEST POP PUSH2 0x260 DUP4 ADD MLOAD PUSH2 0x479E PUSH2 0x260 DUP7 ADD DUP3 PUSH2 0x45AB JUMP JUMPDEST POP PUSH2 0x280 DUP4 ADD MLOAD PUSH2 0x47B3 PUSH2 0x280 DUP7 ADD DUP3 PUSH2 0x45AB JUMP JUMPDEST POP PUSH2 0x2A0 DUP4 ADD MLOAD PUSH2 0x47C8 PUSH2 0x2A0 DUP7 ADD DUP3 PUSH2 0x45AB JUMP JUMPDEST POP PUSH2 0x2C0 DUP4 ADD MLOAD PUSH2 0x47DD PUSH2 0x2C0 DUP7 ADD DUP3 PUSH2 0x45AB JUMP JUMPDEST POP PUSH2 0x2E0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH2 0x2E0 DUP7 ADD MSTORE PUSH2 0x47F7 DUP3 DUP3 PUSH2 0x45CB JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x481E DUP2 DUP5 PUSH2 0x4604 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4578697374696E67506C617965725F4343460000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x485C PUSH1 0x12 DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4867 DUP3 PUSH2 0x4826 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x488B DUP2 PUSH2 0x484F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F7369745F4C696D697400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48C8 PUSH1 0xD DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x48D3 DUP3 PUSH2 0x4892 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48F7 DUP2 PUSH2 0x48BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4938 DUP3 PUSH2 0x435F JUMP JUMPDEST SWAP2 POP PUSH2 0x4943 DUP4 PUSH2 0x435F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x495B JUMPI PUSH2 0x495A PUSH2 0x48FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x496C DUP3 PUSH2 0x435F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x499E JUMPI PUSH2 0x499D PUSH2 0x48FE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4A1F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4A32 JUMPI PUSH2 0x4A31 PUSH2 0x49D8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x4A9A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4A5D JUMP JUMPDEST PUSH2 0x4AA4 DUP7 DUP4 PUSH2 0x4A5D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AE1 PUSH2 0x4ADC PUSH2 0x4AD7 DUP5 PUSH2 0x435F JUMP JUMPDEST PUSH2 0x4ABC JUMP JUMPDEST PUSH2 0x435F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AFB DUP4 PUSH2 0x4AC6 JUMP JUMPDEST PUSH2 0x4B0F PUSH2 0x4B07 DUP3 PUSH2 0x4AE8 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4A6A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4B24 PUSH2 0x4B17 JUMP JUMPDEST PUSH2 0x4B2F DUP2 DUP5 DUP5 PUSH2 0x4AF2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4B53 JUMPI PUSH2 0x4B48 PUSH1 0x0 DUP3 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4B35 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4B98 JUMPI PUSH2 0x4B69 DUP2 PUSH2 0x4A38 JUMP JUMPDEST PUSH2 0x4B72 DUP5 PUSH2 0x4A4D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4B81 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4B95 PUSH2 0x4B8D DUP6 PUSH2 0x4A4D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4B34 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BBB PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4B9D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD4 DUP4 DUP4 PUSH2 0x4BAA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4BED DUP3 PUSH2 0x43C2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C06 JUMPI PUSH2 0x4C05 PUSH2 0x49A9 JUMP JUMPDEST JUMPDEST PUSH2 0x4C10 DUP3 SLOAD PUSH2 0x4A07 JUMP JUMPDEST PUSH2 0x4C1B DUP3 DUP3 DUP6 PUSH2 0x4B57 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4C4E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4C3C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4C46 DUP6 DUP3 PUSH2 0x4BC8 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4CAE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4C5C DUP7 PUSH2 0x4A38 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C84 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4C5F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4CA1 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4C9D PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4BAA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x47616D655F444E45000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CEC PUSH1 0x8 DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4CF7 DUP3 PUSH2 0x4CB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D1B DUP2 PUSH2 0x4CDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E506C617965725475726E5F4F6E6C79000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D58 PUSH1 0x11 DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4D63 DUP3 PUSH2 0x4D22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D87 DUP2 PUSH2 0x4D4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D99 DUP3 PUSH2 0x435F JUMP JUMPDEST SWAP2 POP PUSH2 0x4DA4 DUP4 PUSH2 0x435F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4DBC JUMPI PUSH2 0x4DBB PUSH2 0x48FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E43616E53706C69745475726E5F4F6E6C7900000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DF8 PUSH1 0x13 DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4E03 DUP3 PUSH2 0x4DC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4E27 DUP2 PUSH2 0x4DEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4E68 DUP3 PUSH2 0x435F JUMP JUMPDEST SWAP2 POP PUSH2 0x4E73 DUP4 PUSH2 0x435F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4E83 JUMPI PUSH2 0x4E82 PUSH2 0x4E2E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x49734E6577526F756E645F4F6E6C790000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC4 PUSH1 0xF DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4ECF DUP3 PUSH2 0x4E8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4EF3 DUP2 PUSH2 0x4EB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4265745F4C696D69740000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F30 PUSH1 0x9 DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4F3B DUP3 PUSH2 0x4EFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F5F DUP2 PUSH2 0x4F23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x494E535F46756E64730000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F9C PUSH1 0x9 DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4FA7 DUP3 PUSH2 0x4F66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4FCB DUP2 PUSH2 0x4F8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E43616E496E737572655475726E5F4F6E6C79000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5008 PUSH1 0x14 DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x5013 DUP3 PUSH2 0x4FD2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5037 DUP2 PUSH2 0x4FFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x202D2D3E20000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x507A DUP3 PUSH2 0x43C2 JUMP JUMPDEST PUSH2 0x5084 DUP2 DUP6 PUSH2 0x5064 JUMP JUMPDEST SWAP4 POP PUSH2 0x5094 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x43CD JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50AB DUP3 PUSH2 0x503E JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SWAP2 POP PUSH2 0x50BB DUP3 DUP5 PUSH2 0x506F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x202D2D2D2D2D2D3E200000000000000000000000000000000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50F7 DUP3 PUSH2 0x50C6 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP2 POP PUSH2 0x5107 DUP3 DUP5 PUSH2 0x506F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2077656900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5143 DUP3 PUSH2 0x503E JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SWAP2 POP PUSH2 0x5153 DUP3 DUP5 PUSH2 0x506F JUMP JUMPDEST SWAP2 POP PUSH2 0x515E DUP3 PUSH2 0x5112 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4F6E43616E446F75626C65446F776E5475726E5F4F6E6C790000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D2 PUSH1 0x18 DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x51DD DUP3 PUSH2 0x519C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5201 DUP2 PUSH2 0x51C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5213 DUP3 PUSH2 0x435F JUMP JUMPDEST SWAP2 POP PUSH2 0x521E DUP4 PUSH2 0x435F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x522C DUP2 PUSH2 0x435F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x5243 JUMPI PUSH2 0x5242 PUSH2 0x48FE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5255 DUP3 PUSH2 0x435F JUMP JUMPDEST SWAP2 POP PUSH2 0x5260 DUP4 PUSH2 0x435F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5270 JUMPI PUSH2 0x526F PUSH2 0x4E2E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52A0 PUSH2 0x529B DUP3 PUSH2 0x527B JUMP JUMPDEST PUSH2 0x5285 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52C1 PUSH2 0x52BC DUP3 PUSH2 0x435F JUMP JUMPDEST PUSH2 0x52A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52D3 DUP3 DUP6 PUSH2 0x528F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x52E3 DUP3 DUP5 PUSH2 0x52B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x5300 DUP2 PUSH2 0x4A07 JUMP JUMPDEST PUSH2 0x530A DUP2 DUP7 PUSH2 0x5064 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x5325 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x533A JUMPI PUSH2 0x536D JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x536D JUMP JUMPDEST PUSH2 0x5343 DUP6 PUSH2 0x4A38 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5365 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5346 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x20506C6179657220776F6E2073706C69742068616E642E000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53A8 DUP3 DUP5 PUSH2 0x52F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x53B3 DUP3 PUSH2 0x5376 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x20506C61796572206C6F73742073706C69742068616E642E0000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53F4 DUP3 DUP5 PUSH2 0x52F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x53FF DUP3 PUSH2 0x53C2 JUMP JUMPDEST PUSH1 0x18 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x205374616E644F6666206F6E2073706C69742068616E64210000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5440 DUP3 DUP5 PUSH2 0x52F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x544B DUP3 PUSH2 0x540E JUMP JUMPDEST PUSH1 0x18 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID MSTORE8 PUSH17 0x6C69742068616E6420636F6D706C657465 0x2E KECCAK256 POP PUSH13 0x617965722773205475726E2E50 PUSH13 0x617965722773205475726E2E20 JUMPI PUSH2 0x6E74 KECCAK256 0x49 PUSH15 0x737572616E63653F20506C61796572 KECCAK256 PUSH4 0x616E2044 PUSH16 0x75626C6520446F776E2E506C61796572 0x27 PUSH20 0x205475726E2E2057616E7420496E737572616E63 PUSH6 0x3F20506C6179 PUSH6 0x722063616E20 MSTORE8 PUSH17 0x6C69742E506C617965722773205475726E 0x2E KECCAK256 JUMPI PUSH2 0x6E74 KECCAK256 0x49 PUSH15 0x737572616E63653F20506C61796572 KECCAK256 PUSH4 0x616E2053 PUSH17 0x6C6974206F7220446F75626C6520446F77 PUSH15 0x2E506C617965722773205475726E2E KECCAK256 POP PUSH13 0x617965722063616E2053706C69 PUSH21 0x206F7220446F75626C6520446F776E2E506C617965 PUSH19 0x2773205475726E2E20506C617965722063616E KECCAK256 PREVRANDAO PUSH16 0x75626C6520446F776E2EA26469706673 PC 0x22 SLT KECCAK256 MSTORE 0x4E SWAP14 0xBF SWAP1 0xC2 SWAP6 CALLDATASIZE 0xCB 0x2E PUSH22 0x5F1D9502E21DE396B037C97617808E6BE6CD579B5D64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"864:26709:5:-:0;;;3320:119;;;;;;;;;;3370:1;3356:11;:15;;;;3398:1;3382:13;:17;;;;3421:10;3412:19;;;;;;;;;;864:26709;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@AfterValueTransfer_6054":{"entryPoint":13122,"id":6054,"parameterSlots":1,"returnSlots":0},"@BeforeValueTransfer_6014":{"entryPoint":12411,"id":6014,"parameterSlots":1,"returnSlots":0},"@CashOut_5970":{"entryPoint":7973,"id":5970,"parameterSlots":0,"returnSlots":0},"@CheckWinnerOnHit_5399":{"entryPoint":10011,"id":5399,"parameterSlots":0,"returnSlots":0},"@CheckWinnerOnStand_5859":{"entryPoint":14020,"id":5859,"parameterSlots":0,"returnSlots":0},"@DealCards_4630":{"entryPoint":10719,"id":4630,"parameterSlots":1,"returnSlots":0},"@DoubleDown_5076":{"entryPoint":9237,"id":5076,"parameterSlots":0,"returnSlots":0},"@GenerateRandomNumber_6132":{"entryPoint":13820,"id":6132,"parameterSlots":0,"returnSlots":1},"@GetCard_6074":{"entryPoint":9982,"id":6074,"parameterSlots":0,"returnSlots":1},"@GetGame_6149":{"entryPoint":7312,"id":6149,"parameterSlots":0,"returnSlots":1},"@Hit_4804":{"entryPoint":1871,"id":4804,"parameterSlots":0,"returnSlots":0},"@Insurance_5315":{"entryPoint":5334,"id":5315,"parameterSlots":0,"returnSlots":0},"@PlaceBet_4257":{"entryPoint":4440,"id":4257,"parameterSlots":1,"returnSlots":0},"@PlayDealerHand_4968":{"entryPoint":10432,"id":4968,"parameterSlots":0,"returnSlots":0},"@ShowTable_6343":{"entryPoint":6073,"id":6343,"parameterSlots":0,"returnSlots":12},"@Split_5234":{"entryPoint":2929,"id":5234,"parameterSlots":0,"returnSlots":0},"@Stand_4881":{"entryPoint":3809,"id":4881,"parameterSlots":0,"returnSlots":0},"@StartNewGame_4143":{"entryPoint":793,"id":4143,"parameterSlots":0,"returnSlots":0},"@_4040":{"entryPoint":null,"id":4040,"parameterSlots":0,"returnSlots":0},"@_4051":{"entryPoint":null,"id":4051,"parameterSlots":0,"returnSlots":0},"@log10_1749":{"entryPoint":16216,"id":1749,"parameterSlots":1,"returnSlots":1},"@toString_119":{"entryPoint":12205,"id":119,"parameterSlots":1,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":17280,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":17301,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":17808,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool":{"entryPoint":17835,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":21135,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":17867,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":17416,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20591,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":21235,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0257a43edd2a7a85580801ec2f283037586509160ac0481da651693f3dcbda20_to_t_bytes9_nonPadded_inplace_fromStack":{"entryPoint":20678,"id":null,"parameterSlots":1,"returnSlots":0},"abi_encode_t_stringliteral_0ce2fea17e1bfdbc965b108c55d6405798514c890bf554156ecbcecd02288e9f_to_t_string_memory_ptr_fromStack":{"entryPoint":16921,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0e4887e76f7fcd61a28101e915f9bb1da012679974d91aac6a12226aa17e16f7_to_t_string_memory_ptr_fromStack":{"entryPoint":18619,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_11c0e650c89aa2a2bcc82172d574c83a55d46b332c6c5d528dd67e12fe46a726_to_t_string_memory_ptr_fromStack":{"entryPoint":20933,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_48dc19631629da1b2346a32d98cbc4846a44ed7618f77c5c6a081ec8e4c25f61_to_t_string_memory_ptr_fromStack":{"entryPoint":20151,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_514ea601867e3f587ad35939476f254258c9acad4a417792829c4ad92621b30a_to_t_bytes24_nonPadded_inplace_fromStack":{"entryPoint":21442,"id":null,"parameterSlots":1,"returnSlots":0},"abi_encode_t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa_to_t_string_memory_ptr_fromStack":{"entryPoint":19679,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_619463c843b12538087273e01d1f541fd8442dd1bca0d59b893801731e06ef1d_to_t_string_memory_ptr_fromStack":{"entryPoint":20367,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6884c8765ed9c3ce28a01297f38e5acbb4b3ee59bf507abdb41f31b919ff7019_to_t_bytes4_nonPadded_inplace_fromStack":{"entryPoint":20754,"id":null,"parameterSlots":1,"returnSlots":0},"abi_encode_t_stringliteral_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203_to_t_string_memory_ptr_fromStack":{"entryPoint":19787,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_74583bf40366140cdb71804e6d6a5f1c545237cd76be6536d0470668ca3d44de_to_t_string_memory_ptr_fromStack":{"entryPoint":17067,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7800ecc545656055dd459b5ea70d2d0ec79bc697c86eb523259a8e50e1652be1_to_t_bytes23_nonPadded_inplace_fromStack":{"entryPoint":21366,"id":null,"parameterSlots":1,"returnSlots":0},"abi_encode_t_stringliteral_8f993d0eb2917936c12e6dfe50ccae82441180c058725aefd59bda83d15f9162_to_t_string_memory_ptr_fromStack":{"entryPoint":18511,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_926f9055e8483a0dd91587bf3472e05d3bc4576e61997b1970b39355b74b26b9_to_t_string_memory_ptr_fromStack":{"entryPoint":20475,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9b3c2aed77e6e5e9253661cda300b247ee1688a664acf8b203ce47f5f70124ba_to_t_string_memory_ptr_fromStack":{"entryPoint":20259,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c78e2f0190d9b2a72f3ca17298f686a31c20707bc8e3a5b02a40c96e4fee0189_to_t_bytes24_nonPadded_inplace_fromStack":{"entryPoint":21518,"id":null,"parameterSlots":1,"returnSlots":0},"abi_encode_t_stringliteral_dfd89935418421718fe83b17eaba9a49f57ee5a18bf73312e2efbf630b9b1ee9_to_t_string_memory_ptr_fromStack":{"entryPoint":19947,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395_to_t_bytes5_nonPadded_inplace_fromStack":{"entryPoint":20542,"id":null,"parameterSlots":1,"returnSlots":0},"abi_encode_t_stringliteral_e68d5b0a431515bb993e37d573d3bb2f8d5976eef230433de8255ac6ddf6b3f2_to_t_string_memory_ptr_fromStack":{"entryPoint":17175,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Game_$3939_memory_ptr_to_t_struct$_Game_$3939_memory_ptr_fromStack":{"entryPoint":17924,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":17743,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":21168,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":21191,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage_t_stringliteral_514ea601867e3f587ad35939476f254258c9acad4a417792829c4ad92621b30a__to_t_string_memory_ptr_t_bytes24__nonPadded_inplace_fromStack_reversed":{"entryPoint":21480,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage_t_stringliteral_7800ecc545656055dd459b5ea70d2d0ec79bc697c86eb523259a8e50e1652be1__to_t_string_memory_ptr_t_bytes23__nonPadded_inplace_fromStack_reversed":{"entryPoint":21404,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage_t_stringliteral_c78e2f0190d9b2a72f3ca17298f686a31c20707bc8e3a5b02a40c96e4fee0189__to_t_string_memory_ptr_t_bytes24__nonPadded_inplace_fromStack_reversed":{"entryPoint":21556,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_0257a43edd2a7a85580801ec2f283037586509160ac0481da651693f3dcbda20_t_string_memory_ptr__to_t_bytes9_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":20716,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395_t_string_memory_ptr__to_t_bytes5_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":20640,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395_t_string_memory_ptr_t_stringliteral_6884c8765ed9c3ce28a01297f38e5acbb4b3ee59bf507abdb41f31b919ff7019__to_t_bytes5_t_string_memory_ptr_t_bytes4__nonPadded_inplace_fromStack_reversed":{"entryPoint":20792,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17473,"id":null,"parameterSlots":13,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ce2fea17e1bfdbc965b108c55d6405798514c890bf554156ecbcecd02288e9f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16956,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0e4887e76f7fcd61a28101e915f9bb1da012679974d91aac6a12226aa17e16f7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18654,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_11c0e650c89aa2a2bcc82172d574c83a55d46b332c6c5d528dd67e12fe46a726__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20968,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_48dc19631629da1b2346a32d98cbc4846a44ed7618f77c5c6a081ec8e4c25f61__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20186,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19714,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_619463c843b12538087273e01d1f541fd8442dd1bca0d59b893801731e06ef1d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20402,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19822,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_74583bf40366140cdb71804e6d6a5f1c545237cd76be6536d0470668ca3d44de__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17102,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8f993d0eb2917936c12e6dfe50ccae82441180c058725aefd59bda83d15f9162__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18546,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_926f9055e8483a0dd91587bf3472e05d3bc4576e61997b1970b39355b74b26b9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20510,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9b3c2aed77e6e5e9253661cda300b247ee1688a664acf8b203ce47f5f70124ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20294,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dfd89935418421718fe83b17eaba9a49f57ee5a18bf73312e2efbf630b9b1ee9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19982,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e68d5b0a431515bb993e37d573d3bb2f8d5976eef230433de8255ac6ddf6b3f2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17210,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Game_$3939_memory_ptr__to_t_struct$_Game_$3939_memory_ptr__fromStack_reversed":{"entryPoint":18436,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":19000,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":17346,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":17850,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":16863,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20580,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":18733,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":20061,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":21000,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":19854,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":19287,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":17790,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":17823,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":21115,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":17758,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":17247,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":19252,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":19142,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":19428,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":17357,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":19021,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":18951,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":19400,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":19132,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":18785,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":21125,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":21158,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":19370,"id":null,"parameterSlots":2,"returnSlots":1},"mod_t_uint256":{"entryPoint":21066,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x01":{"entryPoint":20845,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x11":{"entryPoint":18686,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":20014,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":18904,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":18857,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":19176,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":17242,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":17399,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":19037,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":19357,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":19228,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_0ce2fea17e1bfdbc965b108c55d6405798514c890bf554156ecbcecd02288e9f":{"entryPoint":16880,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0e4887e76f7fcd61a28101e915f9bb1da012679974d91aac6a12226aa17e16f7":{"entryPoint":18578,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_11c0e650c89aa2a2bcc82172d574c83a55d46b332c6c5d528dd67e12fe46a726":{"entryPoint":20892,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_48dc19631629da1b2346a32d98cbc4846a44ed7618f77c5c6a081ec8e4c25f61":{"entryPoint":20110,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa":{"entryPoint":19638,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_619463c843b12538087273e01d1f541fd8442dd1bca0d59b893801731e06ef1d":{"entryPoint":20326,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203":{"entryPoint":19746,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_74583bf40366140cdb71804e6d6a5f1c545237cd76be6536d0470668ca3d44de":{"entryPoint":16988,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8f993d0eb2917936c12e6dfe50ccae82441180c058725aefd59bda83d15f9162":{"entryPoint":18470,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_926f9055e8483a0dd91587bf3472e05d3bc4576e61997b1970b39355b74b26b9":{"entryPoint":20434,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9b3c2aed77e6e5e9253661cda300b247ee1688a664acf8b203ce47f5f70124ba":{"entryPoint":20218,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dfd89935418421718fe83b17eaba9a49f57ee5a18bf73312e2efbf630b9b1ee9":{"entryPoint":19906,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e68d5b0a431515bb993e37d573d3bb2f8d5976eef230433de8255ac6ddf6b3f2":{"entryPoint":17134,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":19050,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":19186,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":17257,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":19223,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:37660:6","statements":[{"body":{"nodeType":"YulBlock","src":"103:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"120:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"125:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"113:6:6"},"nodeType":"YulFunctionCall","src":"113:19:6"},"nodeType":"YulExpressionStatement","src":"113:19:6"},{"nodeType":"YulAssignment","src":"141:29:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"160:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"165:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"156:3:6"},"nodeType":"YulFunctionCall","src":"156:14:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"141:11:6"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"75:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"91:11:6","type":""}],"src":"7:169:6"},{"body":{"nodeType":"YulBlock","src":"288:55:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"310:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"318:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"306:3:6"},"nodeType":"YulFunctionCall","src":"306:14:6"},{"hexValue":"416464726573735f494e56","kind":"string","nodeType":"YulLiteral","src":"322:13:6","type":"","value":"Address_INV"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"299:6:6"},"nodeType":"YulFunctionCall","src":"299:37:6"},"nodeType":"YulExpressionStatement","src":"299:37:6"}]},"name":"store_literal_in_memory_0ce2fea17e1bfdbc965b108c55d6405798514c890bf554156ecbcecd02288e9f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"280:6:6","type":""}],"src":"182:161:6"},{"body":{"nodeType":"YulBlock","src":"495:220:6","statements":[{"nodeType":"YulAssignment","src":"505:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"571:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"576:2:6","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"512:58:6"},"nodeType":"YulFunctionCall","src":"512:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"505:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"677:3:6"}],"functionName":{"name":"store_literal_in_memory_0ce2fea17e1bfdbc965b108c55d6405798514c890bf554156ecbcecd02288e9f","nodeType":"YulIdentifier","src":"588:88:6"},"nodeType":"YulFunctionCall","src":"588:93:6"},"nodeType":"YulExpressionStatement","src":"588:93:6"},{"nodeType":"YulAssignment","src":"690:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"701:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"706:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"697:3:6"},"nodeType":"YulFunctionCall","src":"697:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"690:3:6"}]}]},"name":"abi_encode_t_stringliteral_0ce2fea17e1bfdbc965b108c55d6405798514c890bf554156ecbcecd02288e9f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"483:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"491:3:6","type":""}],"src":"349:366:6"},{"body":{"nodeType":"YulBlock","src":"892:248:6","statements":[{"nodeType":"YulAssignment","src":"902:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"914:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"925:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"910:3:6"},"nodeType":"YulFunctionCall","src":"910:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"902:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"949:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"960:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:6"},"nodeType":"YulFunctionCall","src":"945:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"968:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"974:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"964:3:6"},"nodeType":"YulFunctionCall","src":"964:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"938:6:6"},"nodeType":"YulFunctionCall","src":"938:47:6"},"nodeType":"YulExpressionStatement","src":"938:47:6"},{"nodeType":"YulAssignment","src":"994:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1128:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_0ce2fea17e1bfdbc965b108c55d6405798514c890bf554156ecbcecd02288e9f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1002:124:6"},"nodeType":"YulFunctionCall","src":"1002:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"994:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ce2fea17e1bfdbc965b108c55d6405798514c890bf554156ecbcecd02288e9f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"872:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"887:4:6","type":""}],"src":"721:419:6"},{"body":{"nodeType":"YulBlock","src":"1252:130:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1274:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1282:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1270:3:6"},"nodeType":"YulFunctionCall","src":"1270:14:6"},{"hexValue":"506c65617365207573652053746172744e657747616d652046756e6374696f6e","kind":"string","nodeType":"YulLiteral","src":"1286:34:6","type":"","value":"Please use StartNewGame Function"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1263:6:6"},"nodeType":"YulFunctionCall","src":"1263:58:6"},"nodeType":"YulExpressionStatement","src":"1263:58:6"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1342:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1350:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:6"},"nodeType":"YulFunctionCall","src":"1338:15:6"},{"hexValue":"20746f2070617920636f6e74726163742e","kind":"string","nodeType":"YulLiteral","src":"1355:19:6","type":"","value":" to pay contract."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1331:6:6"},"nodeType":"YulFunctionCall","src":"1331:44:6"},"nodeType":"YulExpressionStatement","src":"1331:44:6"}]},"name":"store_literal_in_memory_74583bf40366140cdb71804e6d6a5f1c545237cd76be6536d0470668ca3d44de","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1244:6:6","type":""}],"src":"1146:236:6"},{"body":{"nodeType":"YulBlock","src":"1534:220:6","statements":[{"nodeType":"YulAssignment","src":"1544:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1610:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"1615:2:6","type":"","value":"49"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1551:58:6"},"nodeType":"YulFunctionCall","src":"1551:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1544:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1716:3:6"}],"functionName":{"name":"store_literal_in_memory_74583bf40366140cdb71804e6d6a5f1c545237cd76be6536d0470668ca3d44de","nodeType":"YulIdentifier","src":"1627:88:6"},"nodeType":"YulFunctionCall","src":"1627:93:6"},"nodeType":"YulExpressionStatement","src":"1627:93:6"},{"nodeType":"YulAssignment","src":"1729:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1740:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"1745:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1736:3:6"},"nodeType":"YulFunctionCall","src":"1736:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1729:3:6"}]}]},"name":"abi_encode_t_stringliteral_74583bf40366140cdb71804e6d6a5f1c545237cd76be6536d0470668ca3d44de_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1522:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1530:3:6","type":""}],"src":"1388:366:6"},{"body":{"nodeType":"YulBlock","src":"1931:248:6","statements":[{"nodeType":"YulAssignment","src":"1941:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1953:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1964:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1949:3:6"},"nodeType":"YulFunctionCall","src":"1949:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1941:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1988:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1999:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1984:3:6"},"nodeType":"YulFunctionCall","src":"1984:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2007:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"2013:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2003:3:6"},"nodeType":"YulFunctionCall","src":"2003:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1977:6:6"},"nodeType":"YulFunctionCall","src":"1977:47:6"},"nodeType":"YulExpressionStatement","src":"1977:47:6"},{"nodeType":"YulAssignment","src":"2033:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2167:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_74583bf40366140cdb71804e6d6a5f1c545237cd76be6536d0470668ca3d44de_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2041:124:6"},"nodeType":"YulFunctionCall","src":"2041:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2033:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_74583bf40366140cdb71804e6d6a5f1c545237cd76be6536d0470668ca3d44de__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1911:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1926:4:6","type":""}],"src":"1760:419:6"},{"body":{"nodeType":"YulBlock","src":"2291:57:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2313:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"2321:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2309:3:6"},"nodeType":"YulFunctionCall","src":"2309:14:6"},{"hexValue":"46756e6374696f6e5f444e452e","kind":"string","nodeType":"YulLiteral","src":"2325:15:6","type":"","value":"Function_DNE."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2302:6:6"},"nodeType":"YulFunctionCall","src":"2302:39:6"},"nodeType":"YulExpressionStatement","src":"2302:39:6"}]},"name":"store_literal_in_memory_e68d5b0a431515bb993e37d573d3bb2f8d5976eef230433de8255ac6ddf6b3f2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2283:6:6","type":""}],"src":"2185:163:6"},{"body":{"nodeType":"YulBlock","src":"2500:220:6","statements":[{"nodeType":"YulAssignment","src":"2510:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2576:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"2581:2:6","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2517:58:6"},"nodeType":"YulFunctionCall","src":"2517:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2682:3:6"}],"functionName":{"name":"store_literal_in_memory_e68d5b0a431515bb993e37d573d3bb2f8d5976eef230433de8255ac6ddf6b3f2","nodeType":"YulIdentifier","src":"2593:88:6"},"nodeType":"YulFunctionCall","src":"2593:93:6"},"nodeType":"YulExpressionStatement","src":"2593:93:6"},{"nodeType":"YulAssignment","src":"2695:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2706:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"2711:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2702:3:6"},"nodeType":"YulFunctionCall","src":"2702:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2695:3:6"}]}]},"name":"abi_encode_t_stringliteral_e68d5b0a431515bb993e37d573d3bb2f8d5976eef230433de8255ac6ddf6b3f2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2488:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2496:3:6","type":""}],"src":"2354:366:6"},{"body":{"nodeType":"YulBlock","src":"2897:248:6","statements":[{"nodeType":"YulAssignment","src":"2907:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2919:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2930:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2915:3:6"},"nodeType":"YulFunctionCall","src":"2915:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2907:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2954:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2965:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2950:3:6"},"nodeType":"YulFunctionCall","src":"2950:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2973:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"2979:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2969:3:6"},"nodeType":"YulFunctionCall","src":"2969:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2943:6:6"},"nodeType":"YulFunctionCall","src":"2943:47:6"},"nodeType":"YulExpressionStatement","src":"2943:47:6"},{"nodeType":"YulAssignment","src":"2999:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3133:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_e68d5b0a431515bb993e37d573d3bb2f8d5976eef230433de8255ac6ddf6b3f2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3007:124:6"},"nodeType":"YulFunctionCall","src":"3007:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2999:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_e68d5b0a431515bb993e37d573d3bb2f8d5976eef230433de8255ac6ddf6b3f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2877:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2892:4:6","type":""}],"src":"2726:419:6"},{"body":{"nodeType":"YulBlock","src":"3191:35:6","statements":[{"nodeType":"YulAssignment","src":"3201:19:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3217:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3211:5:6"},"nodeType":"YulFunctionCall","src":"3211:9:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3201:6:6"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3184:6:6","type":""}],"src":"3151:75:6"},{"body":{"nodeType":"YulBlock","src":"3321:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3338:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3341:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3331:6:6"},"nodeType":"YulFunctionCall","src":"3331:12:6"},"nodeType":"YulExpressionStatement","src":"3331:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"3232:117:6"},{"body":{"nodeType":"YulBlock","src":"3444:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3461:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3464:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3454:6:6"},"nodeType":"YulFunctionCall","src":"3454:12:6"},"nodeType":"YulExpressionStatement","src":"3454:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"3355:117:6"},{"body":{"nodeType":"YulBlock","src":"3523:32:6","statements":[{"nodeType":"YulAssignment","src":"3533:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"3544:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3533:7:6"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3505:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3515:7:6","type":""}],"src":"3478:77:6"},{"body":{"nodeType":"YulBlock","src":"3604:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"3661:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3670:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3673:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3663:6:6"},"nodeType":"YulFunctionCall","src":"3663:12:6"},"nodeType":"YulExpressionStatement","src":"3663:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3627:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3652:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3634:17:6"},"nodeType":"YulFunctionCall","src":"3634:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3624:2:6"},"nodeType":"YulFunctionCall","src":"3624:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3617:6:6"},"nodeType":"YulFunctionCall","src":"3617:43:6"},"nodeType":"YulIf","src":"3614:63:6"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3597:5:6","type":""}],"src":"3561:122:6"},{"body":{"nodeType":"YulBlock","src":"3741:87:6","statements":[{"nodeType":"YulAssignment","src":"3751:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3773:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3760:12:6"},"nodeType":"YulFunctionCall","src":"3760:20:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3751:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3816:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3789:26:6"},"nodeType":"YulFunctionCall","src":"3789:33:6"},"nodeType":"YulExpressionStatement","src":"3789:33:6"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3719:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"3727:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3735:5:6","type":""}],"src":"3689:139:6"},{"body":{"nodeType":"YulBlock","src":"3900:263:6","statements":[{"body":{"nodeType":"YulBlock","src":"3946:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3948:77:6"},"nodeType":"YulFunctionCall","src":"3948:79:6"},"nodeType":"YulExpressionStatement","src":"3948:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3921:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"3930:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3917:3:6"},"nodeType":"YulFunctionCall","src":"3917:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"3942:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3913:3:6"},"nodeType":"YulFunctionCall","src":"3913:32:6"},"nodeType":"YulIf","src":"3910:119:6"},{"nodeType":"YulBlock","src":"4039:117:6","statements":[{"nodeType":"YulVariableDeclaration","src":"4054:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"4068:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4058:6:6","type":""}]},{"nodeType":"YulAssignment","src":"4083:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4118:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"4129:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4114:3:6"},"nodeType":"YulFunctionCall","src":"4114:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4138:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4093:20:6"},"nodeType":"YulFunctionCall","src":"4093:53:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4083:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3870:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3881:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3893:6:6","type":""}],"src":"3834:329:6"},{"body":{"nodeType":"YulBlock","src":"4228:40:6","statements":[{"nodeType":"YulAssignment","src":"4239:22:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4255:5:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4249:5:6"},"nodeType":"YulFunctionCall","src":"4249:12:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4239:6:6"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4211:5:6","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4221:6:6","type":""}],"src":"4169:99:6"},{"body":{"nodeType":"YulBlock","src":"4336:184:6","statements":[{"nodeType":"YulVariableDeclaration","src":"4346:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"4355:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4350:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"4415:63:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4440:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"4445:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4436:3:6"},"nodeType":"YulFunctionCall","src":"4436:11:6"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4459:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"4464:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4455:3:6"},"nodeType":"YulFunctionCall","src":"4455:11:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4449:5:6"},"nodeType":"YulFunctionCall","src":"4449:18:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4429:6:6"},"nodeType":"YulFunctionCall","src":"4429:39:6"},"nodeType":"YulExpressionStatement","src":"4429:39:6"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4376:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"4379:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4373:2:6"},"nodeType":"YulFunctionCall","src":"4373:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4387:19:6","statements":[{"nodeType":"YulAssignment","src":"4389:15:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4398:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"4401:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4394:3:6"},"nodeType":"YulFunctionCall","src":"4394:10:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4389:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"4369:3:6","statements":[]},"src":"4365:113:6"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4498:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"4503:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4494:3:6"},"nodeType":"YulFunctionCall","src":"4494:16:6"},{"kind":"number","nodeType":"YulLiteral","src":"4512:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4487:6:6"},"nodeType":"YulFunctionCall","src":"4487:27:6"},"nodeType":"YulExpressionStatement","src":"4487:27:6"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4318:3:6","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4323:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"4328:6:6","type":""}],"src":"4274:246:6"},{"body":{"nodeType":"YulBlock","src":"4574:54:6","statements":[{"nodeType":"YulAssignment","src":"4584:38:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4602:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"4609:2:6","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4598:3:6"},"nodeType":"YulFunctionCall","src":"4598:14:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4618:2:6","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4614:3:6"},"nodeType":"YulFunctionCall","src":"4614:7:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4594:3:6"},"nodeType":"YulFunctionCall","src":"4594:28:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4584:6:6"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4557:5:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4567:6:6","type":""}],"src":"4526:102:6"},{"body":{"nodeType":"YulBlock","src":"4726:285:6","statements":[{"nodeType":"YulVariableDeclaration","src":"4736:53:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4783:5:6"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4750:32:6"},"nodeType":"YulFunctionCall","src":"4750:39:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4740:6:6","type":""}]},{"nodeType":"YulAssignment","src":"4798:78:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4864:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"4869:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4805:58:6"},"nodeType":"YulFunctionCall","src":"4805:71:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4798:3:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4924:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"4931:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4920:3:6"},"nodeType":"YulFunctionCall","src":"4920:16:6"},{"name":"pos","nodeType":"YulIdentifier","src":"4938:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"4943:6:6"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4885:34:6"},"nodeType":"YulFunctionCall","src":"4885:65:6"},"nodeType":"YulExpressionStatement","src":"4885:65:6"},{"nodeType":"YulAssignment","src":"4959:46:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4970:3:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4997:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4975:21:6"},"nodeType":"YulFunctionCall","src":"4975:29:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4966:3:6"},"nodeType":"YulFunctionCall","src":"4966:39:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4959:3:6"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4707:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4714:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4722:3:6","type":""}],"src":"4634:377:6"},{"body":{"nodeType":"YulBlock","src":"5665:1889:6","statements":[{"nodeType":"YulAssignment","src":"5675:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5687:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5698:3:6","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5683:3:6"},"nodeType":"YulFunctionCall","src":"5683:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5675:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5723:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5734:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5719:3:6"},"nodeType":"YulFunctionCall","src":"5719:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5742:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"5748:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5738:3:6"},"nodeType":"YulFunctionCall","src":"5738:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5712:6:6"},"nodeType":"YulFunctionCall","src":"5712:47:6"},"nodeType":"YulExpressionStatement","src":"5712:47:6"},{"nodeType":"YulAssignment","src":"5768:86:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5840:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"5849:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5776:63:6"},"nodeType":"YulFunctionCall","src":"5776:78:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5768:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5875:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5886:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5871:3:6"},"nodeType":"YulFunctionCall","src":"5871:18:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5895:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"5901:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5891:3:6"},"nodeType":"YulFunctionCall","src":"5891:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5864:6:6"},"nodeType":"YulFunctionCall","src":"5864:48:6"},"nodeType":"YulExpressionStatement","src":"5864:48:6"},{"nodeType":"YulAssignment","src":"5921:86:6","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5993:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"6002:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5929:63:6"},"nodeType":"YulFunctionCall","src":"5929:78:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5921:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6028:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6039:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6024:3:6"},"nodeType":"YulFunctionCall","src":"6024:18:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6048:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"6054:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6044:3:6"},"nodeType":"YulFunctionCall","src":"6044:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6017:6:6"},"nodeType":"YulFunctionCall","src":"6017:48:6"},"nodeType":"YulExpressionStatement","src":"6017:48:6"},{"nodeType":"YulAssignment","src":"6074:86:6","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6146:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"6155:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6082:63:6"},"nodeType":"YulFunctionCall","src":"6082:78:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6074:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6181:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6192:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6177:3:6"},"nodeType":"YulFunctionCall","src":"6177:18:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6201:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"6207:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6197:3:6"},"nodeType":"YulFunctionCall","src":"6197:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6170:6:6"},"nodeType":"YulFunctionCall","src":"6170:48:6"},"nodeType":"YulExpressionStatement","src":"6170:48:6"},{"nodeType":"YulAssignment","src":"6227:86:6","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"6299:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"6308:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6235:63:6"},"nodeType":"YulFunctionCall","src":"6235:78:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6227:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6334:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6345:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6330:3:6"},"nodeType":"YulFunctionCall","src":"6330:19:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6355:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"6361:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6351:3:6"},"nodeType":"YulFunctionCall","src":"6351:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6323:6:6"},"nodeType":"YulFunctionCall","src":"6323:49:6"},"nodeType":"YulExpressionStatement","src":"6323:49:6"},{"nodeType":"YulAssignment","src":"6381:86:6","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"6453:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"6462:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6389:63:6"},"nodeType":"YulFunctionCall","src":"6389:78:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6381:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6488:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6499:3:6","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6484:3:6"},"nodeType":"YulFunctionCall","src":"6484:19:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6509:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"6515:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6505:3:6"},"nodeType":"YulFunctionCall","src":"6505:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6477:6:6"},"nodeType":"YulFunctionCall","src":"6477:49:6"},"nodeType":"YulExpressionStatement","src":"6477:49:6"},{"nodeType":"YulAssignment","src":"6535:86:6","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"6607:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"6616:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6543:63:6"},"nodeType":"YulFunctionCall","src":"6543:78:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6535:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6642:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6653:3:6","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6638:3:6"},"nodeType":"YulFunctionCall","src":"6638:19:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6663:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"6669:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6659:3:6"},"nodeType":"YulFunctionCall","src":"6659:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6631:6:6"},"nodeType":"YulFunctionCall","src":"6631:49:6"},"nodeType":"YulExpressionStatement","src":"6631:49:6"},{"nodeType":"YulAssignment","src":"6689:86:6","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"6761:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"6770:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6697:63:6"},"nodeType":"YulFunctionCall","src":"6697:78:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6689:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6796:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6807:3:6","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6792:3:6"},"nodeType":"YulFunctionCall","src":"6792:19:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6817:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"6823:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6813:3:6"},"nodeType":"YulFunctionCall","src":"6813:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6785:6:6"},"nodeType":"YulFunctionCall","src":"6785:49:6"},"nodeType":"YulExpressionStatement","src":"6785:49:6"},{"nodeType":"YulAssignment","src":"6843:86:6","value":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"6915:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"6924:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6851:63:6"},"nodeType":"YulFunctionCall","src":"6851:78:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6843:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6950:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6961:3:6","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6946:3:6"},"nodeType":"YulFunctionCall","src":"6946:19:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6971:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"6977:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6967:3:6"},"nodeType":"YulFunctionCall","src":"6967:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6939:6:6"},"nodeType":"YulFunctionCall","src":"6939:49:6"},"nodeType":"YulExpressionStatement","src":"6939:49:6"},{"nodeType":"YulAssignment","src":"6997:86:6","value":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"7069:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"7078:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7005:63:6"},"nodeType":"YulFunctionCall","src":"7005:78:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6997:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7104:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7115:3:6","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7100:3:6"},"nodeType":"YulFunctionCall","src":"7100:19:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7125:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"7131:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7121:3:6"},"nodeType":"YulFunctionCall","src":"7121:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7093:6:6"},"nodeType":"YulFunctionCall","src":"7093:49:6"},"nodeType":"YulExpressionStatement","src":"7093:49:6"},{"nodeType":"YulAssignment","src":"7151:86:6","value":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"7223:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"7232:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7159:63:6"},"nodeType":"YulFunctionCall","src":"7159:78:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7151:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7258:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7269:3:6","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7254:3:6"},"nodeType":"YulFunctionCall","src":"7254:19:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7279:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"7285:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7275:3:6"},"nodeType":"YulFunctionCall","src":"7275:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7247:6:6"},"nodeType":"YulFunctionCall","src":"7247:49:6"},"nodeType":"YulExpressionStatement","src":"7247:49:6"},{"nodeType":"YulAssignment","src":"7305:87:6","value":{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"7377:7:6"},{"name":"tail","nodeType":"YulIdentifier","src":"7387:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7313:63:6"},"nodeType":"YulFunctionCall","src":"7313:79:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7305:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7413:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7424:3:6","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7409:3:6"},"nodeType":"YulFunctionCall","src":"7409:19:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7434:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"7440:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7430:3:6"},"nodeType":"YulFunctionCall","src":"7430:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7402:6:6"},"nodeType":"YulFunctionCall","src":"7402:49:6"},"nodeType":"YulExpressionStatement","src":"7402:49:6"},{"nodeType":"YulAssignment","src":"7460:87:6","value":{"arguments":[{"name":"value11","nodeType":"YulIdentifier","src":"7532:7:6"},{"name":"tail","nodeType":"YulIdentifier","src":"7542:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7468:63:6"},"nodeType":"YulFunctionCall","src":"7468:79:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7460:4:6"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5547:9:6","type":""},{"name":"value11","nodeType":"YulTypedName","src":"5559:7:6","type":""},{"name":"value10","nodeType":"YulTypedName","src":"5568:7:6","type":""},{"name":"value9","nodeType":"YulTypedName","src":"5577:6:6","type":""},{"name":"value8","nodeType":"YulTypedName","src":"5585:6:6","type":""},{"name":"value7","nodeType":"YulTypedName","src":"5593:6:6","type":""},{"name":"value6","nodeType":"YulTypedName","src":"5601:6:6","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5609:6:6","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5617:6:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5625:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5633:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5641:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5649:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5660:4:6","type":""}],"src":"5017:2537:6"},{"body":{"nodeType":"YulBlock","src":"7615:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7632:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7655:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7637:17:6"},"nodeType":"YulFunctionCall","src":"7637:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7625:6:6"},"nodeType":"YulFunctionCall","src":"7625:37:6"},"nodeType":"YulExpressionStatement","src":"7625:37:6"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7603:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7610:3:6","type":""}],"src":"7560:108:6"},{"body":{"nodeType":"YulBlock","src":"7719:81:6","statements":[{"nodeType":"YulAssignment","src":"7729:65:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7744:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"7751:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7740:3:6"},"nodeType":"YulFunctionCall","src":"7740:54:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7729:7:6"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7701:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7711:7:6","type":""}],"src":"7674:126:6"},{"body":{"nodeType":"YulBlock","src":"7851:51:6","statements":[{"nodeType":"YulAssignment","src":"7861:35:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7890:5:6"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7872:17:6"},"nodeType":"YulFunctionCall","src":"7872:24:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7861:7:6"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7833:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7843:7:6","type":""}],"src":"7806:96:6"},{"body":{"nodeType":"YulBlock","src":"7963:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7980:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8003:5:6"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7985:17:6"},"nodeType":"YulFunctionCall","src":"7985:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7973:6:6"},"nodeType":"YulFunctionCall","src":"7973:37:6"},"nodeType":"YulExpressionStatement","src":"7973:37:6"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7951:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7958:3:6","type":""}],"src":"7908:108:6"},{"body":{"nodeType":"YulBlock","src":"8064:48:6","statements":[{"nodeType":"YulAssignment","src":"8074:32:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8099:5:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8092:6:6"},"nodeType":"YulFunctionCall","src":"8092:13:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8085:6:6"},"nodeType":"YulFunctionCall","src":"8085:21:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8074:7:6"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8046:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8056:7:6","type":""}],"src":"8022:90:6"},{"body":{"nodeType":"YulBlock","src":"8167:50:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8184:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8204:5:6"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"8189:14:6"},"nodeType":"YulFunctionCall","src":"8189:21:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8177:6:6"},"nodeType":"YulFunctionCall","src":"8177:34:6"},"nodeType":"YulExpressionStatement","src":"8177:34:6"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8155:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8162:3:6","type":""}],"src":"8118:99:6"},{"body":{"nodeType":"YulBlock","src":"8309:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8326:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"8331:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8319:6:6"},"nodeType":"YulFunctionCall","src":"8319:19:6"},"nodeType":"YulExpressionStatement","src":"8319:19:6"},{"nodeType":"YulAssignment","src":"8347:29:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8366:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"8371:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8362:3:6"},"nodeType":"YulFunctionCall","src":"8362:14:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8347:11:6"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8281:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"8286:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8297:11:6","type":""}],"src":"8223:159:6"},{"body":{"nodeType":"YulBlock","src":"8470:275:6","statements":[{"nodeType":"YulVariableDeclaration","src":"8480:53:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8527:5:6"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8494:32:6"},"nodeType":"YulFunctionCall","src":"8494:39:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8484:6:6","type":""}]},{"nodeType":"YulAssignment","src":"8542:68:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8598:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"8603:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8549:48:6"},"nodeType":"YulFunctionCall","src":"8549:61:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8542:3:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8658:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"8665:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8654:3:6"},"nodeType":"YulFunctionCall","src":"8654:16:6"},{"name":"pos","nodeType":"YulIdentifier","src":"8672:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"8677:6:6"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8619:34:6"},"nodeType":"YulFunctionCall","src":"8619:65:6"},"nodeType":"YulExpressionStatement","src":"8619:65:6"},{"nodeType":"YulAssignment","src":"8693:46:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8704:3:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8731:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8709:21:6"},"nodeType":"YulFunctionCall","src":"8709:29:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8700:3:6"},"nodeType":"YulFunctionCall","src":"8700:39:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8693:3:6"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8451:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8458:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8466:3:6","type":""}],"src":"8388:357:6"},{"body":{"nodeType":"YulBlock","src":"8923:4515:6","statements":[{"nodeType":"YulVariableDeclaration","src":"8933:28:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8949:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"8954:6:6","type":"","value":"0x0300"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8945:3:6"},"nodeType":"YulFunctionCall","src":"8945:16:6"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"8937:4:6","type":""}]},{"nodeType":"YulBlock","src":"8971:162:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9004:43:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9034:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"9041:4:6","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9030:3:6"},"nodeType":"YulFunctionCall","src":"9030:16:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9024:5:6"},"nodeType":"YulFunctionCall","src":"9024:23:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9008:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9094:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9112:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"9117:4:6","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9108:3:6"},"nodeType":"YulFunctionCall","src":"9108:14:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9060:33:6"},"nodeType":"YulFunctionCall","src":"9060:63:6"},"nodeType":"YulExpressionStatement","src":"9060:63:6"}]},{"nodeType":"YulBlock","src":"9143:166:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9180:43:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9210:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"9217:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9206:3:6"},"nodeType":"YulFunctionCall","src":"9206:16:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9200:5:6"},"nodeType":"YulFunctionCall","src":"9200:23:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9184:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9270:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9288:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"9293:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9284:3:6"},"nodeType":"YulFunctionCall","src":"9284:14:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"9236:33:6"},"nodeType":"YulFunctionCall","src":"9236:63:6"},"nodeType":"YulExpressionStatement","src":"9236:63:6"}]},{"nodeType":"YulBlock","src":"9319:171:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9361:43:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9391:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"9398:4:6","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9387:3:6"},"nodeType":"YulFunctionCall","src":"9387:16:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9381:5:6"},"nodeType":"YulFunctionCall","src":"9381:23:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9365:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9451:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9469:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"9474:4:6","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9465:3:6"},"nodeType":"YulFunctionCall","src":"9465:14:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9417:33:6"},"nodeType":"YulFunctionCall","src":"9417:63:6"},"nodeType":"YulExpressionStatement","src":"9417:63:6"}]},{"nodeType":"YulBlock","src":"9500:175:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9546:43:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9576:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"9583:4:6","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9572:3:6"},"nodeType":"YulFunctionCall","src":"9572:16:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9566:5:6"},"nodeType":"YulFunctionCall","src":"9566:23:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9550:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9636:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9654:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"9659:4:6","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9650:3:6"},"nodeType":"YulFunctionCall","src":"9650:14:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9602:33:6"},"nodeType":"YulFunctionCall","src":"9602:63:6"},"nodeType":"YulExpressionStatement","src":"9602:63:6"}]},{"nodeType":"YulBlock","src":"9685:172:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9728:43:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9758:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"9765:4:6","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9754:3:6"},"nodeType":"YulFunctionCall","src":"9754:16:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9748:5:6"},"nodeType":"YulFunctionCall","src":"9748:23:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9732:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9818:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9836:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"9841:4:6","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9832:3:6"},"nodeType":"YulFunctionCall","src":"9832:14:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9784:33:6"},"nodeType":"YulFunctionCall","src":"9784:63:6"},"nodeType":"YulExpressionStatement","src":"9784:63:6"}]},{"nodeType":"YulBlock","src":"9867:171:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9909:43:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9939:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"9946:4:6","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9935:3:6"},"nodeType":"YulFunctionCall","src":"9935:16:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9929:5:6"},"nodeType":"YulFunctionCall","src":"9929:23:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9913:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9999:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10017:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"10022:4:6","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10013:3:6"},"nodeType":"YulFunctionCall","src":"10013:14:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9965:33:6"},"nodeType":"YulFunctionCall","src":"9965:63:6"},"nodeType":"YulExpressionStatement","src":"9965:63:6"}]},{"nodeType":"YulBlock","src":"10048:169:6","statements":[{"nodeType":"YulVariableDeclaration","src":"10088:43:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10118:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"10125:4:6","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10114:3:6"},"nodeType":"YulFunctionCall","src":"10114:16:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10108:5:6"},"nodeType":"YulFunctionCall","src":"10108:23:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10092:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10178:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10196:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"10201:4:6","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10192:3:6"},"nodeType":"YulFunctionCall","src":"10192:14:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10144:33:6"},"nodeType":"YulFunctionCall","src":"10144:63:6"},"nodeType":"YulExpressionStatement","src":"10144:63:6"}]},{"nodeType":"YulBlock","src":"10227:172:6","statements":[{"nodeType":"YulVariableDeclaration","src":"10270:43:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10300:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"10307:4:6","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10296:3:6"},"nodeType":"YulFunctionCall","src":"10296:16:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10290:5:6"},"nodeType":"YulFunctionCall","src":"10290:23:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10274:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10360:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10378:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"10383:4:6","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10374:3:6"},"nodeType":"YulFunctionCall","src":"10374:14:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10326:33:6"},"nodeType":"YulFunctionCall","src":"10326:63:6"},"nodeType":"YulExpressionStatement","src":"10326:63:6"}]},{"nodeType":"YulBlock","src":"10409:175:6","statements":[{"nodeType":"YulVariableDeclaration","src":"10451:45:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10481:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"10488:6:6","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10477:3:6"},"nodeType":"YulFunctionCall","src":"10477:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10471:5:6"},"nodeType":"YulFunctionCall","src":"10471:25:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10455:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10543:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10561:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"10566:6:6","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10557:3:6"},"nodeType":"YulFunctionCall","src":"10557:16:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10509:33:6"},"nodeType":"YulFunctionCall","src":"10509:65:6"},"nodeType":"YulExpressionStatement","src":"10509:65:6"}]},{"nodeType":"YulBlock","src":"10594:175:6","statements":[{"nodeType":"YulVariableDeclaration","src":"10636:45:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10666:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"10673:6:6","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10662:3:6"},"nodeType":"YulFunctionCall","src":"10662:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10656:5:6"},"nodeType":"YulFunctionCall","src":"10656:25:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10640:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10728:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10746:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"10751:6:6","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10742:3:6"},"nodeType":"YulFunctionCall","src":"10742:16:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10694:33:6"},"nodeType":"YulFunctionCall","src":"10694:65:6"},"nodeType":"YulExpressionStatement","src":"10694:65:6"}]},{"nodeType":"YulBlock","src":"10779:177:6","statements":[{"nodeType":"YulVariableDeclaration","src":"10823:45:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10853:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"10860:6:6","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10849:3:6"},"nodeType":"YulFunctionCall","src":"10849:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10843:5:6"},"nodeType":"YulFunctionCall","src":"10843:25:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10827:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10915:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10933:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"10938:6:6","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10929:3:6"},"nodeType":"YulFunctionCall","src":"10929:16:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10881:33:6"},"nodeType":"YulFunctionCall","src":"10881:65:6"},"nodeType":"YulExpressionStatement","src":"10881:65:6"}]},{"nodeType":"YulBlock","src":"10966:179:6","statements":[{"nodeType":"YulVariableDeclaration","src":"11012:45:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11042:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"11049:6:6","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11038:3:6"},"nodeType":"YulFunctionCall","src":"11038:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11032:5:6"},"nodeType":"YulFunctionCall","src":"11032:25:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11016:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11104:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11122:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"11127:6:6","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11118:3:6"},"nodeType":"YulFunctionCall","src":"11118:16:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11070:33:6"},"nodeType":"YulFunctionCall","src":"11070:65:6"},"nodeType":"YulExpressionStatement","src":"11070:65:6"}]},{"nodeType":"YulBlock","src":"11155:180:6","statements":[{"nodeType":"YulVariableDeclaration","src":"11202:45:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11232:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"11239:6:6","type":"","value":"0x0180"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11228:3:6"},"nodeType":"YulFunctionCall","src":"11228:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11222:5:6"},"nodeType":"YulFunctionCall","src":"11222:25:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11206:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11294:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11312:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"11317:6:6","type":"","value":"0x0180"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11308:3:6"},"nodeType":"YulFunctionCall","src":"11308:16:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11260:33:6"},"nodeType":"YulFunctionCall","src":"11260:65:6"},"nodeType":"YulExpressionStatement","src":"11260:65:6"}]},{"nodeType":"YulBlock","src":"11345:175:6","statements":[{"nodeType":"YulVariableDeclaration","src":"11387:45:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11417:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"11424:6:6","type":"","value":"0x01a0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:6"},"nodeType":"YulFunctionCall","src":"11413:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11407:5:6"},"nodeType":"YulFunctionCall","src":"11407:25:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11391:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11479:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11497:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"11502:6:6","type":"","value":"0x01a0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11493:3:6"},"nodeType":"YulFunctionCall","src":"11493:16:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11445:33:6"},"nodeType":"YulFunctionCall","src":"11445:65:6"},"nodeType":"YulExpressionStatement","src":"11445:65:6"}]},{"nodeType":"YulBlock","src":"11530:175:6","statements":[{"nodeType":"YulVariableDeclaration","src":"11572:45:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11602:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"11609:6:6","type":"","value":"0x01c0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11598:3:6"},"nodeType":"YulFunctionCall","src":"11598:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11592:5:6"},"nodeType":"YulFunctionCall","src":"11592:25:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11576:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11664:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11682:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"11687:6:6","type":"","value":"0x01c0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11678:3:6"},"nodeType":"YulFunctionCall","src":"11678:16:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11630:33:6"},"nodeType":"YulFunctionCall","src":"11630:65:6"},"nodeType":"YulExpressionStatement","src":"11630:65:6"}]},{"nodeType":"YulBlock","src":"11715:177:6","statements":[{"nodeType":"YulVariableDeclaration","src":"11759:45:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11789:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"11796:6:6","type":"","value":"0x01e0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11785:3:6"},"nodeType":"YulFunctionCall","src":"11785:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11779:5:6"},"nodeType":"YulFunctionCall","src":"11779:25:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11763:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11851:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11869:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"11874:6:6","type":"","value":"0x01e0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11865:3:6"},"nodeType":"YulFunctionCall","src":"11865:16:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11817:33:6"},"nodeType":"YulFunctionCall","src":"11817:65:6"},"nodeType":"YulExpressionStatement","src":"11817:65:6"}]},{"nodeType":"YulBlock","src":"11902:179:6","statements":[{"nodeType":"YulVariableDeclaration","src":"11948:45:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11978:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"11985:6:6","type":"","value":"0x0200"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11974:3:6"},"nodeType":"YulFunctionCall","src":"11974:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11968:5:6"},"nodeType":"YulFunctionCall","src":"11968:25:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11952:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12040:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12058:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"12063:6:6","type":"","value":"0x0200"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12054:3:6"},"nodeType":"YulFunctionCall","src":"12054:16:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12006:33:6"},"nodeType":"YulFunctionCall","src":"12006:65:6"},"nodeType":"YulExpressionStatement","src":"12006:65:6"}]},{"nodeType":"YulBlock","src":"12091:171:6","statements":[{"nodeType":"YulVariableDeclaration","src":"12135:45:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12165:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"12172:6:6","type":"","value":"0x0220"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12161:3:6"},"nodeType":"YulFunctionCall","src":"12161:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12155:5:6"},"nodeType":"YulFunctionCall","src":"12155:25:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12139:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12221:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12239:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"12244:6:6","type":"","value":"0x0220"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12235:3:6"},"nodeType":"YulFunctionCall","src":"12235:16:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"12193:27:6"},"nodeType":"YulFunctionCall","src":"12193:59:6"},"nodeType":"YulExpressionStatement","src":"12193:59:6"}]},{"nodeType":"YulBlock","src":"12272:167:6","statements":[{"nodeType":"YulVariableDeclaration","src":"12312:45:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12342:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"12349:6:6","type":"","value":"0x0240"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12338:3:6"},"nodeType":"YulFunctionCall","src":"12338:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12332:5:6"},"nodeType":"YulFunctionCall","src":"12332:25:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12316:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12398:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12416:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"12421:6:6","type":"","value":"0x0240"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12412:3:6"},"nodeType":"YulFunctionCall","src":"12412:16:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"12370:27:6"},"nodeType":"YulFunctionCall","src":"12370:59:6"},"nodeType":"YulExpressionStatement","src":"12370:59:6"}]},{"nodeType":"YulBlock","src":"12449:166:6","statements":[{"nodeType":"YulVariableDeclaration","src":"12488:45:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12518:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"12525:6:6","type":"","value":"0x0260"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12514:3:6"},"nodeType":"YulFunctionCall","src":"12514:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12508:5:6"},"nodeType":"YulFunctionCall","src":"12508:25:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12492:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12574:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12592:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"12597:6:6","type":"","value":"0x0260"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12588:3:6"},"nodeType":"YulFunctionCall","src":"12588:16:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"12546:27:6"},"nodeType":"YulFunctionCall","src":"12546:59:6"},"nodeType":"YulExpressionStatement","src":"12546:59:6"}]},{"nodeType":"YulBlock","src":"12625:169:6","statements":[{"nodeType":"YulVariableDeclaration","src":"12667:45:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12697:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"12704:6:6","type":"","value":"0x0280"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12693:3:6"},"nodeType":"YulFunctionCall","src":"12693:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12687:5:6"},"nodeType":"YulFunctionCall","src":"12687:25:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12671:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12753:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12771:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"12776:6:6","type":"","value":"0x0280"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12767:3:6"},"nodeType":"YulFunctionCall","src":"12767:16:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"12725:27:6"},"nodeType":"YulFunctionCall","src":"12725:59:6"},"nodeType":"YulExpressionStatement","src":"12725:59:6"}]},{"nodeType":"YulBlock","src":"12804:168:6","statements":[{"nodeType":"YulVariableDeclaration","src":"12845:45:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12875:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"12882:6:6","type":"","value":"0x02a0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12871:3:6"},"nodeType":"YulFunctionCall","src":"12871:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12865:5:6"},"nodeType":"YulFunctionCall","src":"12865:25:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12849:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12931:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12949:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"12954:6:6","type":"","value":"0x02a0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12945:3:6"},"nodeType":"YulFunctionCall","src":"12945:16:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"12903:27:6"},"nodeType":"YulFunctionCall","src":"12903:59:6"},"nodeType":"YulExpressionStatement","src":"12903:59:6"}]},{"nodeType":"YulBlock","src":"12982:175:6","statements":[{"nodeType":"YulVariableDeclaration","src":"13030:45:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13060:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"13067:6:6","type":"","value":"0x02c0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13056:3:6"},"nodeType":"YulFunctionCall","src":"13056:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13050:5:6"},"nodeType":"YulFunctionCall","src":"13050:25:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13034:12:6","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13116:12:6"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13134:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"13139:6:6","type":"","value":"0x02c0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13130:3:6"},"nodeType":"YulFunctionCall","src":"13130:16:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"13088:27:6"},"nodeType":"YulFunctionCall","src":"13088:59:6"},"nodeType":"YulExpressionStatement","src":"13088:59:6"}]},{"nodeType":"YulBlock","src":"13167:244:6","statements":[{"nodeType":"YulVariableDeclaration","src":"13207:45:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13237:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"13244:6:6","type":"","value":"0x02e0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13233:3:6"},"nodeType":"YulFunctionCall","src":"13233:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13227:5:6"},"nodeType":"YulFunctionCall","src":"13227:25:6"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13211:12:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13277:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"13282:6:6","type":"","value":"0x02e0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13273:3:6"},"nodeType":"YulFunctionCall","src":"13273:16:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13295:4:6"},{"name":"pos","nodeType":"YulIdentifier","src":"13301:3:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13291:3:6"},"nodeType":"YulFunctionCall","src":"13291:14:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13266:6:6"},"nodeType":"YulFunctionCall","src":"13266:40:6"},"nodeType":"YulExpressionStatement","src":"13266:40:6"},{"nodeType":"YulAssignment","src":"13319:81:6","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13381:12:6"},{"name":"tail","nodeType":"YulIdentifier","src":"13395:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13327:53:6"},"nodeType":"YulFunctionCall","src":"13327:73:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13319:4:6"}]}]},{"nodeType":"YulAssignment","src":"13421:11:6","value":{"name":"tail","nodeType":"YulIdentifier","src":"13428:4:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13421:3:6"}]}]},"name":"abi_encode_t_struct$_Game_$3939_memory_ptr_to_t_struct$_Game_$3939_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8902:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8909:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8918:3:6","type":""}],"src":"8805:4633:6"},{"body":{"nodeType":"YulBlock","src":"13586:219:6","statements":[{"nodeType":"YulAssignment","src":"13596:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13608:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"13619:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13604:3:6"},"nodeType":"YulFunctionCall","src":"13604:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13596:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13643:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"13654:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13639:3:6"},"nodeType":"YulFunctionCall","src":"13639:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13662:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"13668:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13658:3:6"},"nodeType":"YulFunctionCall","src":"13658:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13632:6:6"},"nodeType":"YulFunctionCall","src":"13632:47:6"},"nodeType":"YulExpressionStatement","src":"13632:47:6"},{"nodeType":"YulAssignment","src":"13688:110:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13784:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"13793:4:6"}],"functionName":{"name":"abi_encode_t_struct$_Game_$3939_memory_ptr_to_t_struct$_Game_$3939_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13696:87:6"},"nodeType":"YulFunctionCall","src":"13696:102:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13688:4:6"}]}]},"name":"abi_encode_tuple_t_struct$_Game_$3939_memory_ptr__to_t_struct$_Game_$3939_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13558:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13570:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13581:4:6","type":""}],"src":"13444:361:6"},{"body":{"nodeType":"YulBlock","src":"13917:62:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13939:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"13947:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13935:3:6"},"nodeType":"YulFunctionCall","src":"13935:14:6"},{"hexValue":"4578697374696e67506c617965725f434346","kind":"string","nodeType":"YulLiteral","src":"13951:20:6","type":"","value":"ExistingPlayer_CCF"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13928:6:6"},"nodeType":"YulFunctionCall","src":"13928:44:6"},"nodeType":"YulExpressionStatement","src":"13928:44:6"}]},"name":"store_literal_in_memory_8f993d0eb2917936c12e6dfe50ccae82441180c058725aefd59bda83d15f9162","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13909:6:6","type":""}],"src":"13811:168:6"},{"body":{"nodeType":"YulBlock","src":"14131:220:6","statements":[{"nodeType":"YulAssignment","src":"14141:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14207:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"14212:2:6","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14148:58:6"},"nodeType":"YulFunctionCall","src":"14148:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14141:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14313:3:6"}],"functionName":{"name":"store_literal_in_memory_8f993d0eb2917936c12e6dfe50ccae82441180c058725aefd59bda83d15f9162","nodeType":"YulIdentifier","src":"14224:88:6"},"nodeType":"YulFunctionCall","src":"14224:93:6"},"nodeType":"YulExpressionStatement","src":"14224:93:6"},{"nodeType":"YulAssignment","src":"14326:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14337:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"14342:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14333:3:6"},"nodeType":"YulFunctionCall","src":"14333:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14326:3:6"}]}]},"name":"abi_encode_t_stringliteral_8f993d0eb2917936c12e6dfe50ccae82441180c058725aefd59bda83d15f9162_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14119:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14127:3:6","type":""}],"src":"13985:366:6"},{"body":{"nodeType":"YulBlock","src":"14528:248:6","statements":[{"nodeType":"YulAssignment","src":"14538:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14550:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"14561:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14546:3:6"},"nodeType":"YulFunctionCall","src":"14546:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14538:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14585:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"14596:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14581:3:6"},"nodeType":"YulFunctionCall","src":"14581:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14604:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"14610:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14600:3:6"},"nodeType":"YulFunctionCall","src":"14600:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14574:6:6"},"nodeType":"YulFunctionCall","src":"14574:47:6"},"nodeType":"YulExpressionStatement","src":"14574:47:6"},{"nodeType":"YulAssignment","src":"14630:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14764:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_8f993d0eb2917936c12e6dfe50ccae82441180c058725aefd59bda83d15f9162_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14638:124:6"},"nodeType":"YulFunctionCall","src":"14638:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14630:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_8f993d0eb2917936c12e6dfe50ccae82441180c058725aefd59bda83d15f9162__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14508:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14523:4:6","type":""}],"src":"14357:419:6"},{"body":{"nodeType":"YulBlock","src":"14888:57:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14910:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"14918:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14906:3:6"},"nodeType":"YulFunctionCall","src":"14906:14:6"},{"hexValue":"4465706f7369745f4c696d6974","kind":"string","nodeType":"YulLiteral","src":"14922:15:6","type":"","value":"Deposit_Limit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14899:6:6"},"nodeType":"YulFunctionCall","src":"14899:39:6"},"nodeType":"YulExpressionStatement","src":"14899:39:6"}]},"name":"store_literal_in_memory_0e4887e76f7fcd61a28101e915f9bb1da012679974d91aac6a12226aa17e16f7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14880:6:6","type":""}],"src":"14782:163:6"},{"body":{"nodeType":"YulBlock","src":"15097:220:6","statements":[{"nodeType":"YulAssignment","src":"15107:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15173:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"15178:2:6","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15114:58:6"},"nodeType":"YulFunctionCall","src":"15114:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15107:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15279:3:6"}],"functionName":{"name":"store_literal_in_memory_0e4887e76f7fcd61a28101e915f9bb1da012679974d91aac6a12226aa17e16f7","nodeType":"YulIdentifier","src":"15190:88:6"},"nodeType":"YulFunctionCall","src":"15190:93:6"},"nodeType":"YulExpressionStatement","src":"15190:93:6"},{"nodeType":"YulAssignment","src":"15292:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15303:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"15308:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15299:3:6"},"nodeType":"YulFunctionCall","src":"15299:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15292:3:6"}]}]},"name":"abi_encode_t_stringliteral_0e4887e76f7fcd61a28101e915f9bb1da012679974d91aac6a12226aa17e16f7_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15085:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15093:3:6","type":""}],"src":"14951:366:6"},{"body":{"nodeType":"YulBlock","src":"15494:248:6","statements":[{"nodeType":"YulAssignment","src":"15504:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15516:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"15527:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15512:3:6"},"nodeType":"YulFunctionCall","src":"15512:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15504:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15551:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"15562:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15547:3:6"},"nodeType":"YulFunctionCall","src":"15547:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15570:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"15576:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15566:3:6"},"nodeType":"YulFunctionCall","src":"15566:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15540:6:6"},"nodeType":"YulFunctionCall","src":"15540:47:6"},"nodeType":"YulExpressionStatement","src":"15540:47:6"},{"nodeType":"YulAssignment","src":"15596:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15730:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_0e4887e76f7fcd61a28101e915f9bb1da012679974d91aac6a12226aa17e16f7_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15604:124:6"},"nodeType":"YulFunctionCall","src":"15604:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15596:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_0e4887e76f7fcd61a28101e915f9bb1da012679974d91aac6a12226aa17e16f7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15474:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15489:4:6","type":""}],"src":"15323:419:6"},{"body":{"nodeType":"YulBlock","src":"15776:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15793:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15796:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15786:6:6"},"nodeType":"YulFunctionCall","src":"15786:88:6"},"nodeType":"YulExpressionStatement","src":"15786:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15890:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15893:4:6","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15883:6:6"},"nodeType":"YulFunctionCall","src":"15883:15:6"},"nodeType":"YulExpressionStatement","src":"15883:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15914:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15917:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15907:6:6"},"nodeType":"YulFunctionCall","src":"15907:15:6"},"nodeType":"YulExpressionStatement","src":"15907:15:6"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"15748:180:6"},{"body":{"nodeType":"YulBlock","src":"15978:147:6","statements":[{"nodeType":"YulAssignment","src":"15988:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16011:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15993:17:6"},"nodeType":"YulFunctionCall","src":"15993:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15988:1:6"}]},{"nodeType":"YulAssignment","src":"16022:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16045:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16027:17:6"},"nodeType":"YulFunctionCall","src":"16027:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16022:1:6"}]},{"nodeType":"YulAssignment","src":"16056:16:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16067:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"16070:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16063:3:6"},"nodeType":"YulFunctionCall","src":"16063:9:6"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16056:3:6"}]},{"body":{"nodeType":"YulBlock","src":"16096:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16098:16:6"},"nodeType":"YulFunctionCall","src":"16098:18:6"},"nodeType":"YulExpressionStatement","src":"16098:18:6"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16088:1:6"},{"name":"sum","nodeType":"YulIdentifier","src":"16091:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16085:2:6"},"nodeType":"YulFunctionCall","src":"16085:10:6"},"nodeType":"YulIf","src":"16082:36:6"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15965:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"15968:1:6","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"15974:3:6","type":""}],"src":"15934:191:6"},{"body":{"nodeType":"YulBlock","src":"16174:190:6","statements":[{"nodeType":"YulAssignment","src":"16184:33:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16211:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16193:17:6"},"nodeType":"YulFunctionCall","src":"16193:24:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16184:5:6"}]},{"body":{"nodeType":"YulBlock","src":"16307:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16309:16:6"},"nodeType":"YulFunctionCall","src":"16309:18:6"},"nodeType":"YulExpressionStatement","src":"16309:18:6"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16232:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"16239:66:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16229:2:6"},"nodeType":"YulFunctionCall","src":"16229:77:6"},"nodeType":"YulIf","src":"16226:103:6"},{"nodeType":"YulAssignment","src":"16338:20:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16349:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"16356:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16345:3:6"},"nodeType":"YulFunctionCall","src":"16345:13:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"16338:3:6"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16160:5:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"16170:3:6","type":""}],"src":"16131:233:6"},{"body":{"nodeType":"YulBlock","src":"16398:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16415:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16418:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16408:6:6"},"nodeType":"YulFunctionCall","src":"16408:88:6"},"nodeType":"YulExpressionStatement","src":"16408:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16512:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16515:4:6","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16505:6:6"},"nodeType":"YulFunctionCall","src":"16505:15:6"},"nodeType":"YulExpressionStatement","src":"16505:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16536:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16539:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16529:6:6"},"nodeType":"YulFunctionCall","src":"16529:15:6"},"nodeType":"YulExpressionStatement","src":"16529:15:6"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"16370:180:6"},{"body":{"nodeType":"YulBlock","src":"16584:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16601:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16604:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16594:6:6"},"nodeType":"YulFunctionCall","src":"16594:88:6"},"nodeType":"YulExpressionStatement","src":"16594:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16698:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16701:4:6","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16691:6:6"},"nodeType":"YulFunctionCall","src":"16691:15:6"},"nodeType":"YulExpressionStatement","src":"16691:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16722:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16725:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16715:6:6"},"nodeType":"YulFunctionCall","src":"16715:15:6"},"nodeType":"YulExpressionStatement","src":"16715:15:6"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"16556:180:6"},{"body":{"nodeType":"YulBlock","src":"16793:269:6","statements":[{"nodeType":"YulAssignment","src":"16803:22:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16817:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"16823:1:6","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16813:3:6"},"nodeType":"YulFunctionCall","src":"16813:12:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16803:6:6"}]},{"nodeType":"YulVariableDeclaration","src":"16834:38:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16864:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"16870:1:6","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16860:3:6"},"nodeType":"YulFunctionCall","src":"16860:12:6"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"16838:18:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"16911:51:6","statements":[{"nodeType":"YulAssignment","src":"16925:27:6","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16939:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"16947:4:6","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16935:3:6"},"nodeType":"YulFunctionCall","src":"16935:17:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16925:6:6"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16891:18:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16884:6:6"},"nodeType":"YulFunctionCall","src":"16884:26:6"},"nodeType":"YulIf","src":"16881:81:6"},{"body":{"nodeType":"YulBlock","src":"17014:42:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"17028:16:6"},"nodeType":"YulFunctionCall","src":"17028:18:6"},"nodeType":"YulExpressionStatement","src":"17028:18:6"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16978:18:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17001:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"17009:2:6","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16998:2:6"},"nodeType":"YulFunctionCall","src":"16998:14:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16975:2:6"},"nodeType":"YulFunctionCall","src":"16975:38:6"},"nodeType":"YulIf","src":"16972:84:6"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"16777:4:6","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16786:6:6","type":""}],"src":"16742:320:6"},{"body":{"nodeType":"YulBlock","src":"17122:87:6","statements":[{"nodeType":"YulAssignment","src":"17132:11:6","value":{"name":"ptr","nodeType":"YulIdentifier","src":"17140:3:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17132:4:6"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17160:1:6","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"17163:3:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17153:6:6"},"nodeType":"YulFunctionCall","src":"17153:14:6"},"nodeType":"YulExpressionStatement","src":"17153:14:6"},{"nodeType":"YulAssignment","src":"17176:26:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17194:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17197:4:6","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17184:9:6"},"nodeType":"YulFunctionCall","src":"17184:18:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17176:4:6"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"17109:3:6","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"17117:4:6","type":""}],"src":"17068:141:6"},{"body":{"nodeType":"YulBlock","src":"17259:49:6","statements":[{"nodeType":"YulAssignment","src":"17269:33:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17287:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"17294:2:6","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17283:3:6"},"nodeType":"YulFunctionCall","src":"17283:14:6"},{"kind":"number","nodeType":"YulLiteral","src":"17299:2:6","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17279:3:6"},"nodeType":"YulFunctionCall","src":"17279:23:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17269:6:6"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17242:5:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"17252:6:6","type":""}],"src":"17215:93:6"},{"body":{"nodeType":"YulBlock","src":"17367:54:6","statements":[{"nodeType":"YulAssignment","src":"17377:37:6","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"17402:4:6"},{"name":"value","nodeType":"YulIdentifier","src":"17408:5:6"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17398:3:6"},"nodeType":"YulFunctionCall","src":"17398:16:6"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"17377:8:6"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"17342:4:6","type":""},{"name":"value","nodeType":"YulTypedName","src":"17348:5:6","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"17358:8:6","type":""}],"src":"17314:107:6"},{"body":{"nodeType":"YulBlock","src":"17503:317:6","statements":[{"nodeType":"YulVariableDeclaration","src":"17513:35:6","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"17534:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"17546:1:6","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17530:3:6"},"nodeType":"YulFunctionCall","src":"17530:18:6"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"17517:9:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17557:109:6","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"17588:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"17599:66:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"17569:18:6"},"nodeType":"YulFunctionCall","src":"17569:97:6"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"17561:4:6","type":""}]},{"nodeType":"YulAssignment","src":"17675:51:6","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"17706:9:6"},{"name":"toInsert","nodeType":"YulIdentifier","src":"17717:8:6"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"17687:18:6"},"nodeType":"YulFunctionCall","src":"17687:39:6"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"17675:8:6"}]},{"nodeType":"YulAssignment","src":"17735:30:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17748:5:6"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"17759:4:6"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17755:3:6"},"nodeType":"YulFunctionCall","src":"17755:9:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17744:3:6"},"nodeType":"YulFunctionCall","src":"17744:21:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17735:5:6"}]},{"nodeType":"YulAssignment","src":"17774:40:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17787:5:6"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"17798:8:6"},{"name":"mask","nodeType":"YulIdentifier","src":"17808:4:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17794:3:6"},"nodeType":"YulFunctionCall","src":"17794:19:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"17784:2:6"},"nodeType":"YulFunctionCall","src":"17784:30:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17774:6:6"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17464:5:6","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"17471:10:6","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"17483:8:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"17496:6:6","type":""}],"src":"17427:393:6"},{"body":{"nodeType":"YulBlock","src":"17858:28:6","statements":[{"nodeType":"YulAssignment","src":"17868:12:6","value":{"name":"value","nodeType":"YulIdentifier","src":"17875:5:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17868:3:6"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17844:5:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"17854:3:6","type":""}],"src":"17826:60:6"},{"body":{"nodeType":"YulBlock","src":"17952:82:6","statements":[{"nodeType":"YulAssignment","src":"17962:66:6","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18020:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18002:17:6"},"nodeType":"YulFunctionCall","src":"18002:24:6"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"17993:8:6"},"nodeType":"YulFunctionCall","src":"17993:34:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17975:17:6"},"nodeType":"YulFunctionCall","src":"17975:53:6"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"17962:9:6"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17932:5:6","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"17942:9:6","type":""}],"src":"17892:142:6"},{"body":{"nodeType":"YulBlock","src":"18087:28:6","statements":[{"nodeType":"YulAssignment","src":"18097:12:6","value":{"name":"value","nodeType":"YulIdentifier","src":"18104:5:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18097:3:6"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18073:5:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"18083:3:6","type":""}],"src":"18040:75:6"},{"body":{"nodeType":"YulBlock","src":"18197:193:6","statements":[{"nodeType":"YulVariableDeclaration","src":"18207:63:6","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"18262:7:6"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"18231:30:6"},"nodeType":"YulFunctionCall","src":"18231:39:6"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"18211:16:6","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18286:4:6"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18326:4:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18320:5:6"},"nodeType":"YulFunctionCall","src":"18320:11:6"},{"name":"offset","nodeType":"YulIdentifier","src":"18333:6:6"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"18365:16:6"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"18341:23:6"},"nodeType":"YulFunctionCall","src":"18341:41:6"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"18292:27:6"},"nodeType":"YulFunctionCall","src":"18292:91:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18279:6:6"},"nodeType":"YulFunctionCall","src":"18279:105:6"},"nodeType":"YulExpressionStatement","src":"18279:105:6"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"18174:4:6","type":""},{"name":"offset","nodeType":"YulTypedName","src":"18180:6:6","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"18188:7:6","type":""}],"src":"18121:269:6"},{"body":{"nodeType":"YulBlock","src":"18445:24:6","statements":[{"nodeType":"YulAssignment","src":"18455:8:6","value":{"kind":"number","nodeType":"YulLiteral","src":"18462:1:6","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18455:3:6"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"18441:3:6","type":""}],"src":"18396:73:6"},{"body":{"nodeType":"YulBlock","src":"18528:136:6","statements":[{"nodeType":"YulVariableDeclaration","src":"18538:46:6","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"18552:30:6"},"nodeType":"YulFunctionCall","src":"18552:32:6"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"18542:6:6","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18637:4:6"},{"name":"offset","nodeType":"YulIdentifier","src":"18643:6:6"},{"name":"zero_0","nodeType":"YulIdentifier","src":"18651:6:6"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"18593:43:6"},"nodeType":"YulFunctionCall","src":"18593:65:6"},"nodeType":"YulExpressionStatement","src":"18593:65:6"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"18514:4:6","type":""},{"name":"offset","nodeType":"YulTypedName","src":"18520:6:6","type":""}],"src":"18475:189:6"},{"body":{"nodeType":"YulBlock","src":"18720:136:6","statements":[{"body":{"nodeType":"YulBlock","src":"18787:63:6","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"18831:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"18838:1:6","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"18801:29:6"},"nodeType":"YulFunctionCall","src":"18801:39:6"},"nodeType":"YulExpressionStatement","src":"18801:39:6"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"18740:5:6"},{"name":"end","nodeType":"YulIdentifier","src":"18747:3:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18737:2:6"},"nodeType":"YulFunctionCall","src":"18737:14:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18752:26:6","statements":[{"nodeType":"YulAssignment","src":"18754:22:6","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"18767:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"18774:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18763:3:6"},"nodeType":"YulFunctionCall","src":"18763:13:6"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"18754:5:6"}]}]},"pre":{"nodeType":"YulBlock","src":"18734:2:6","statements":[]},"src":"18730:120:6"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"18708:5:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"18715:3:6","type":""}],"src":"18670:186:6"},{"body":{"nodeType":"YulBlock","src":"18941:464:6","statements":[{"body":{"nodeType":"YulBlock","src":"18967:431:6","statements":[{"nodeType":"YulVariableDeclaration","src":"18981:54:6","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"19029:5:6"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"18997:31:6"},"nodeType":"YulFunctionCall","src":"18997:38:6"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"18985:8:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19048:63:6","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"19071:8:6"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"19099:10:6"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"19081:17:6"},"nodeType":"YulFunctionCall","src":"19081:29:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19067:3:6"},"nodeType":"YulFunctionCall","src":"19067:44:6"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"19052:11:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"19268:27:6","statements":[{"nodeType":"YulAssignment","src":"19270:23:6","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"19285:8:6"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"19270:11:6"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"19252:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"19264:2:6","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19249:2:6"},"nodeType":"YulFunctionCall","src":"19249:18:6"},"nodeType":"YulIf","src":"19246:49:6"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"19337:11:6"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"19354:8:6"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"19382:3:6"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"19364:17:6"},"nodeType":"YulFunctionCall","src":"19364:22:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19350:3:6"},"nodeType":"YulFunctionCall","src":"19350:37:6"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"19308:28:6"},"nodeType":"YulFunctionCall","src":"19308:80:6"},"nodeType":"YulExpressionStatement","src":"19308:80:6"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"18958:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"18963:2:6","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18955:2:6"},"nodeType":"YulFunctionCall","src":"18955:11:6"},"nodeType":"YulIf","src":"18952:446:6"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"18917:5:6","type":""},{"name":"len","nodeType":"YulTypedName","src":"18924:3:6","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"18929:10:6","type":""}],"src":"18862:543:6"},{"body":{"nodeType":"YulBlock","src":"19474:54:6","statements":[{"nodeType":"YulAssignment","src":"19484:37:6","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"19509:4:6"},{"name":"value","nodeType":"YulIdentifier","src":"19515:5:6"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19505:3:6"},"nodeType":"YulFunctionCall","src":"19505:16:6"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"19484:8:6"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"19449:4:6","type":""},{"name":"value","nodeType":"YulTypedName","src":"19455:5:6","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"19465:8:6","type":""}],"src":"19411:117:6"},{"body":{"nodeType":"YulBlock","src":"19585:118:6","statements":[{"nodeType":"YulVariableDeclaration","src":"19595:68:6","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19644:1:6","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"19647:5:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19640:3:6"},"nodeType":"YulFunctionCall","src":"19640:13:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19659:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19655:3:6"},"nodeType":"YulFunctionCall","src":"19655:6:6"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"19611:28:6"},"nodeType":"YulFunctionCall","src":"19611:51:6"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19607:3:6"},"nodeType":"YulFunctionCall","src":"19607:56:6"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"19599:4:6","type":""}]},{"nodeType":"YulAssignment","src":"19672:25:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19686:4:6"},{"name":"mask","nodeType":"YulIdentifier","src":"19692:4:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19682:3:6"},"nodeType":"YulFunctionCall","src":"19682:15:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"19672:6:6"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"19562:4:6","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"19568:5:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"19578:6:6","type":""}],"src":"19534:169:6"},{"body":{"nodeType":"YulBlock","src":"19789:214:6","statements":[{"nodeType":"YulAssignment","src":"19922:37:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19949:4:6"},{"name":"len","nodeType":"YulIdentifier","src":"19955:3:6"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"19930:18:6"},"nodeType":"YulFunctionCall","src":"19930:29:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"19922:4:6"}]},{"nodeType":"YulAssignment","src":"19968:29:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19979:4:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19989:1:6","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"19992:3:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19985:3:6"},"nodeType":"YulFunctionCall","src":"19985:11:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19976:2:6"},"nodeType":"YulFunctionCall","src":"19976:21:6"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"19968:4:6"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"19770:4:6","type":""},{"name":"len","nodeType":"YulTypedName","src":"19776:3:6","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"19784:4:6","type":""}],"src":"19708:295:6"},{"body":{"nodeType":"YulBlock","src":"20100:1303:6","statements":[{"nodeType":"YulVariableDeclaration","src":"20111:51:6","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20158:3:6"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"20125:32:6"},"nodeType":"YulFunctionCall","src":"20125:37:6"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"20115:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"20247:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"20249:16:6"},"nodeType":"YulFunctionCall","src":"20249:18:6"},"nodeType":"YulExpressionStatement","src":"20249:18:6"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"20219:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"20227:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20216:2:6"},"nodeType":"YulFunctionCall","src":"20216:30:6"},"nodeType":"YulIf","src":"20213:56:6"},{"nodeType":"YulVariableDeclaration","src":"20279:52:6","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20325:4:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"20319:5:6"},"nodeType":"YulFunctionCall","src":"20319:11:6"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"20293:25:6"},"nodeType":"YulFunctionCall","src":"20293:38:6"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"20283:6:6","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20424:4:6"},{"name":"oldLen","nodeType":"YulIdentifier","src":"20430:6:6"},{"name":"newLen","nodeType":"YulIdentifier","src":"20438:6:6"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"20378:45:6"},"nodeType":"YulFunctionCall","src":"20378:67:6"},"nodeType":"YulExpressionStatement","src":"20378:67:6"},{"nodeType":"YulVariableDeclaration","src":"20455:18:6","value":{"kind":"number","nodeType":"YulLiteral","src":"20472:1:6","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"20459:9:6","type":""}]},{"nodeType":"YulAssignment","src":"20483:17:6","value":{"kind":"number","nodeType":"YulLiteral","src":"20496:4:6","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"20483:9:6"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"20547:611:6","statements":[{"nodeType":"YulVariableDeclaration","src":"20561:37:6","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"20580:6:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20592:4:6","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20588:3:6"},"nodeType":"YulFunctionCall","src":"20588:9:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20576:3:6"},"nodeType":"YulFunctionCall","src":"20576:22:6"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"20565:7:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20612:51:6","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20658:4:6"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"20626:31:6"},"nodeType":"YulFunctionCall","src":"20626:37:6"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"20616:6:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20676:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"20685:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"20680:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"20744:163:6","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20769:6:6"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20787:3:6"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"20792:9:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20783:3:6"},"nodeType":"YulFunctionCall","src":"20783:19:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20777:5:6"},"nodeType":"YulFunctionCall","src":"20777:26:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20762:6:6"},"nodeType":"YulFunctionCall","src":"20762:42:6"},"nodeType":"YulExpressionStatement","src":"20762:42:6"},{"nodeType":"YulAssignment","src":"20821:24:6","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20835:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"20843:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20831:3:6"},"nodeType":"YulFunctionCall","src":"20831:14:6"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20821:6:6"}]},{"nodeType":"YulAssignment","src":"20862:31:6","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"20879:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"20890:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20875:3:6"},"nodeType":"YulFunctionCall","src":"20875:18:6"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"20862:9:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20710:1:6"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"20713:7:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20707:2:6"},"nodeType":"YulFunctionCall","src":"20707:14:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20722:21:6","statements":[{"nodeType":"YulAssignment","src":"20724:17:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20733:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"20736:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20729:3:6"},"nodeType":"YulFunctionCall","src":"20729:12:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"20724:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"20703:3:6","statements":[]},"src":"20699:208:6"},{"body":{"nodeType":"YulBlock","src":"20943:156:6","statements":[{"nodeType":"YulVariableDeclaration","src":"20961:43:6","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20988:3:6"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"20993:9:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20984:3:6"},"nodeType":"YulFunctionCall","src":"20984:19:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20978:5:6"},"nodeType":"YulFunctionCall","src":"20978:26:6"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"20965:9:6","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21028:6:6"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"21055:9:6"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21070:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"21078:4:6","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21066:3:6"},"nodeType":"YulFunctionCall","src":"21066:17:6"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"21036:18:6"},"nodeType":"YulFunctionCall","src":"21036:48:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21021:6:6"},"nodeType":"YulFunctionCall","src":"21021:64:6"},"nodeType":"YulExpressionStatement","src":"21021:64:6"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"20926:7:6"},{"name":"newLen","nodeType":"YulIdentifier","src":"20935:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20923:2:6"},"nodeType":"YulFunctionCall","src":"20923:19:6"},"nodeType":"YulIf","src":"20920:179:6"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21119:4:6"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21133:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"21141:1:6","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21129:3:6"},"nodeType":"YulFunctionCall","src":"21129:14:6"},{"kind":"number","nodeType":"YulLiteral","src":"21145:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21125:3:6"},"nodeType":"YulFunctionCall","src":"21125:22:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21112:6:6"},"nodeType":"YulFunctionCall","src":"21112:36:6"},"nodeType":"YulExpressionStatement","src":"21112:36:6"}]},"nodeType":"YulCase","src":"20540:618:6","value":{"kind":"number","nodeType":"YulLiteral","src":"20545:1:6","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"21175:222:6","statements":[{"nodeType":"YulVariableDeclaration","src":"21189:14:6","value":{"kind":"number","nodeType":"YulLiteral","src":"21202:1:6","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"21193:5:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"21226:67:6","statements":[{"nodeType":"YulAssignment","src":"21244:35:6","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21263:3:6"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"21268:9:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21259:3:6"},"nodeType":"YulFunctionCall","src":"21259:19:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21253:5:6"},"nodeType":"YulFunctionCall","src":"21253:26:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21244:5:6"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"21219:6:6"},"nodeType":"YulIf","src":"21216:77:6"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21313:4:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21372:5:6"},{"name":"newLen","nodeType":"YulIdentifier","src":"21379:6:6"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"21319:52:6"},"nodeType":"YulFunctionCall","src":"21319:67:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21306:6:6"},"nodeType":"YulFunctionCall","src":"21306:81:6"},"nodeType":"YulExpressionStatement","src":"21306:81:6"}]},"nodeType":"YulCase","src":"21167:230:6","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"20520:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"20528:2:6","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20517:2:6"},"nodeType":"YulFunctionCall","src":"20517:14:6"},"nodeType":"YulSwitch","src":"20510:887:6"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"20089:4:6","type":""},{"name":"src","nodeType":"YulTypedName","src":"20095:3:6","type":""}],"src":"20008:1395:6"},{"body":{"nodeType":"YulBlock","src":"21515:52:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21537:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"21545:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21533:3:6"},"nodeType":"YulFunctionCall","src":"21533:14:6"},{"hexValue":"47616d655f444e45","kind":"string","nodeType":"YulLiteral","src":"21549:10:6","type":"","value":"Game_DNE"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21526:6:6"},"nodeType":"YulFunctionCall","src":"21526:34:6"},"nodeType":"YulExpressionStatement","src":"21526:34:6"}]},"name":"store_literal_in_memory_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21507:6:6","type":""}],"src":"21409:158:6"},{"body":{"nodeType":"YulBlock","src":"21719:219:6","statements":[{"nodeType":"YulAssignment","src":"21729:73:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21795:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"21800:1:6","type":"","value":"8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21736:58:6"},"nodeType":"YulFunctionCall","src":"21736:66:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21729:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21900:3:6"}],"functionName":{"name":"store_literal_in_memory_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa","nodeType":"YulIdentifier","src":"21811:88:6"},"nodeType":"YulFunctionCall","src":"21811:93:6"},"nodeType":"YulExpressionStatement","src":"21811:93:6"},{"nodeType":"YulAssignment","src":"21913:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21924:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"21929:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21920:3:6"},"nodeType":"YulFunctionCall","src":"21920:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21913:3:6"}]}]},"name":"abi_encode_t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21707:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21715:3:6","type":""}],"src":"21573:365:6"},{"body":{"nodeType":"YulBlock","src":"22115:248:6","statements":[{"nodeType":"YulAssignment","src":"22125:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22137:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"22148:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22133:3:6"},"nodeType":"YulFunctionCall","src":"22133:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22125:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22172:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"22183:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22168:3:6"},"nodeType":"YulFunctionCall","src":"22168:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22191:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"22197:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22187:3:6"},"nodeType":"YulFunctionCall","src":"22187:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22161:6:6"},"nodeType":"YulFunctionCall","src":"22161:47:6"},"nodeType":"YulExpressionStatement","src":"22161:47:6"},{"nodeType":"YulAssignment","src":"22217:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22351:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22225:124:6"},"nodeType":"YulFunctionCall","src":"22225:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22217:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22095:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22110:4:6","type":""}],"src":"21944:419:6"},{"body":{"nodeType":"YulBlock","src":"22475:61:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22497:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"22505:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22493:3:6"},"nodeType":"YulFunctionCall","src":"22493:14:6"},{"hexValue":"4f6e506c617965725475726e5f4f6e6c79","kind":"string","nodeType":"YulLiteral","src":"22509:19:6","type":"","value":"OnPlayerTurn_Only"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22486:6:6"},"nodeType":"YulFunctionCall","src":"22486:43:6"},"nodeType":"YulExpressionStatement","src":"22486:43:6"}]},"name":"store_literal_in_memory_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22467:6:6","type":""}],"src":"22369:167:6"},{"body":{"nodeType":"YulBlock","src":"22688:220:6","statements":[{"nodeType":"YulAssignment","src":"22698:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22764:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"22769:2:6","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22705:58:6"},"nodeType":"YulFunctionCall","src":"22705:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22698:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22870:3:6"}],"functionName":{"name":"store_literal_in_memory_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203","nodeType":"YulIdentifier","src":"22781:88:6"},"nodeType":"YulFunctionCall","src":"22781:93:6"},"nodeType":"YulExpressionStatement","src":"22781:93:6"},{"nodeType":"YulAssignment","src":"22883:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22894:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"22899:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22890:3:6"},"nodeType":"YulFunctionCall","src":"22890:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22883:3:6"}]}]},"name":"abi_encode_t_stringliteral_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22676:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22684:3:6","type":""}],"src":"22542:366:6"},{"body":{"nodeType":"YulBlock","src":"23085:248:6","statements":[{"nodeType":"YulAssignment","src":"23095:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23107:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"23118:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23103:3:6"},"nodeType":"YulFunctionCall","src":"23103:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23095:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23142:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"23153:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23138:3:6"},"nodeType":"YulFunctionCall","src":"23138:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23161:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"23167:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23157:3:6"},"nodeType":"YulFunctionCall","src":"23157:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23131:6:6"},"nodeType":"YulFunctionCall","src":"23131:47:6"},"nodeType":"YulExpressionStatement","src":"23131:47:6"},{"nodeType":"YulAssignment","src":"23187:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23321:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23195:124:6"},"nodeType":"YulFunctionCall","src":"23195:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23187:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23065:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23080:4:6","type":""}],"src":"22914:419:6"},{"body":{"nodeType":"YulBlock","src":"23384:149:6","statements":[{"nodeType":"YulAssignment","src":"23394:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23417:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23399:17:6"},"nodeType":"YulFunctionCall","src":"23399:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23394:1:6"}]},{"nodeType":"YulAssignment","src":"23428:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23451:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23433:17:6"},"nodeType":"YulFunctionCall","src":"23433:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23428:1:6"}]},{"nodeType":"YulAssignment","src":"23462:17:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23474:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"23477:1:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23470:3:6"},"nodeType":"YulFunctionCall","src":"23470:9:6"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"23462:4:6"}]},{"body":{"nodeType":"YulBlock","src":"23504:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23506:16:6"},"nodeType":"YulFunctionCall","src":"23506:18:6"},"nodeType":"YulExpressionStatement","src":"23506:18:6"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"23495:4:6"},{"name":"x","nodeType":"YulIdentifier","src":"23501:1:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23492:2:6"},"nodeType":"YulFunctionCall","src":"23492:11:6"},"nodeType":"YulIf","src":"23489:37:6"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23370:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"23373:1:6","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"23379:4:6","type":""}],"src":"23339:194:6"},{"body":{"nodeType":"YulBlock","src":"23645:63:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23667:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"23675:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23663:3:6"},"nodeType":"YulFunctionCall","src":"23663:14:6"},{"hexValue":"4f6e43616e53706c69745475726e5f4f6e6c79","kind":"string","nodeType":"YulLiteral","src":"23679:21:6","type":"","value":"OnCanSplitTurn_Only"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23656:6:6"},"nodeType":"YulFunctionCall","src":"23656:45:6"},"nodeType":"YulExpressionStatement","src":"23656:45:6"}]},"name":"store_literal_in_memory_dfd89935418421718fe83b17eaba9a49f57ee5a18bf73312e2efbf630b9b1ee9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23637:6:6","type":""}],"src":"23539:169:6"},{"body":{"nodeType":"YulBlock","src":"23860:220:6","statements":[{"nodeType":"YulAssignment","src":"23870:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23936:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"23941:2:6","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23877:58:6"},"nodeType":"YulFunctionCall","src":"23877:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23870:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24042:3:6"}],"functionName":{"name":"store_literal_in_memory_dfd89935418421718fe83b17eaba9a49f57ee5a18bf73312e2efbf630b9b1ee9","nodeType":"YulIdentifier","src":"23953:88:6"},"nodeType":"YulFunctionCall","src":"23953:93:6"},"nodeType":"YulExpressionStatement","src":"23953:93:6"},{"nodeType":"YulAssignment","src":"24055:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24066:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"24071:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24062:3:6"},"nodeType":"YulFunctionCall","src":"24062:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24055:3:6"}]}]},"name":"abi_encode_t_stringliteral_dfd89935418421718fe83b17eaba9a49f57ee5a18bf73312e2efbf630b9b1ee9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23848:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23856:3:6","type":""}],"src":"23714:366:6"},{"body":{"nodeType":"YulBlock","src":"24257:248:6","statements":[{"nodeType":"YulAssignment","src":"24267:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24279:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"24290:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24275:3:6"},"nodeType":"YulFunctionCall","src":"24275:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24267:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24314:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"24325:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24310:3:6"},"nodeType":"YulFunctionCall","src":"24310:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24333:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"24339:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24329:3:6"},"nodeType":"YulFunctionCall","src":"24329:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24303:6:6"},"nodeType":"YulFunctionCall","src":"24303:47:6"},"nodeType":"YulExpressionStatement","src":"24303:47:6"},{"nodeType":"YulAssignment","src":"24359:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24493:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_dfd89935418421718fe83b17eaba9a49f57ee5a18bf73312e2efbf630b9b1ee9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24367:124:6"},"nodeType":"YulFunctionCall","src":"24367:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24359:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_dfd89935418421718fe83b17eaba9a49f57ee5a18bf73312e2efbf630b9b1ee9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24237:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24252:4:6","type":""}],"src":"24086:419:6"},{"body":{"nodeType":"YulBlock","src":"24539:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24556:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24559:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24549:6:6"},"nodeType":"YulFunctionCall","src":"24549:88:6"},"nodeType":"YulExpressionStatement","src":"24549:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24653:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24656:4:6","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24646:6:6"},"nodeType":"YulFunctionCall","src":"24646:15:6"},"nodeType":"YulExpressionStatement","src":"24646:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24677:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24680:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24670:6:6"},"nodeType":"YulFunctionCall","src":"24670:15:6"},"nodeType":"YulExpressionStatement","src":"24670:15:6"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"24511:180:6"},{"body":{"nodeType":"YulBlock","src":"24739:143:6","statements":[{"nodeType":"YulAssignment","src":"24749:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24772:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24754:17:6"},"nodeType":"YulFunctionCall","src":"24754:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24749:1:6"}]},{"nodeType":"YulAssignment","src":"24783:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24806:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24788:17:6"},"nodeType":"YulFunctionCall","src":"24788:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24783:1:6"}]},{"body":{"nodeType":"YulBlock","src":"24830:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"24832:16:6"},"nodeType":"YulFunctionCall","src":"24832:18:6"},"nodeType":"YulExpressionStatement","src":"24832:18:6"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24827:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24820:6:6"},"nodeType":"YulFunctionCall","src":"24820:9:6"},"nodeType":"YulIf","src":"24817:35:6"},{"nodeType":"YulAssignment","src":"24862:14:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24871:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"24874:1:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"24867:3:6"},"nodeType":"YulFunctionCall","src":"24867:9:6"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"24862:1:6"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24728:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"24731:1:6","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"24737:1:6","type":""}],"src":"24697:185:6"},{"body":{"nodeType":"YulBlock","src":"24994:59:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25016:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"25024:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25012:3:6"},"nodeType":"YulFunctionCall","src":"25012:14:6"},{"hexValue":"49734e6577526f756e645f4f6e6c79","kind":"string","nodeType":"YulLiteral","src":"25028:17:6","type":"","value":"IsNewRound_Only"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25005:6:6"},"nodeType":"YulFunctionCall","src":"25005:41:6"},"nodeType":"YulExpressionStatement","src":"25005:41:6"}]},"name":"store_literal_in_memory_48dc19631629da1b2346a32d98cbc4846a44ed7618f77c5c6a081ec8e4c25f61","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24986:6:6","type":""}],"src":"24888:165:6"},{"body":{"nodeType":"YulBlock","src":"25205:220:6","statements":[{"nodeType":"YulAssignment","src":"25215:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25281:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"25286:2:6","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25222:58:6"},"nodeType":"YulFunctionCall","src":"25222:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25215:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25387:3:6"}],"functionName":{"name":"store_literal_in_memory_48dc19631629da1b2346a32d98cbc4846a44ed7618f77c5c6a081ec8e4c25f61","nodeType":"YulIdentifier","src":"25298:88:6"},"nodeType":"YulFunctionCall","src":"25298:93:6"},"nodeType":"YulExpressionStatement","src":"25298:93:6"},{"nodeType":"YulAssignment","src":"25400:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25411:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"25416:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25407:3:6"},"nodeType":"YulFunctionCall","src":"25407:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25400:3:6"}]}]},"name":"abi_encode_t_stringliteral_48dc19631629da1b2346a32d98cbc4846a44ed7618f77c5c6a081ec8e4c25f61_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25193:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25201:3:6","type":""}],"src":"25059:366:6"},{"body":{"nodeType":"YulBlock","src":"25602:248:6","statements":[{"nodeType":"YulAssignment","src":"25612:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25624:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"25635:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25620:3:6"},"nodeType":"YulFunctionCall","src":"25620:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25612:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25659:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"25670:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25655:3:6"},"nodeType":"YulFunctionCall","src":"25655:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25678:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"25684:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25674:3:6"},"nodeType":"YulFunctionCall","src":"25674:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25648:6:6"},"nodeType":"YulFunctionCall","src":"25648:47:6"},"nodeType":"YulExpressionStatement","src":"25648:47:6"},{"nodeType":"YulAssignment","src":"25704:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25838:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_48dc19631629da1b2346a32d98cbc4846a44ed7618f77c5c6a081ec8e4c25f61_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25712:124:6"},"nodeType":"YulFunctionCall","src":"25712:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25704:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_48dc19631629da1b2346a32d98cbc4846a44ed7618f77c5c6a081ec8e4c25f61__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25582:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25597:4:6","type":""}],"src":"25431:419:6"},{"body":{"nodeType":"YulBlock","src":"25962:53:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25984:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"25992:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25980:3:6"},"nodeType":"YulFunctionCall","src":"25980:14:6"},{"hexValue":"4265745f4c696d6974","kind":"string","nodeType":"YulLiteral","src":"25996:11:6","type":"","value":"Bet_Limit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25973:6:6"},"nodeType":"YulFunctionCall","src":"25973:35:6"},"nodeType":"YulExpressionStatement","src":"25973:35:6"}]},"name":"store_literal_in_memory_9b3c2aed77e6e5e9253661cda300b247ee1688a664acf8b203ce47f5f70124ba","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25954:6:6","type":""}],"src":"25856:159:6"},{"body":{"nodeType":"YulBlock","src":"26167:219:6","statements":[{"nodeType":"YulAssignment","src":"26177:73:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26243:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"26248:1:6","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26184:58:6"},"nodeType":"YulFunctionCall","src":"26184:66:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26177:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26348:3:6"}],"functionName":{"name":"store_literal_in_memory_9b3c2aed77e6e5e9253661cda300b247ee1688a664acf8b203ce47f5f70124ba","nodeType":"YulIdentifier","src":"26259:88:6"},"nodeType":"YulFunctionCall","src":"26259:93:6"},"nodeType":"YulExpressionStatement","src":"26259:93:6"},{"nodeType":"YulAssignment","src":"26361:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26372:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"26377:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26368:3:6"},"nodeType":"YulFunctionCall","src":"26368:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26361:3:6"}]}]},"name":"abi_encode_t_stringliteral_9b3c2aed77e6e5e9253661cda300b247ee1688a664acf8b203ce47f5f70124ba_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26155:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26163:3:6","type":""}],"src":"26021:365:6"},{"body":{"nodeType":"YulBlock","src":"26563:248:6","statements":[{"nodeType":"YulAssignment","src":"26573:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26585:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"26596:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26581:3:6"},"nodeType":"YulFunctionCall","src":"26581:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26573:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26620:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"26631:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26616:3:6"},"nodeType":"YulFunctionCall","src":"26616:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26639:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"26645:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26635:3:6"},"nodeType":"YulFunctionCall","src":"26635:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26609:6:6"},"nodeType":"YulFunctionCall","src":"26609:47:6"},"nodeType":"YulExpressionStatement","src":"26609:47:6"},{"nodeType":"YulAssignment","src":"26665:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26799:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_9b3c2aed77e6e5e9253661cda300b247ee1688a664acf8b203ce47f5f70124ba_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26673:124:6"},"nodeType":"YulFunctionCall","src":"26673:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26665:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_9b3c2aed77e6e5e9253661cda300b247ee1688a664acf8b203ce47f5f70124ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26543:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26558:4:6","type":""}],"src":"26392:419:6"},{"body":{"nodeType":"YulBlock","src":"26923:53:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26945:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"26953:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26941:3:6"},"nodeType":"YulFunctionCall","src":"26941:14:6"},{"hexValue":"494e535f46756e6473","kind":"string","nodeType":"YulLiteral","src":"26957:11:6","type":"","value":"INS_Funds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26934:6:6"},"nodeType":"YulFunctionCall","src":"26934:35:6"},"nodeType":"YulExpressionStatement","src":"26934:35:6"}]},"name":"store_literal_in_memory_619463c843b12538087273e01d1f541fd8442dd1bca0d59b893801731e06ef1d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26915:6:6","type":""}],"src":"26817:159:6"},{"body":{"nodeType":"YulBlock","src":"27128:219:6","statements":[{"nodeType":"YulAssignment","src":"27138:73:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27204:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"27209:1:6","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27145:58:6"},"nodeType":"YulFunctionCall","src":"27145:66:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27138:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27309:3:6"}],"functionName":{"name":"store_literal_in_memory_619463c843b12538087273e01d1f541fd8442dd1bca0d59b893801731e06ef1d","nodeType":"YulIdentifier","src":"27220:88:6"},"nodeType":"YulFunctionCall","src":"27220:93:6"},"nodeType":"YulExpressionStatement","src":"27220:93:6"},{"nodeType":"YulAssignment","src":"27322:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27333:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"27338:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27329:3:6"},"nodeType":"YulFunctionCall","src":"27329:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27322:3:6"}]}]},"name":"abi_encode_t_stringliteral_619463c843b12538087273e01d1f541fd8442dd1bca0d59b893801731e06ef1d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27116:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27124:3:6","type":""}],"src":"26982:365:6"},{"body":{"nodeType":"YulBlock","src":"27524:248:6","statements":[{"nodeType":"YulAssignment","src":"27534:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27546:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"27557:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27542:3:6"},"nodeType":"YulFunctionCall","src":"27542:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27534:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27581:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"27592:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27577:3:6"},"nodeType":"YulFunctionCall","src":"27577:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27600:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"27606:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27596:3:6"},"nodeType":"YulFunctionCall","src":"27596:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27570:6:6"},"nodeType":"YulFunctionCall","src":"27570:47:6"},"nodeType":"YulExpressionStatement","src":"27570:47:6"},{"nodeType":"YulAssignment","src":"27626:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27760:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_619463c843b12538087273e01d1f541fd8442dd1bca0d59b893801731e06ef1d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27634:124:6"},"nodeType":"YulFunctionCall","src":"27634:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27626:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_619463c843b12538087273e01d1f541fd8442dd1bca0d59b893801731e06ef1d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27504:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27519:4:6","type":""}],"src":"27353:419:6"},{"body":{"nodeType":"YulBlock","src":"27884:64:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27906:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"27914:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27902:3:6"},"nodeType":"YulFunctionCall","src":"27902:14:6"},{"hexValue":"4f6e43616e496e737572655475726e5f4f6e6c79","kind":"string","nodeType":"YulLiteral","src":"27918:22:6","type":"","value":"OnCanInsureTurn_Only"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27895:6:6"},"nodeType":"YulFunctionCall","src":"27895:46:6"},"nodeType":"YulExpressionStatement","src":"27895:46:6"}]},"name":"store_literal_in_memory_926f9055e8483a0dd91587bf3472e05d3bc4576e61997b1970b39355b74b26b9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27876:6:6","type":""}],"src":"27778:170:6"},{"body":{"nodeType":"YulBlock","src":"28100:220:6","statements":[{"nodeType":"YulAssignment","src":"28110:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28176:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"28181:2:6","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28117:58:6"},"nodeType":"YulFunctionCall","src":"28117:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28110:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28282:3:6"}],"functionName":{"name":"store_literal_in_memory_926f9055e8483a0dd91587bf3472e05d3bc4576e61997b1970b39355b74b26b9","nodeType":"YulIdentifier","src":"28193:88:6"},"nodeType":"YulFunctionCall","src":"28193:93:6"},"nodeType":"YulExpressionStatement","src":"28193:93:6"},{"nodeType":"YulAssignment","src":"28295:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28306:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"28311:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28302:3:6"},"nodeType":"YulFunctionCall","src":"28302:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28295:3:6"}]}]},"name":"abi_encode_t_stringliteral_926f9055e8483a0dd91587bf3472e05d3bc4576e61997b1970b39355b74b26b9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28088:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28096:3:6","type":""}],"src":"27954:366:6"},{"body":{"nodeType":"YulBlock","src":"28497:248:6","statements":[{"nodeType":"YulAssignment","src":"28507:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28519:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"28530:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28515:3:6"},"nodeType":"YulFunctionCall","src":"28515:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28507:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28554:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"28565:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28550:3:6"},"nodeType":"YulFunctionCall","src":"28550:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28573:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"28579:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28569:3:6"},"nodeType":"YulFunctionCall","src":"28569:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28543:6:6"},"nodeType":"YulFunctionCall","src":"28543:47:6"},"nodeType":"YulExpressionStatement","src":"28543:47:6"},{"nodeType":"YulAssignment","src":"28599:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28733:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_926f9055e8483a0dd91587bf3472e05d3bc4576e61997b1970b39355b74b26b9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28607:124:6"},"nodeType":"YulFunctionCall","src":"28607:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28599:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_926f9055e8483a0dd91587bf3472e05d3bc4576e61997b1970b39355b74b26b9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28477:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28492:4:6","type":""}],"src":"28326:419:6"},{"body":{"nodeType":"YulBlock","src":"28897:36:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28914:3:6"},{"hexValue":"202d2d3e20","kind":"string","nodeType":"YulLiteral","src":"28919:7:6","type":"","value":" --> "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28907:6:6"},"nodeType":"YulFunctionCall","src":"28907:20:6"},"nodeType":"YulExpressionStatement","src":"28907:20:6"}]},"name":"abi_encode_t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395_to_t_bytes5_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28892:3:6","type":""}],"src":"28751:182:6"},{"body":{"nodeType":"YulBlock","src":"29053:34:6","statements":[{"nodeType":"YulAssignment","src":"29063:18:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"29078:3:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"29063:11:6"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29025:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"29030:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"29041:11:6","type":""}],"src":"28939:148:6"},{"body":{"nodeType":"YulBlock","src":"29203:280:6","statements":[{"nodeType":"YulVariableDeclaration","src":"29213:53:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29260:5:6"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"29227:32:6"},"nodeType":"YulFunctionCall","src":"29227:39:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"29217:6:6","type":""}]},{"nodeType":"YulAssignment","src":"29275:96:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29359:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"29364:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"29282:76:6"},"nodeType":"YulFunctionCall","src":"29282:89:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29275:3:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29419:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"29426:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29415:3:6"},"nodeType":"YulFunctionCall","src":"29415:16:6"},{"name":"pos","nodeType":"YulIdentifier","src":"29433:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"29438:6:6"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"29380:34:6"},"nodeType":"YulFunctionCall","src":"29380:65:6"},"nodeType":"YulExpressionStatement","src":"29380:65:6"},{"nodeType":"YulAssignment","src":"29454:23:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29465:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"29470:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29461:3:6"},"nodeType":"YulFunctionCall","src":"29461:16:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29454:3:6"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29184:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29191:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29199:3:6","type":""}],"src":"29093:390:6"},{"body":{"nodeType":"YulBlock","src":"29715:313:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29859:3:6"}],"functionName":{"name":"abi_encode_t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395_to_t_bytes5_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"29726:131:6"},"nodeType":"YulFunctionCall","src":"29726:137:6"},"nodeType":"YulExpressionStatement","src":"29726:137:6"},{"nodeType":"YulAssignment","src":"29872:18:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29883:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"29888:1:6","type":"","value":"5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29879:3:6"},"nodeType":"YulFunctionCall","src":"29879:11:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29872:3:6"}]},{"nodeType":"YulAssignment","src":"29900:102:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29989:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"29998:3:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"29907:81:6"},"nodeType":"YulFunctionCall","src":"29907:95:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29900:3:6"}]},{"nodeType":"YulAssignment","src":"30012:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"30019:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30012:3:6"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395_t_string_memory_ptr__to_t_bytes5_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29694:3:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29700:6:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29711:3:6","type":""}],"src":"29489:539:6"},{"body":{"nodeType":"YulBlock","src":"30180:40:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30197:3:6"},{"hexValue":"202d2d2d2d2d2d3e20","kind":"string","nodeType":"YulLiteral","src":"30202:11:6","type":"","value":" ------> "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30190:6:6"},"nodeType":"YulFunctionCall","src":"30190:24:6"},"nodeType":"YulExpressionStatement","src":"30190:24:6"}]},"name":"abi_encode_t_stringliteral_0257a43edd2a7a85580801ec2f283037586509160ac0481da651693f3dcbda20_to_t_bytes9_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30175:3:6","type":""}],"src":"30034:186:6"},{"body":{"nodeType":"YulBlock","src":"30452:313:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30596:3:6"}],"functionName":{"name":"abi_encode_t_stringliteral_0257a43edd2a7a85580801ec2f283037586509160ac0481da651693f3dcbda20_to_t_bytes9_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"30463:131:6"},"nodeType":"YulFunctionCall","src":"30463:137:6"},"nodeType":"YulExpressionStatement","src":"30463:137:6"},{"nodeType":"YulAssignment","src":"30609:18:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30620:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"30625:1:6","type":"","value":"9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30616:3:6"},"nodeType":"YulFunctionCall","src":"30616:11:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30609:3:6"}]},{"nodeType":"YulAssignment","src":"30637:102:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30726:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"30735:3:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"30644:81:6"},"nodeType":"YulFunctionCall","src":"30644:95:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30637:3:6"}]},{"nodeType":"YulAssignment","src":"30749:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"30756:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30749:3:6"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_0257a43edd2a7a85580801ec2f283037586509160ac0481da651693f3dcbda20_t_string_memory_ptr__to_t_bytes9_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30431:3:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30437:6:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30448:3:6","type":""}],"src":"30226:539:6"},{"body":{"nodeType":"YulBlock","src":"30917:35:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30934:3:6"},{"hexValue":"20776569","kind":"string","nodeType":"YulLiteral","src":"30939:6:6","type":"","value":" wei"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30927:6:6"},"nodeType":"YulFunctionCall","src":"30927:19:6"},"nodeType":"YulExpressionStatement","src":"30927:19:6"}]},"name":"abi_encode_t_stringliteral_6884c8765ed9c3ce28a01297f38e5acbb4b3ee59bf507abdb41f31b919ff7019_to_t_bytes4_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30912:3:6","type":""}],"src":"30771:181:6"},{"body":{"nodeType":"YulBlock","src":"31274:487:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31418:3:6"}],"functionName":{"name":"abi_encode_t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395_to_t_bytes5_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"31285:131:6"},"nodeType":"YulFunctionCall","src":"31285:137:6"},"nodeType":"YulExpressionStatement","src":"31285:137:6"},{"nodeType":"YulAssignment","src":"31431:18:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31442:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"31447:1:6","type":"","value":"5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31438:3:6"},"nodeType":"YulFunctionCall","src":"31438:11:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31431:3:6"}]},{"nodeType":"YulAssignment","src":"31459:102:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31548:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"31557:3:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"31466:81:6"},"nodeType":"YulFunctionCall","src":"31466:95:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31459:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31704:3:6"}],"functionName":{"name":"abi_encode_t_stringliteral_6884c8765ed9c3ce28a01297f38e5acbb4b3ee59bf507abdb41f31b919ff7019_to_t_bytes4_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"31571:131:6"},"nodeType":"YulFunctionCall","src":"31571:137:6"},"nodeType":"YulExpressionStatement","src":"31571:137:6"},{"nodeType":"YulAssignment","src":"31717:18:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31728:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"31733:1:6","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31724:3:6"},"nodeType":"YulFunctionCall","src":"31724:11:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31717:3:6"}]},{"nodeType":"YulAssignment","src":"31745:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"31752:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31745:3:6"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395_t_string_memory_ptr_t_stringliteral_6884c8765ed9c3ce28a01297f38e5acbb4b3ee59bf507abdb41f31b919ff7019__to_t_bytes5_t_string_memory_ptr_t_bytes4__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31253:3:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31259:6:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31270:3:6","type":""}],"src":"30958:803:6"},{"body":{"nodeType":"YulBlock","src":"31795:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31812:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31815:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31805:6:6"},"nodeType":"YulFunctionCall","src":"31805:88:6"},"nodeType":"YulExpressionStatement","src":"31805:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31909:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"31912:4:6","type":"","value":"0x01"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31902:6:6"},"nodeType":"YulFunctionCall","src":"31902:15:6"},"nodeType":"YulExpressionStatement","src":"31902:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31933:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31936:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31926:6:6"},"nodeType":"YulFunctionCall","src":"31926:15:6"},"nodeType":"YulExpressionStatement","src":"31926:15:6"}]},"name":"panic_error_0x01","nodeType":"YulFunctionDefinition","src":"31767:180:6"},{"body":{"nodeType":"YulBlock","src":"32059:68:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32081:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"32089:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32077:3:6"},"nodeType":"YulFunctionCall","src":"32077:14:6"},{"hexValue":"4f6e43616e446f75626c65446f776e5475726e5f4f6e6c79","kind":"string","nodeType":"YulLiteral","src":"32093:26:6","type":"","value":"OnCanDoubleDownTurn_Only"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32070:6:6"},"nodeType":"YulFunctionCall","src":"32070:50:6"},"nodeType":"YulExpressionStatement","src":"32070:50:6"}]},"name":"store_literal_in_memory_11c0e650c89aa2a2bcc82172d574c83a55d46b332c6c5d528dd67e12fe46a726","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32051:6:6","type":""}],"src":"31953:174:6"},{"body":{"nodeType":"YulBlock","src":"32279:220:6","statements":[{"nodeType":"YulAssignment","src":"32289:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32355:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"32360:2:6","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32296:58:6"},"nodeType":"YulFunctionCall","src":"32296:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32289:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32461:3:6"}],"functionName":{"name":"store_literal_in_memory_11c0e650c89aa2a2bcc82172d574c83a55d46b332c6c5d528dd67e12fe46a726","nodeType":"YulIdentifier","src":"32372:88:6"},"nodeType":"YulFunctionCall","src":"32372:93:6"},"nodeType":"YulExpressionStatement","src":"32372:93:6"},{"nodeType":"YulAssignment","src":"32474:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32485:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"32490:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32481:3:6"},"nodeType":"YulFunctionCall","src":"32481:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32474:3:6"}]}]},"name":"abi_encode_t_stringliteral_11c0e650c89aa2a2bcc82172d574c83a55d46b332c6c5d528dd67e12fe46a726_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32267:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32275:3:6","type":""}],"src":"32133:366:6"},{"body":{"nodeType":"YulBlock","src":"32676:248:6","statements":[{"nodeType":"YulAssignment","src":"32686:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32698:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"32709:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32694:3:6"},"nodeType":"YulFunctionCall","src":"32694:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32686:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32733:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"32744:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32729:3:6"},"nodeType":"YulFunctionCall","src":"32729:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32752:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"32758:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32748:3:6"},"nodeType":"YulFunctionCall","src":"32748:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32722:6:6"},"nodeType":"YulFunctionCall","src":"32722:47:6"},"nodeType":"YulExpressionStatement","src":"32722:47:6"},{"nodeType":"YulAssignment","src":"32778:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32912:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_11c0e650c89aa2a2bcc82172d574c83a55d46b332c6c5d528dd67e12fe46a726_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32786:124:6"},"nodeType":"YulFunctionCall","src":"32786:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32778:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_11c0e650c89aa2a2bcc82172d574c83a55d46b332c6c5d528dd67e12fe46a726__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32656:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32671:4:6","type":""}],"src":"32505:419:6"},{"body":{"nodeType":"YulBlock","src":"32978:362:6","statements":[{"nodeType":"YulAssignment","src":"32988:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33011:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32993:17:6"},"nodeType":"YulFunctionCall","src":"32993:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"32988:1:6"}]},{"nodeType":"YulAssignment","src":"33022:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"33045:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33027:17:6"},"nodeType":"YulFunctionCall","src":"33027:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"33022:1:6"}]},{"nodeType":"YulVariableDeclaration","src":"33056:28:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33079:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"33082:1:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"33075:3:6"},"nodeType":"YulFunctionCall","src":"33075:9:6"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"33060:11:6","type":""}]},{"nodeType":"YulAssignment","src":"33093:41:6","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"33122:11:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33104:17:6"},"nodeType":"YulFunctionCall","src":"33104:30:6"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"33093:7:6"}]},{"body":{"nodeType":"YulBlock","src":"33311:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"33313:16:6"},"nodeType":"YulFunctionCall","src":"33313:18:6"},"nodeType":"YulExpressionStatement","src":"33313:18:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33244:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33237:6:6"},"nodeType":"YulFunctionCall","src":"33237:9:6"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"33267:1:6"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"33274:7:6"},{"name":"x","nodeType":"YulIdentifier","src":"33283:1:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"33270:3:6"},"nodeType":"YulFunctionCall","src":"33270:15:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"33264:2:6"},"nodeType":"YulFunctionCall","src":"33264:22:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"33217:2:6"},"nodeType":"YulFunctionCall","src":"33217:83:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33197:6:6"},"nodeType":"YulFunctionCall","src":"33197:113:6"},"nodeType":"YulIf","src":"33194:139:6"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"32961:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"32964:1:6","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"32970:7:6","type":""}],"src":"32930:410:6"},{"body":{"nodeType":"YulBlock","src":"33380:142:6","statements":[{"nodeType":"YulAssignment","src":"33390:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33413:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33395:17:6"},"nodeType":"YulFunctionCall","src":"33395:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"33390:1:6"}]},{"nodeType":"YulAssignment","src":"33424:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"33447:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33429:17:6"},"nodeType":"YulFunctionCall","src":"33429:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"33424:1:6"}]},{"body":{"nodeType":"YulBlock","src":"33471:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"33473:16:6"},"nodeType":"YulFunctionCall","src":"33473:18:6"},"nodeType":"YulExpressionStatement","src":"33473:18:6"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"33468:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33461:6:6"},"nodeType":"YulFunctionCall","src":"33461:9:6"},"nodeType":"YulIf","src":"33458:35:6"},{"nodeType":"YulAssignment","src":"33502:14:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33511:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"33514:1:6"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"33507:3:6"},"nodeType":"YulFunctionCall","src":"33507:9:6"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"33502:1:6"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"33369:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"33372:1:6","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"33378:1:6","type":""}],"src":"33346:176:6"},{"body":{"nodeType":"YulBlock","src":"33573:32:6","statements":[{"nodeType":"YulAssignment","src":"33583:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"33594:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"33583:7:6"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33555:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"33565:7:6","type":""}],"src":"33528:77:6"},{"body":{"nodeType":"YulBlock","src":"33658:32:6","statements":[{"nodeType":"YulAssignment","src":"33668:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"33679:5:6"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"33668:7:6"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33640:5:6","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"33650:7:6","type":""}],"src":"33611:79:6"},{"body":{"nodeType":"YulBlock","src":"33779:74:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33796:3:6"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33839:5:6"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"33821:17:6"},"nodeType":"YulFunctionCall","src":"33821:24:6"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"33801:19:6"},"nodeType":"YulFunctionCall","src":"33801:45:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33789:6:6"},"nodeType":"YulFunctionCall","src":"33789:58:6"},"nodeType":"YulExpressionStatement","src":"33789:58:6"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33767:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"33774:3:6","type":""}],"src":"33696:157:6"},{"body":{"nodeType":"YulBlock","src":"33906:32:6","statements":[{"nodeType":"YulAssignment","src":"33916:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"33927:5:6"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"33916:7:6"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33888:5:6","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"33898:7:6","type":""}],"src":"33859:79:6"},{"body":{"nodeType":"YulBlock","src":"34027:74:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34044:3:6"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34087:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34069:17:6"},"nodeType":"YulFunctionCall","src":"34069:24:6"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"34049:19:6"},"nodeType":"YulFunctionCall","src":"34049:45:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34037:6:6"},"nodeType":"YulFunctionCall","src":"34037:58:6"},"nodeType":"YulExpressionStatement","src":"34037:58:6"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34015:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34022:3:6","type":""}],"src":"33944:157:6"},{"body":{"nodeType":"YulBlock","src":"34251:253:6","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34324:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"34333:3:6"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34262:61:6"},"nodeType":"YulFunctionCall","src":"34262:75:6"},"nodeType":"YulExpressionStatement","src":"34262:75:6"},{"nodeType":"YulAssignment","src":"34346:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34357:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"34362:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34353:3:6"},"nodeType":"YulFunctionCall","src":"34353:12:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34346:3:6"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34437:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"34446:3:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34375:61:6"},"nodeType":"YulFunctionCall","src":"34375:75:6"},"nodeType":"YulExpressionStatement","src":"34375:75:6"},{"nodeType":"YulAssignment","src":"34459:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34470:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"34475:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34466:3:6"},"nodeType":"YulFunctionCall","src":"34466:12:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34459:3:6"}]},{"nodeType":"YulAssignment","src":"34488:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"34495:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34488:3:6"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34222:3:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34228:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34236:6:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34247:3:6","type":""}],"src":"34107:397:6"},{"body":{"nodeType":"YulBlock","src":"34641:767:6","statements":[{"nodeType":"YulVariableDeclaration","src":"34651:29:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34674:5:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"34668:5:6"},"nodeType":"YulFunctionCall","src":"34668:12:6"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"34655:9:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"34689:50:6","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"34729:9:6"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"34703:25:6"},"nodeType":"YulFunctionCall","src":"34703:36:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"34693:6:6","type":""}]},{"nodeType":"YulAssignment","src":"34748:96:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34832:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"34837:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34755:76:6"},"nodeType":"YulFunctionCall","src":"34755:89:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34748:3:6"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"34893:159:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34946:3:6"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"34955:9:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34970:4:6","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34966:3:6"},"nodeType":"YulFunctionCall","src":"34966:9:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34951:3:6"},"nodeType":"YulFunctionCall","src":"34951:25:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34939:6:6"},"nodeType":"YulFunctionCall","src":"34939:38:6"},"nodeType":"YulExpressionStatement","src":"34939:38:6"},{"nodeType":"YulAssignment","src":"34990:52:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35001:3:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"35010:6:6"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"35032:6:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"35025:6:6"},"nodeType":"YulFunctionCall","src":"35025:14:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"35018:6:6"},"nodeType":"YulFunctionCall","src":"35018:22:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"35006:3:6"},"nodeType":"YulFunctionCall","src":"35006:35:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34997:3:6"},"nodeType":"YulFunctionCall","src":"34997:45:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"34990:3:6"}]}]},"nodeType":"YulCase","src":"34886:166:6","value":{"kind":"number","nodeType":"YulLiteral","src":"34891:1:6","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"35068:334:6","statements":[{"nodeType":"YulVariableDeclaration","src":"35113:53:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35160:5:6"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"35128:31:6"},"nodeType":"YulFunctionCall","src":"35128:38:6"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"35117:7:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"35179:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"35188:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"35183:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"35246:110:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35275:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"35280:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35271:3:6"},"nodeType":"YulFunctionCall","src":"35271:11:6"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"35290:7:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"35284:5:6"},"nodeType":"YulFunctionCall","src":"35284:14:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35264:6:6"},"nodeType":"YulFunctionCall","src":"35264:35:6"},"nodeType":"YulExpressionStatement","src":"35264:35:6"},{"nodeType":"YulAssignment","src":"35316:26:6","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"35331:7:6"},{"kind":"number","nodeType":"YulLiteral","src":"35340:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35327:3:6"},"nodeType":"YulFunctionCall","src":"35327:15:6"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"35316:7:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"35213:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"35216:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"35210:2:6"},"nodeType":"YulFunctionCall","src":"35210:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"35224:21:6","statements":[{"nodeType":"YulAssignment","src":"35226:17:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"35235:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"35238:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35231:3:6"},"nodeType":"YulFunctionCall","src":"35231:12:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"35226:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"35206:3:6","statements":[]},"src":"35202:154:6"},{"nodeType":"YulAssignment","src":"35369:23:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35380:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"35385:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35376:3:6"},"nodeType":"YulFunctionCall","src":"35376:16:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"35369:3:6"}]}]},"nodeType":"YulCase","src":"35061:341:6","value":{"kind":"number","nodeType":"YulLiteral","src":"35066:1:6","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"34864:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"34875:1:6","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34860:3:6"},"nodeType":"YulFunctionCall","src":"34860:17:6"},"nodeType":"YulSwitch","src":"34853:549:6"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34622:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34629:3:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"34637:3:6","type":""}],"src":"34534:874:6"},{"body":{"nodeType":"YulBlock","src":"35561:54:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35578:3:6"},{"hexValue":"20506c6179657220776f6e2073706c69742068616e642e","kind":"string","nodeType":"YulLiteral","src":"35583:25:6","type":"","value":" Player won split hand."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35571:6:6"},"nodeType":"YulFunctionCall","src":"35571:38:6"},"nodeType":"YulExpressionStatement","src":"35571:38:6"}]},"name":"abi_encode_t_stringliteral_7800ecc545656055dd459b5ea70d2d0ec79bc697c86eb523259a8e50e1652be1_to_t_bytes23_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35556:3:6","type":""}],"src":"35414:201:6"},{"body":{"nodeType":"YulBlock","src":"35845:312:6","statements":[{"nodeType":"YulAssignment","src":"35856:99:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35942:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"35951:3:6"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35863:78:6"},"nodeType":"YulFunctionCall","src":"35863:92:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35856:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36099:3:6"}],"functionName":{"name":"abi_encode_t_stringliteral_7800ecc545656055dd459b5ea70d2d0ec79bc697c86eb523259a8e50e1652be1_to_t_bytes23_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35965:132:6"},"nodeType":"YulFunctionCall","src":"35965:138:6"},"nodeType":"YulExpressionStatement","src":"35965:138:6"},{"nodeType":"YulAssignment","src":"36112:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36123:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"36128:2:6","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36119:3:6"},"nodeType":"YulFunctionCall","src":"36119:12:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36112:3:6"}]},{"nodeType":"YulAssignment","src":"36141:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"36148:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36141:3:6"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_stringliteral_7800ecc545656055dd459b5ea70d2d0ec79bc697c86eb523259a8e50e1652be1__to_t_string_memory_ptr_t_bytes23__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35824:3:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35830:6:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35841:3:6","type":""}],"src":"35621:536:6"},{"body":{"nodeType":"YulBlock","src":"36310:55:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36327:3:6"},{"hexValue":"20506c61796572206c6f73742073706c69742068616e642e","kind":"string","nodeType":"YulLiteral","src":"36332:26:6","type":"","value":" Player lost split hand."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36320:6:6"},"nodeType":"YulFunctionCall","src":"36320:39:6"},"nodeType":"YulExpressionStatement","src":"36320:39:6"}]},"name":"abi_encode_t_stringliteral_514ea601867e3f587ad35939476f254258c9acad4a417792829c4ad92621b30a_to_t_bytes24_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36305:3:6","type":""}],"src":"36163:202:6"},{"body":{"nodeType":"YulBlock","src":"36595:312:6","statements":[{"nodeType":"YulAssignment","src":"36606:99:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36692:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"36701:3:6"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36613:78:6"},"nodeType":"YulFunctionCall","src":"36613:92:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36606:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36849:3:6"}],"functionName":{"name":"abi_encode_t_stringliteral_514ea601867e3f587ad35939476f254258c9acad4a417792829c4ad92621b30a_to_t_bytes24_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36715:132:6"},"nodeType":"YulFunctionCall","src":"36715:138:6"},"nodeType":"YulExpressionStatement","src":"36715:138:6"},{"nodeType":"YulAssignment","src":"36862:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36873:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"36878:2:6","type":"","value":"24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36869:3:6"},"nodeType":"YulFunctionCall","src":"36869:12:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36862:3:6"}]},{"nodeType":"YulAssignment","src":"36891:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"36898:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36891:3:6"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_stringliteral_514ea601867e3f587ad35939476f254258c9acad4a417792829c4ad92621b30a__to_t_string_memory_ptr_t_bytes24__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36574:3:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36580:6:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36591:3:6","type":""}],"src":"36371:536:6"},{"body":{"nodeType":"YulBlock","src":"37060:55:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37077:3:6"},{"hexValue":"205374616e644f6666206f6e2073706c69742068616e6421","kind":"string","nodeType":"YulLiteral","src":"37082:26:6","type":"","value":" StandOff on split hand!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37070:6:6"},"nodeType":"YulFunctionCall","src":"37070:39:6"},"nodeType":"YulExpressionStatement","src":"37070:39:6"}]},"name":"abi_encode_t_stringliteral_c78e2f0190d9b2a72f3ca17298f686a31c20707bc8e3a5b02a40c96e4fee0189_to_t_bytes24_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37055:3:6","type":""}],"src":"36913:202:6"},{"body":{"nodeType":"YulBlock","src":"37345:312:6","statements":[{"nodeType":"YulAssignment","src":"37356:99:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37442:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"37451:3:6"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37363:78:6"},"nodeType":"YulFunctionCall","src":"37363:92:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37356:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37599:3:6"}],"functionName":{"name":"abi_encode_t_stringliteral_c78e2f0190d9b2a72f3ca17298f686a31c20707bc8e3a5b02a40c96e4fee0189_to_t_bytes24_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37465:132:6"},"nodeType":"YulFunctionCall","src":"37465:138:6"},"nodeType":"YulExpressionStatement","src":"37465:138:6"},{"nodeType":"YulAssignment","src":"37612:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37623:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"37628:2:6","type":"","value":"24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37619:3:6"},"nodeType":"YulFunctionCall","src":"37619:12:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37612:3:6"}]},{"nodeType":"YulAssignment","src":"37641:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"37648:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37641:3:6"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_stringliteral_c78e2f0190d9b2a72f3ca17298f686a31c20707bc8e3a5b02a40c96e4fee0189__to_t_string_memory_ptr_t_bytes24__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37324:3:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37330:6:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37341:3:6","type":""}],"src":"37121:536:6"}]},"contents":"{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ce2fea17e1bfdbc965b108c55d6405798514c890bf554156ecbcecd02288e9f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address_INV\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ce2fea17e1bfdbc965b108c55d6405798514c890bf554156ecbcecd02288e9f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_0ce2fea17e1bfdbc965b108c55d6405798514c890bf554156ecbcecd02288e9f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ce2fea17e1bfdbc965b108c55d6405798514c890bf554156ecbcecd02288e9f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ce2fea17e1bfdbc965b108c55d6405798514c890bf554156ecbcecd02288e9f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_74583bf40366140cdb71804e6d6a5f1c545237cd76be6536d0470668ca3d44de(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please use StartNewGame Function\")\n\n        mstore(add(memPtr, 32), \" to pay contract.\")\n\n    }\n\n    function abi_encode_t_stringliteral_74583bf40366140cdb71804e6d6a5f1c545237cd76be6536d0470668ca3d44de_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_74583bf40366140cdb71804e6d6a5f1c545237cd76be6536d0470668ca3d44de(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74583bf40366140cdb71804e6d6a5f1c545237cd76be6536d0470668ca3d44de__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74583bf40366140cdb71804e6d6a5f1c545237cd76be6536d0470668ca3d44de_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e68d5b0a431515bb993e37d573d3bb2f8d5976eef230433de8255ac6ddf6b3f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Function_DNE.\")\n\n    }\n\n    function abi_encode_t_stringliteral_e68d5b0a431515bb993e37d573d3bb2f8d5976eef230433de8255ac6ddf6b3f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_e68d5b0a431515bb993e37d573d3bb2f8d5976eef230433de8255ac6ddf6b3f2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e68d5b0a431515bb993e37d573d3bb2f8d5976eef230433de8255ac6ddf6b3f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e68d5b0a431515bb993e37d573d3bb2f8d5976eef230433de8255ac6ddf6b3f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 384)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value4,  tail)\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value5,  tail)\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value6,  tail)\n\n        mstore(add(headStart, 224), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value7,  tail)\n\n        mstore(add(headStart, 256), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value8,  tail)\n\n        mstore(add(headStart, 288), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value9,  tail)\n\n        mstore(add(headStart, 320), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value10,  tail)\n\n        mstore(add(headStart, 352), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value11,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct BlackJack.Game -> struct BlackJack.Game\n    function abi_encode_t_struct$_Game_$3939_memory_ptr_to_t_struct$_Game_$3939_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x0300)\n\n        {\n            // Id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // Player\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // SafeBalance\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // OriginalBalance\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // SplitCounter\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // GamesPlayed\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // PlayerBet\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // InsuranceBet\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // PlayerCard1\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // PlayerCard2\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0120))\n        }\n\n        {\n            // PlayerNewCard\n\n            let memberValue0 := mload(add(value, 0x0140))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0140))\n        }\n\n        {\n            // PlayerCardTotal\n\n            let memberValue0 := mload(add(value, 0x0160))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0160))\n        }\n\n        {\n            // PlayerSplitTotal\n\n            let memberValue0 := mload(add(value, 0x0180))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0180))\n        }\n\n        {\n            // DealerCard1\n\n            let memberValue0 := mload(add(value, 0x01a0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x01a0))\n        }\n\n        {\n            // DealerCard2\n\n            let memberValue0 := mload(add(value, 0x01c0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x01c0))\n        }\n\n        {\n            // DealerNewCard\n\n            let memberValue0 := mload(add(value, 0x01e0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x01e0))\n        }\n\n        {\n            // DealerCardTotal\n\n            let memberValue0 := mload(add(value, 0x0200))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0200))\n        }\n\n        {\n            // CanDoubleDown\n\n            let memberValue0 := mload(add(value, 0x0220))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0220))\n        }\n\n        {\n            // CanInsure\n\n            let memberValue0 := mload(add(value, 0x0240))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0240))\n        }\n\n        {\n            // CanSplit\n\n            let memberValue0 := mload(add(value, 0x0260))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0260))\n        }\n\n        {\n            // IsSplitting\n\n            let memberValue0 := mload(add(value, 0x0280))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0280))\n        }\n\n        {\n            // IsSoftHand\n\n            let memberValue0 := mload(add(value, 0x02a0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x02a0))\n        }\n\n        {\n            // IsRoundInProgress\n\n            let memberValue0 := mload(add(value, 0x02c0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x02c0))\n        }\n\n        {\n            // DealerMsg\n\n            let memberValue0 := mload(add(value, 0x02e0))\n\n            mstore(add(pos, 0x02e0), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_Game_$3939_memory_ptr__to_t_struct$_Game_$3939_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Game_$3939_memory_ptr_to_t_struct$_Game_$3939_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function store_literal_in_memory_8f993d0eb2917936c12e6dfe50ccae82441180c058725aefd59bda83d15f9162(memPtr) {\n\n        mstore(add(memPtr, 0), \"ExistingPlayer_CCF\")\n\n    }\n\n    function abi_encode_t_stringliteral_8f993d0eb2917936c12e6dfe50ccae82441180c058725aefd59bda83d15f9162_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_8f993d0eb2917936c12e6dfe50ccae82441180c058725aefd59bda83d15f9162(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8f993d0eb2917936c12e6dfe50ccae82441180c058725aefd59bda83d15f9162__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8f993d0eb2917936c12e6dfe50ccae82441180c058725aefd59bda83d15f9162_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0e4887e76f7fcd61a28101e915f9bb1da012679974d91aac6a12226aa17e16f7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit_Limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_0e4887e76f7fcd61a28101e915f9bb1da012679974d91aac6a12226aa17e16f7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_0e4887e76f7fcd61a28101e915f9bb1da012679974d91aac6a12226aa17e16f7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0e4887e76f7fcd61a28101e915f9bb1da012679974d91aac6a12226aa17e16f7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0e4887e76f7fcd61a28101e915f9bb1da012679974d91aac6a12226aa17e16f7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Game_DNE\")\n\n    }\n\n    function abi_encode_t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_522544b6f4376a1e87dfcff279d121a18025b9791f7718aa930c3707eea8cdfa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203(memPtr) {\n\n        mstore(add(memPtr, 0), \"OnPlayerTurn_Only\")\n\n    }\n\n    function abi_encode_t_stringliteral_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7135e9bf28daa21a70d4762d88eab7c88c49f19468103b2cbba03fa0f7d9c203_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_dfd89935418421718fe83b17eaba9a49f57ee5a18bf73312e2efbf630b9b1ee9(memPtr) {\n\n        mstore(add(memPtr, 0), \"OnCanSplitTurn_Only\")\n\n    }\n\n    function abi_encode_t_stringliteral_dfd89935418421718fe83b17eaba9a49f57ee5a18bf73312e2efbf630b9b1ee9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_dfd89935418421718fe83b17eaba9a49f57ee5a18bf73312e2efbf630b9b1ee9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dfd89935418421718fe83b17eaba9a49f57ee5a18bf73312e2efbf630b9b1ee9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dfd89935418421718fe83b17eaba9a49f57ee5a18bf73312e2efbf630b9b1ee9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_48dc19631629da1b2346a32d98cbc4846a44ed7618f77c5c6a081ec8e4c25f61(memPtr) {\n\n        mstore(add(memPtr, 0), \"IsNewRound_Only\")\n\n    }\n\n    function abi_encode_t_stringliteral_48dc19631629da1b2346a32d98cbc4846a44ed7618f77c5c6a081ec8e4c25f61_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_48dc19631629da1b2346a32d98cbc4846a44ed7618f77c5c6a081ec8e4c25f61(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48dc19631629da1b2346a32d98cbc4846a44ed7618f77c5c6a081ec8e4c25f61__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48dc19631629da1b2346a32d98cbc4846a44ed7618f77c5c6a081ec8e4c25f61_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9b3c2aed77e6e5e9253661cda300b247ee1688a664acf8b203ce47f5f70124ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"Bet_Limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_9b3c2aed77e6e5e9253661cda300b247ee1688a664acf8b203ce47f5f70124ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_9b3c2aed77e6e5e9253661cda300b247ee1688a664acf8b203ce47f5f70124ba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b3c2aed77e6e5e9253661cda300b247ee1688a664acf8b203ce47f5f70124ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b3c2aed77e6e5e9253661cda300b247ee1688a664acf8b203ce47f5f70124ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_619463c843b12538087273e01d1f541fd8442dd1bca0d59b893801731e06ef1d(memPtr) {\n\n        mstore(add(memPtr, 0), \"INS_Funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_619463c843b12538087273e01d1f541fd8442dd1bca0d59b893801731e06ef1d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_619463c843b12538087273e01d1f541fd8442dd1bca0d59b893801731e06ef1d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_619463c843b12538087273e01d1f541fd8442dd1bca0d59b893801731e06ef1d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_619463c843b12538087273e01d1f541fd8442dd1bca0d59b893801731e06ef1d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_926f9055e8483a0dd91587bf3472e05d3bc4576e61997b1970b39355b74b26b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"OnCanInsureTurn_Only\")\n\n    }\n\n    function abi_encode_t_stringliteral_926f9055e8483a0dd91587bf3472e05d3bc4576e61997b1970b39355b74b26b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_926f9055e8483a0dd91587bf3472e05d3bc4576e61997b1970b39355b74b26b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_926f9055e8483a0dd91587bf3472e05d3bc4576e61997b1970b39355b74b26b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_926f9055e8483a0dd91587bf3472e05d3bc4576e61997b1970b39355b74b26b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395_to_t_bytes5_nonPadded_inplace_fromStack(pos) {\n        mstore(pos, \" --> \")\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395_t_string_memory_ptr__to_t_bytes5_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395_to_t_bytes5_nonPadded_inplace_fromStack( pos)\n        pos := add(pos, 5)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_t_stringliteral_0257a43edd2a7a85580801ec2f283037586509160ac0481da651693f3dcbda20_to_t_bytes9_nonPadded_inplace_fromStack(pos) {\n        mstore(pos, \" ------> \")\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_0257a43edd2a7a85580801ec2f283037586509160ac0481da651693f3dcbda20_t_string_memory_ptr__to_t_bytes9_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_stringliteral_0257a43edd2a7a85580801ec2f283037586509160ac0481da651693f3dcbda20_to_t_bytes9_nonPadded_inplace_fromStack( pos)\n        pos := add(pos, 9)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_t_stringliteral_6884c8765ed9c3ce28a01297f38e5acbb4b3ee59bf507abdb41f31b919ff7019_to_t_bytes4_nonPadded_inplace_fromStack(pos) {\n        mstore(pos, \" wei\")\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395_t_string_memory_ptr_t_stringliteral_6884c8765ed9c3ce28a01297f38e5acbb4b3ee59bf507abdb41f31b919ff7019__to_t_bytes5_t_string_memory_ptr_t_bytes4__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_stringliteral_e5d3ceb3d29e112ca6b45218f95465de8a115a6a16b5ac56acd727970cb2d395_to_t_bytes5_nonPadded_inplace_fromStack( pos)\n        pos := add(pos, 5)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        abi_encode_t_stringliteral_6884c8765ed9c3ce28a01297f38e5acbb4b3ee59bf507abdb41f31b919ff7019_to_t_bytes4_nonPadded_inplace_fromStack( pos)\n        pos := add(pos, 4)\n\n        end := pos\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_11c0e650c89aa2a2bcc82172d574c83a55d46b332c6c5d528dd67e12fe46a726(memPtr) {\n\n        mstore(add(memPtr, 0), \"OnCanDoubleDownTurn_Only\")\n\n    }\n\n    function abi_encode_t_stringliteral_11c0e650c89aa2a2bcc82172d574c83a55d46b332c6c5d528dd67e12fe46a726_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_11c0e650c89aa2a2bcc82172d574c83a55d46b332c6c5d528dd67e12fe46a726(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_11c0e650c89aa2a2bcc82172d574c83a55d46b332c6c5d528dd67e12fe46a726__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_11c0e650c89aa2a2bcc82172d574c83a55d46b332c6c5d528dd67e12fe46a726_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_t_stringliteral_7800ecc545656055dd459b5ea70d2d0ec79bc697c86eb523259a8e50e1652be1_to_t_bytes23_nonPadded_inplace_fromStack(pos) {\n        mstore(pos, \" Player won split hand.\")\n    }\n\n    function abi_encode_tuple_packed_t_string_storage_t_stringliteral_7800ecc545656055dd459b5ea70d2d0ec79bc697c86eb523259a8e50e1652be1__to_t_string_memory_ptr_t_bytes23__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        abi_encode_t_stringliteral_7800ecc545656055dd459b5ea70d2d0ec79bc697c86eb523259a8e50e1652be1_to_t_bytes23_nonPadded_inplace_fromStack( pos)\n        pos := add(pos, 23)\n\n        end := pos\n    }\n\n    function abi_encode_t_stringliteral_514ea601867e3f587ad35939476f254258c9acad4a417792829c4ad92621b30a_to_t_bytes24_nonPadded_inplace_fromStack(pos) {\n        mstore(pos, \" Player lost split hand.\")\n    }\n\n    function abi_encode_tuple_packed_t_string_storage_t_stringliteral_514ea601867e3f587ad35939476f254258c9acad4a417792829c4ad92621b30a__to_t_string_memory_ptr_t_bytes24__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        abi_encode_t_stringliteral_514ea601867e3f587ad35939476f254258c9acad4a417792829c4ad92621b30a_to_t_bytes24_nonPadded_inplace_fromStack( pos)\n        pos := add(pos, 24)\n\n        end := pos\n    }\n\n    function abi_encode_t_stringliteral_c78e2f0190d9b2a72f3ca17298f686a31c20707bc8e3a5b02a40c96e4fee0189_to_t_bytes24_nonPadded_inplace_fromStack(pos) {\n        mstore(pos, \" StandOff on split hand!\")\n    }\n\n    function abi_encode_tuple_packed_t_string_storage_t_stringliteral_c78e2f0190d9b2a72f3ca17298f686a31c20707bc8e3a5b02a40c96e4fee0189__to_t_string_memory_ptr_t_bytes24__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        abi_encode_t_stringliteral_c78e2f0190d9b2a72f3ca17298f686a31c20707bc8e3a5b02a40c96e4fee0189_to_t_bytes24_nonPadded_inplace_fromStack( pos)\n        pos := add(pos, 24)\n\n        end := pos\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x622E5026 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x622E5026 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x7CE2974D EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x9AD01E3E EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xA1E564B1 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xE8A80E9A EQ PUSH2 0x302 JUMPI PUSH2 0x144 JUMP JUMPDEST DUP1 PUSH4 0x24603EEA EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x39AE2133 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x55D842D7 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x58C5A7CC EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x5A6D41A0 EQ PUSH2 0x24A JUMPI PUSH2 0x144 JUMP JUMPDEST CALLDATASIZE PUSH2 0x144 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x109 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B SWAP1 PUSH2 0x42CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F2 SWAP1 PUSH2 0x433A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x203 PUSH2 0x319 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x74F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0xB71 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH2 0xEE1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x4395 JUMP JUMPDEST PUSH2 0x1158 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x14D6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29F PUSH2 0x17B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4441 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x4804 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x1F25 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH2 0x2415 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x392 SWAP1 PUSH2 0x4872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH5 0xE8D4A51000 CALLVALUE GT DUP1 ISZERO PUSH2 0x3B7 JUMPI POP PUSH8 0x8AC7230489E80000 CALLVALUE GT ISZERO JUMPDEST PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3ED SWAP1 PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3FE PUSH2 0x40AB JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP CALLVALUE DUP2 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP CALLVALUE DUP2 PUSH1 0x60 ADD DUP2 DUP2 MLOAD PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP CALLER DUP2 PUSH1 0x20 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F6E747261637420506169642E000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH2 0x2E0 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x4C6 SWAP1 PUSH2 0x4961 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD SSTORE PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0xB ADD SSTORE PUSH2 0x180 DUP3 ADD MLOAD DUP2 PUSH1 0xC ADD SSTORE PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0xD ADD SSTORE PUSH2 0x1C0 DUP3 ADD MLOAD DUP2 PUSH1 0xE ADD SSTORE PUSH2 0x1E0 DUP3 ADD MLOAD DUP2 PUSH1 0xF ADD SSTORE PUSH2 0x200 DUP3 ADD MLOAD DUP2 PUSH1 0x10 ADD SSTORE PUSH2 0x220 DUP3 ADD MLOAD DUP2 PUSH1 0x11 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x240 DUP3 ADD MLOAD DUP2 PUSH1 0x11 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x260 DUP3 ADD MLOAD DUP2 PUSH1 0x11 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x280 DUP3 ADD MLOAD DUP2 PUSH1 0x11 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2A0 DUP3 ADD MLOAD DUP2 PUSH1 0x11 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2C0 DUP3 ADD MLOAD DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2E0 DUP3 ADD MLOAD DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x6AF SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP SWAP1 POP POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x60 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 ADD MLOAD PUSH32 0x8A045E8CA90ABBB5FAAC5664EF1AB1A17450AF55E4C7C1904CFF223B299D0B71 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B5 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x840 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x4D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x11 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DE SWAP1 PUSH2 0x4D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x946 PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0xA ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0xA ADD SLOAD EQ DUP1 ISZERO PUSH2 0x966 JUMPI POP PUSH1 0xB DUP2 PUSH1 0xB ADD SLOAD LT JUMPDEST ISZERO PUSH2 0x993 JUMPI PUSH1 0xB DUP2 PUSH1 0xA ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x11 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x11 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAE5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C617965722773205475726E2E000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x9F0 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP DUP1 PUSH1 0xA ADD SLOAD DUP2 PUSH1 0xC ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x11 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xA32 JUMPI POP PUSH1 0x15 DUP2 PUSH1 0xC ADD SLOAD GT JUMPDEST ISZERO PUSH2 0xA71 JUMPI PUSH1 0xA DUP2 PUSH1 0xC ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA4C SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x15 DUP2 PUSH1 0xC ADD SLOAD GT ISZERO PUSH2 0xAE0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x545B PUSH1 0x23 SWAP2 CODECOPY DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xABD SWAP1 PUSH2 0x4961 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xB6E JUMP JUMPDEST DUP1 PUSH1 0xA ADD SLOAD DUP2 PUSH1 0xB ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x11 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xB26 JUMPI POP PUSH1 0x15 DUP2 PUSH1 0xB ADD SLOAD GT JUMPDEST ISZERO PUSH2 0xB65 JUMPI PUSH1 0xA DUP2 PUSH1 0xB ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xB6D PUSH2 0x271B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD7 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC59 SWAP1 PUSH2 0x4D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x11 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD00 SWAP1 PUSH2 0x4D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x11 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD51 SWAP1 PUSH2 0x4E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xB DUP2 PUSH1 0x8 ADD SLOAD SUB PUSH2 0xDB9 JUMPI PUSH1 0xB DUP2 PUSH1 0xB ADD DUP2 SWAP1 SSTORE POP PUSH1 0xB DUP2 PUSH1 0xC ADD DUP2 SWAP1 SSTORE POP PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0xB ADD SLOAD PUSH2 0xDCA SWAP2 SWAP1 PUSH2 0x4E5D JUMP JUMPDEST DUP2 PUSH1 0xB ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB ADD SLOAD DUP2 PUSH1 0xC ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x11 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE31 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xB DUP2 PUSH1 0x8 ADD SLOAD SUB PUSH2 0xEDE JUMPI PUSH2 0xE62 PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0xA ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xA ADD SLOAD DUP2 PUSH1 0xC ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE82 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE91 PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0xA ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xA ADD SLOAD DUP2 PUSH1 0xB ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEB1 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xEDD PUSH2 0x28C0 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF47 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0xFD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC9 SWAP1 PUSH2 0x4D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x11 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1079 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1070 SWAP1 PUSH2 0x4D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x11 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10F3 JUMPI PUSH2 0x10EE PUSH2 0x28C0 JUMP JUMPDEST PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x545B PUSH1 0x23 SWAP2 CODECOPY DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x111C SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1132 SWAP1 PUSH2 0x4961 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BE SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x1249 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1240 SWAP1 PUSH2 0x4D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x11 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x12F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E8 SWAP1 PUSH2 0x4EDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH5 0x174876E800 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x130E JUMPI POP PUSH8 0xDE0B6B3A7640000 DUP3 GT ISZERO JUMPDEST PUSH2 0x134D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1344 SWAP1 PUSH2 0x4F46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x1361 JUMPI POP DUP1 PUSH1 0x2 ADD SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1397 SWAP1 PUSH2 0x4FB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13B4 SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x11 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x13E6 JUMPI POP DUP1 PUSH1 0x11 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x140B JUMPI DUP2 DUP2 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13FF SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1415 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1447 SWAP1 PUSH2 0x4961 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x11 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1477 JUMPI POP DUP1 PUSH1 0x11 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x42657420506C616365642E000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x14C2 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH2 0x14D2 JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x29DF JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1545 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153C SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x15C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BE SWAP1 PUSH2 0x4D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x11 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x166E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1665 SWAP1 PUSH2 0x4D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x11 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x16BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B6 SWAP1 PUSH2 0x501E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x16D0 SWAP2 SWAP1 PUSH2 0x4E5D JUMP JUMPDEST DUP2 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x7 ADD SLOAD GT DUP1 ISZERO PUSH2 0x16F4 JUMPI POP DUP1 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0x7 ADD SLOAD GT ISZERO JUMPDEST PUSH2 0x1733 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172A SWAP1 PUSH2 0x4FB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 ADD SLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x174B SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C617965722773205475726E2E000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x1798 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x300 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xE DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xF DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x10 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x12 DUP3 ADD DUP1 SLOAD PUSH2 0x19D3 SWAP1 PUSH2 0x4A07 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19FF SWAP1 PUSH2 0x4A07 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH2 0x2E0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A6D SWAP2 SWAP1 PUSH2 0x50A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP13 POP PUSH2 0x1A8C DUP2 PUSH2 0x100 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A9C SWAP2 SWAP1 PUSH2 0x50A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP12 POP PUSH2 0x1ABB DUP2 PUSH2 0x120 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1ACB SWAP2 SWAP1 PUSH2 0x50A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP11 POP PUSH2 0x1AEA DUP2 PUSH2 0x140 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AFA SWAP2 SWAP1 PUSH2 0x50A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP10 POP PUSH2 0x1B19 DUP2 PUSH2 0x160 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B29 SWAP2 SWAP1 PUSH2 0x50EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP9 POP PUSH2 0x1B48 DUP2 PUSH2 0x180 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B58 SWAP2 SWAP1 PUSH2 0x50EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP8 POP PUSH2 0x1B77 DUP2 PUSH2 0x1A0 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B87 SWAP2 SWAP1 PUSH2 0x50A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP7 POP PUSH2 0x1BA6 DUP2 PUSH2 0x1C0 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BB6 SWAP2 SWAP1 PUSH2 0x50A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP6 POP PUSH2 0x1BD5 DUP2 PUSH2 0x1E0 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BE5 SWAP2 SWAP1 PUSH2 0x50A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP5 POP PUSH2 0x1C04 DUP2 PUSH2 0x200 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C14 SWAP2 SWAP1 PUSH2 0x50EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 POP PUSH2 0x1C32 DUP2 PUSH1 0xC0 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C42 SWAP2 SWAP1 PUSH2 0x5138 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP PUSH2 0x1C60 DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C70 SWAP2 SWAP1 PUSH2 0x5138 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 SWAP12 JUMP JUMPDEST PUSH2 0x1C98 PUSH2 0x40AB JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x300 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xE DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xF DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x10 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x12 DUP3 ADD DUP1 SLOAD PUSH2 0x1E9E SWAP1 PUSH2 0x4A07 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1ECA SWAP1 PUSH2 0x4A07 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F17 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EEC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F17 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1EFA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F8B SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x2016 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x200D SWAP1 PUSH2 0x4D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x300 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xE DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xF DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x10 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x11 DUP3 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x12 DUP3 ADD DUP1 SLOAD PUSH2 0x221E SWAP1 PUSH2 0x4A07 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x224A SWAP1 PUSH2 0x4A07 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2297 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x226C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2297 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x227A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH2 0x2C0 ADD MLOAD ISZERO PUSH2 0x22E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22DF SWAP1 PUSH2 0x4EDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD SWAP1 POP PUSH1 0x0 SELFBALANCE LT ISZERO DUP1 ISZERO PUSH2 0x2305 JUMPI POP DUP2 PUSH1 0x40 ADD MLOAD SELFBALANCE LT JUMPDEST ISZERO PUSH2 0x230E JUMPI SELFBALANCE SWAP1 POP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x231F JUMPI PUSH2 0x231E PUSH2 0x516D JUMP JUMPDEST JUMPDEST PUSH2 0x2328 CALLER PUSH2 0x307B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x236E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x2378 CALLER PUSH2 0x3342 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x23C8 JUMPI PUSH2 0x23C7 PUSH2 0x516D JUMP JUMPDEST JUMPDEST DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x0 ADD MLOAD PUSH32 0x250EFCB6BE2A0AC5605D1CF71328B5851470F02F783CE2DF316489C41BA96EDD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x247B SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x2506 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24FD SWAP1 PUSH2 0x4D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x11 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x25AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25A4 SWAP1 PUSH2 0x4D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x11 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x25FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F5 SWAP1 PUSH2 0x51E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2662 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2687 PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0xA ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0xA ADD SLOAD EQ DUP1 ISZERO PUSH2 0x26A7 JUMPI POP PUSH1 0xB DUP2 PUSH1 0xB ADD SLOAD LT JUMPDEST ISZERO PUSH2 0x26D4 JUMPI PUSH1 0xB DUP2 PUSH1 0xA ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x11 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xA ADD SLOAD DUP2 PUSH1 0xB ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x26EC SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x26FB PUSH2 0x28C0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2708 PUSH2 0x35FC JUMP JUMPDEST SWAP1 POP PUSH1 0xA DUP2 GT ISZERO PUSH2 0x2718 JUMPI PUSH1 0xA SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x15 DUP2 PUSH1 0xB ADD SLOAD GT ISZERO PUSH2 0x2875 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C6179657220427573742E0000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x27C4 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x7 ADD SLOAD EQ PUSH2 0x2839 JUMPI PUSH2 0x27D9 PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0xE ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xE ADD SLOAD DUP2 PUSH1 0x10 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x27F9 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x15 DUP2 PUSH1 0x10 ADD SLOAD SUB PUSH2 0x2838 JUMPI PUSH1 0x2 DUP2 PUSH1 0x7 ADD SLOAD PUSH2 0x281D SWAP2 SWAP1 PUSH2 0x5208 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2830 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0x2852 JUMPI PUSH2 0x284D PUSH2 0x28C0 JUMP JUMPDEST PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x28BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C617965722773205475726E2E000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x28BB SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x291E PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0xE ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0xE ADD SLOAD EQ DUP1 ISZERO PUSH2 0x293E JUMPI POP PUSH1 0xB DUP2 PUSH1 0xD ADD SLOAD LT JUMPDEST ISZERO PUSH2 0x294E JUMPI PUSH1 0xB DUP2 PUSH1 0xE ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xE ADD SLOAD DUP2 PUSH1 0xD ADD SLOAD PUSH2 0x2962 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST DUP2 PUSH1 0x10 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x11 DUP2 PUSH1 0x10 ADD SLOAD LT ISZERO PUSH2 0x29D4 JUMPI PUSH2 0x2980 PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0xF ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0xF ADD SLOAD EQ DUP1 ISZERO PUSH2 0x29A0 JUMPI POP PUSH1 0xB DUP2 PUSH1 0x10 ADD SLOAD LT JUMPDEST ISZERO PUSH2 0x29B0 JUMPI PUSH1 0xB DUP2 PUSH1 0xF ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xF ADD SLOAD DUP2 PUSH1 0x10 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x29C8 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x296B JUMP JUMPDEST PUSH2 0x29DC PUSH2 0x36C4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x9 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0xA ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0xB ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0xC ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0xD ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0xE ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0xF ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x10 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2A72 PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x8 ADD SLOAD SUB PUSH2 0x2AAE JUMPI PUSH1 0xB DUP2 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x11 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x2AB6 PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0xD ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2AC6 PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0x9 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x9 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x2AE6 JUMPI POP PUSH1 0xB DUP2 PUSH1 0x8 ADD SLOAD LT JUMPDEST ISZERO PUSH2 0x2B13 JUMPI PUSH1 0xB DUP2 PUSH1 0x9 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x11 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x9 ADD SLOAD DUP2 PUSH1 0x8 ADD SLOAD PUSH2 0x2B27 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST DUP2 PUSH1 0xB ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0xD ADD SLOAD SUB PUSH2 0x2B63 JUMPI PUSH1 0xB DUP2 PUSH1 0xD ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x11 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xE ADD SLOAD DUP2 PUSH1 0xD ADD SLOAD PUSH2 0x2B77 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST DUP2 PUSH1 0x10 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x15 DUP2 PUSH1 0xB ADD SLOAD SUB PUSH2 0x2D05 JUMPI PUSH1 0xA DUP2 PUSH1 0xD ADD SLOAD SUB PUSH2 0x2BDB JUMPI PUSH2 0x2B9F PUSH2 0x26FE JUMP JUMPDEST DUP2 PUSH1 0xE ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0xE ADD SLOAD SUB PUSH2 0x2BBE JUMPI PUSH1 0xB DUP2 PUSH1 0xE ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xE ADD SLOAD DUP2 PUSH1 0xD ADD SLOAD PUSH2 0x2BD2 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST DUP2 PUSH1 0x10 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xB ADD SLOAD DUP2 PUSH1 0x10 ADD SLOAD SUB PUSH2 0x2C55 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5374616E644F6666210000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2C30 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP DUP1 PUSH1 0x6 ADD SLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2C49 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x426C61636B4A61636B2120506C617965722057696E732E000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2C9B SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x2 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x2CAD SWAP2 SWAP1 PUSH2 0x4E5D JUMP JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x6 ADD SLOAD PUSH2 0x2CBE SWAP2 SWAP1 PUSH2 0x5208 JUMP JUMPDEST PUSH2 0x2CC8 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2CDB SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2DB1 JUMP JUMPDEST DUP1 PUSH1 0x11 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2D68 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C617965722773205475726E2E2057616E7420496E737572616E63653F0000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2D62 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH2 0x2DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C617965722773205475726E2E000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2DAE SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP JUMPDEST JUMPDEST DUP1 PUSH1 0x9 ADD SLOAD DUP2 PUSH1 0x8 ADD SLOAD SUB PUSH2 0x2E6C JUMPI DUP1 PUSH1 0x11 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2E06 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x54B4 PUSH1 0x30 SWAP2 CODECOPY DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2E00 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH2 0x2E4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C617965722773205475726E2E20506C617965722063616E2053706C69742E DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2E4C SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x11 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x9 DUP2 PUSH1 0xB ADD SLOAD EQ DUP1 PUSH2 0x2E83 JUMPI POP PUSH1 0xA DUP2 PUSH1 0xB ADD SLOAD EQ JUMPDEST DUP1 PUSH2 0x2E92 JUMPI POP PUSH1 0xB DUP2 PUSH1 0xB ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x2FAA JUMPI DUP1 PUSH1 0x11 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2F1F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x547E PUSH1 0x36 SWAP2 CODECOPY DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2ED7 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP DUP1 PUSH1 0x11 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2F1A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x54E4 PUSH1 0x3F SWAP2 CODECOPY DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2F18 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP JUMPDEST PUSH2 0x2F8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5552 PUSH1 0x26 SWAP2 CODECOPY DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2F48 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP DUP1 PUSH1 0x11 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2F8B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5523 PUSH1 0x2F SWAP2 CODECOPY DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x2F89 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x11 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x2FBC DUP5 PUSH2 0x3F58 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FDB JUMPI PUSH2 0x2FDA PUSH2 0x49A9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x300D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x3070 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x3064 JUMPI PUSH2 0x3063 PUSH2 0x4E2E JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x301B JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xA DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xB DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xC DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xD DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xE DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xF DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x10 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x12 DUP3 ADD PUSH1 0x0 PUSH2 0x32F6 SWAP2 SWAP1 PUSH2 0x4182 JUMP JUMPDEST POP POP DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x1D7497D6FD179A17C5C10FA701D5DD57FB68542C79473B9759B789ED784D5C27 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO DUP1 PUSH2 0x33E7 JUMPI POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x35B6 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xA DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xB DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xC DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xD DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xE DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0xF DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x10 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x11 DUP3 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x12 DUP3 ADD PUSH1 0x0 PUSH2 0x35B3 SWAP2 SWAP1 PUSH2 0x4182 JUMP JUMPDEST POP POP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFA63CAFECF2C1C6AE30E5B5E06570BA0BF03859678E781644BFA3A0D6764343D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x15 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x3610 SWAP2 SWAP1 PUSH2 0x5208 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x0 SLOAD PREVRANDAO TIMESTAMP PUSH2 0x362A SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST PUSH2 0x3634 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST PUSH2 0x363E SWAP2 SWAP1 PUSH2 0x524A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0xD PUSH1 0x1 NUMBER PUSH2 0x3651 SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST BLOCKHASH DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3664 SWAP3 SWAP2 SWAP1 PUSH2 0x52C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x3687 SWAP2 SWAP1 PUSH2 0x524A JUMP JUMPDEST PUSH2 0x3691 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x36A5 SWAP1 PUSH2 0x4961 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH4 0x1908B100 PUSH1 0x0 SLOAD GT ISZERO PUSH2 0x36C0 JUMPI DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x15 DUP2 PUSH1 0x10 ADD SLOAD GT ISZERO PUSH2 0x3920 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4465616C657220427573742E0000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x376D SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0x38A8 JUMPI PUSH1 0x15 DUP2 PUSH1 0xB ADD SLOAD GT PUSH2 0x380A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4465616C657220427573742E20506C617965722057696E732E00000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x37E9 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP DUP1 PUSH1 0x6 ADD SLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3802 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x15 DUP2 PUSH1 0xC ADD SLOAD GT PUSH2 0x386E JUMPI DUP1 PUSH1 0x12 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x382A SWAP2 SWAP1 PUSH2 0x539C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3849 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP DUP1 PUSH1 0x6 ADD SLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3862 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x38A3 JUMP JUMPDEST DUP1 PUSH1 0x12 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3882 SWAP2 SWAP1 PUSH2 0x53E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x38A1 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP JUMPDEST PUSH2 0x391B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4465616C657220427573742E20506C617965722057696E732E00000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x38EE SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x2 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x3900 SWAP2 SWAP1 PUSH2 0x5208 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3913 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x3F55 JUMP JUMPDEST PUSH1 0x15 DUP2 PUSH1 0x10 ADD SLOAD SUB PUSH2 0x3B2F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4465616C65722057696E732E0000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3972 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x7 ADD SLOAD EQ PUSH2 0x39C8 JUMPI PUSH1 0x2 DUP2 PUSH1 0x7 ADD SLOAD PUSH2 0x39AD SWAP2 SWAP1 PUSH2 0x5208 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x39C0 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x15 DUP2 PUSH1 0xB ADD SLOAD SUB PUSH2 0x3A78 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5374616E644F6666210000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3A1A SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0x3A57 JUMPI PUSH1 0x2 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x3A38 SWAP2 SWAP1 PUSH2 0x4E5D JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3A4B SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3A77 JUMP JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3A6F SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0x3B2A JUMPI PUSH1 0x15 DUP2 PUSH1 0xC ADD SLOAD SUB PUSH2 0x3AF4 JUMPI DUP1 PUSH1 0x12 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3AA4 SWAP2 SWAP1 PUSH2 0x5434 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3AC3 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x2 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x3AD5 SWAP2 SWAP1 PUSH2 0x4E5D JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3AE8 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3B29 JUMP JUMPDEST DUP1 PUSH1 0x12 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3B08 SWAP2 SWAP1 PUSH2 0x53E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3B27 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH2 0x3F54 JUMP JUMPDEST PUSH1 0x15 DUP2 PUSH1 0xB ADD SLOAD LT DUP1 ISZERO PUSH2 0x3B62 JUMPI POP DUP1 PUSH1 0xB ADD SLOAD PUSH1 0x15 PUSH2 0x3B4F SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST DUP2 PUSH1 0x10 ADD SLOAD PUSH1 0x15 PUSH2 0x3B60 SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x3C2C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5374616E644F6666210000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3BAD SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0x3C07 JUMPI PUSH1 0x2 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x3BE8 SWAP2 SWAP1 PUSH2 0x4E5D JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3BFB SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3C27 JUMP JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3C1F SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x3D8E JUMP JUMPDEST PUSH1 0x15 DUP2 PUSH1 0xB ADD SLOAD GT DUP1 PUSH2 0x3C5E JUMPI POP DUP1 PUSH1 0xB ADD SLOAD PUSH1 0x15 PUSH2 0x3C4B SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST DUP2 PUSH1 0x10 ADD SLOAD PUSH1 0x15 PUSH2 0x3C5C SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x3CCC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4465616C65722057696E732E0000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3CA9 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3D8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506C617965722057696E732E0000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3D12 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0x3D60 JUMPI DUP1 PUSH1 0x6 ADD SLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3D54 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3D8C JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x3D71 SWAP2 SWAP1 PUSH2 0x5208 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3D84 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0x3F53 JUMPI PUSH1 0x15 DUP2 PUSH1 0xC ADD SLOAD LT DUP1 ISZERO PUSH2 0x3DCD JUMPI POP DUP1 PUSH1 0xC ADD SLOAD PUSH1 0x15 PUSH2 0x3DBA SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST DUP2 PUSH1 0x10 ADD SLOAD PUSH1 0x15 PUSH2 0x3DCB SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x3E53 JUMPI DUP1 PUSH1 0x12 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3DE6 SWAP2 SWAP1 PUSH2 0x5434 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3E05 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x3E34 SWAP2 SWAP1 PUSH2 0x4E5D JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3E47 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3F52 JUMP JUMPDEST PUSH1 0x15 DUP2 PUSH1 0xC ADD SLOAD GT DUP1 PUSH2 0x3E85 JUMPI POP DUP1 PUSH1 0xC ADD SLOAD PUSH1 0x15 PUSH2 0x3E72 SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST DUP2 PUSH1 0x10 ADD SLOAD PUSH1 0x15 PUSH2 0x3E83 SWAP2 SWAP1 PUSH2 0x4D8E JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x3EE0 JUMPI DUP1 PUSH1 0x12 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3E9E SWAP2 SWAP1 PUSH2 0x53E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3EBD SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3F51 JUMP JUMPDEST DUP1 PUSH1 0x12 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3EF4 SWAP2 SWAP1 PUSH2 0x539C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x12 ADD SWAP1 DUP2 PUSH2 0x3F13 SWAP2 SWAP1 PUSH2 0x4BE4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x11 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x6 ADD SLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3F49 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x3FB6 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x3FAC JUMPI PUSH2 0x3FAB PUSH2 0x4E2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x3FF3 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x3FE9 JUMPI PUSH2 0x3FE8 PUSH2 0x4E2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x4022 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x4018 JUMPI PUSH2 0x4017 PUSH2 0x4E2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x404B JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x4041 JUMPI PUSH2 0x4040 PUSH2 0x4E2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x4070 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x4066 JUMPI PUSH2 0x4065 PUSH2 0x4E2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x4093 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x4089 JUMPI PUSH2 0x4088 PUSH2 0x4E2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x40A2 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x300 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x418E SWAP1 PUSH2 0x4A07 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x41A0 JUMPI POP PUSH2 0x41BF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x41BE SWAP2 SWAP1 PUSH2 0x41C2 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x41DB JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x41C3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573735F494E56000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4226 PUSH1 0xB DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4231 DUP3 PUSH2 0x41F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4255 DUP2 PUSH2 0x4219 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C65617365207573652053746172744E657747616D652046756E6374696F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F2070617920636F6E74726163742E000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B8 PUSH1 0x31 DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x42C3 DUP3 PUSH2 0x425C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42E7 DUP2 PUSH2 0x42AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E5F444E452E00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4324 PUSH1 0xD DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x432F DUP3 PUSH2 0x42EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4353 DUP2 PUSH2 0x4317 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4372 DUP2 PUSH2 0x435F JUMP JUMPDEST DUP2 EQ PUSH2 0x437D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x438F DUP2 PUSH2 0x4369 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43AB JUMPI PUSH2 0x43AA PUSH2 0x435A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43B9 DUP5 DUP3 DUP6 ADD PUSH2 0x4380 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x43EB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x43D0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4413 DUP3 PUSH2 0x43C2 JUMP JUMPDEST PUSH2 0x441D DUP2 DUP6 PUSH2 0x41DF JUMP JUMPDEST SWAP4 POP PUSH2 0x442D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x43CD JUMP JUMPDEST PUSH2 0x4436 DUP2 PUSH2 0x43F7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x445C DUP2 DUP16 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4470 DUP2 DUP15 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4484 DUP2 DUP14 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4498 DUP2 DUP13 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x44AC DUP2 DUP12 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x44C0 DUP2 DUP11 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x44D4 DUP2 DUP10 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x44E8 DUP2 DUP9 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x44FD DUP2 DUP8 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x4512 DUP2 DUP7 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x4527 DUP2 DUP6 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x453C DUP2 DUP5 PUSH2 0x4408 JUMP JUMPDEST SWAP1 POP SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4558 DUP2 PUSH2 0x435F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4589 DUP3 PUSH2 0x455E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4599 DUP2 PUSH2 0x457E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45B4 DUP2 PUSH2 0x459F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45D6 DUP3 PUSH2 0x43C2 JUMP JUMPDEST PUSH2 0x45E0 DUP2 DUP6 PUSH2 0x45BA JUMP JUMPDEST SWAP4 POP PUSH2 0x45F0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x43CD JUMP JUMPDEST PUSH2 0x45F9 DUP2 PUSH2 0x43F7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x300 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x461D PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x4630 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x4590 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x4643 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x4656 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x4669 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x467C PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x468F PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x46A2 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x46B7 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x120 DUP4 ADD MLOAD PUSH2 0x46CC PUSH2 0x120 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x140 DUP4 ADD MLOAD PUSH2 0x46E1 PUSH2 0x140 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x160 DUP4 ADD MLOAD PUSH2 0x46F6 PUSH2 0x160 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x180 DUP4 ADD MLOAD PUSH2 0x470B PUSH2 0x180 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x1A0 DUP4 ADD MLOAD PUSH2 0x4720 PUSH2 0x1A0 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x1C0 DUP4 ADD MLOAD PUSH2 0x4735 PUSH2 0x1C0 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x1E0 DUP4 ADD MLOAD PUSH2 0x474A PUSH2 0x1E0 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x200 DUP4 ADD MLOAD PUSH2 0x475F PUSH2 0x200 DUP7 ADD DUP3 PUSH2 0x454F JUMP JUMPDEST POP PUSH2 0x220 DUP4 ADD MLOAD PUSH2 0x4774 PUSH2 0x220 DUP7 ADD DUP3 PUSH2 0x45AB JUMP JUMPDEST POP PUSH2 0x240 DUP4 ADD MLOAD PUSH2 0x4789 PUSH2 0x240 DUP7 ADD DUP3 PUSH2 0x45AB JUMP JUMPDEST POP PUSH2 0x260 DUP4 ADD MLOAD PUSH2 0x479E PUSH2 0x260 DUP7 ADD DUP3 PUSH2 0x45AB JUMP JUMPDEST POP PUSH2 0x280 DUP4 ADD MLOAD PUSH2 0x47B3 PUSH2 0x280 DUP7 ADD DUP3 PUSH2 0x45AB JUMP JUMPDEST POP PUSH2 0x2A0 DUP4 ADD MLOAD PUSH2 0x47C8 PUSH2 0x2A0 DUP7 ADD DUP3 PUSH2 0x45AB JUMP JUMPDEST POP PUSH2 0x2C0 DUP4 ADD MLOAD PUSH2 0x47DD PUSH2 0x2C0 DUP7 ADD DUP3 PUSH2 0x45AB JUMP JUMPDEST POP PUSH2 0x2E0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH2 0x2E0 DUP7 ADD MSTORE PUSH2 0x47F7 DUP3 DUP3 PUSH2 0x45CB JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x481E DUP2 DUP5 PUSH2 0x4604 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4578697374696E67506C617965725F4343460000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x485C PUSH1 0x12 DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4867 DUP3 PUSH2 0x4826 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x488B DUP2 PUSH2 0x484F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F7369745F4C696D697400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48C8 PUSH1 0xD DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x48D3 DUP3 PUSH2 0x4892 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48F7 DUP2 PUSH2 0x48BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4938 DUP3 PUSH2 0x435F JUMP JUMPDEST SWAP2 POP PUSH2 0x4943 DUP4 PUSH2 0x435F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x495B JUMPI PUSH2 0x495A PUSH2 0x48FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x496C DUP3 PUSH2 0x435F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x499E JUMPI PUSH2 0x499D PUSH2 0x48FE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4A1F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4A32 JUMPI PUSH2 0x4A31 PUSH2 0x49D8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x4A9A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4A5D JUMP JUMPDEST PUSH2 0x4AA4 DUP7 DUP4 PUSH2 0x4A5D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AE1 PUSH2 0x4ADC PUSH2 0x4AD7 DUP5 PUSH2 0x435F JUMP JUMPDEST PUSH2 0x4ABC JUMP JUMPDEST PUSH2 0x435F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AFB DUP4 PUSH2 0x4AC6 JUMP JUMPDEST PUSH2 0x4B0F PUSH2 0x4B07 DUP3 PUSH2 0x4AE8 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4A6A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4B24 PUSH2 0x4B17 JUMP JUMPDEST PUSH2 0x4B2F DUP2 DUP5 DUP5 PUSH2 0x4AF2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4B53 JUMPI PUSH2 0x4B48 PUSH1 0x0 DUP3 PUSH2 0x4B1C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4B35 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4B98 JUMPI PUSH2 0x4B69 DUP2 PUSH2 0x4A38 JUMP JUMPDEST PUSH2 0x4B72 DUP5 PUSH2 0x4A4D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4B81 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4B95 PUSH2 0x4B8D DUP6 PUSH2 0x4A4D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4B34 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BBB PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4B9D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD4 DUP4 DUP4 PUSH2 0x4BAA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4BED DUP3 PUSH2 0x43C2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C06 JUMPI PUSH2 0x4C05 PUSH2 0x49A9 JUMP JUMPDEST JUMPDEST PUSH2 0x4C10 DUP3 SLOAD PUSH2 0x4A07 JUMP JUMPDEST PUSH2 0x4C1B DUP3 DUP3 DUP6 PUSH2 0x4B57 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4C4E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4C3C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4C46 DUP6 DUP3 PUSH2 0x4BC8 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4CAE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4C5C DUP7 PUSH2 0x4A38 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C84 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4C5F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4CA1 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4C9D PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4BAA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x47616D655F444E45000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CEC PUSH1 0x8 DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4CF7 DUP3 PUSH2 0x4CB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D1B DUP2 PUSH2 0x4CDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E506C617965725475726E5F4F6E6C79000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D58 PUSH1 0x11 DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4D63 DUP3 PUSH2 0x4D22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D87 DUP2 PUSH2 0x4D4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D99 DUP3 PUSH2 0x435F JUMP JUMPDEST SWAP2 POP PUSH2 0x4DA4 DUP4 PUSH2 0x435F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4DBC JUMPI PUSH2 0x4DBB PUSH2 0x48FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E43616E53706C69745475726E5F4F6E6C7900000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DF8 PUSH1 0x13 DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4E03 DUP3 PUSH2 0x4DC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4E27 DUP2 PUSH2 0x4DEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4E68 DUP3 PUSH2 0x435F JUMP JUMPDEST SWAP2 POP PUSH2 0x4E73 DUP4 PUSH2 0x435F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4E83 JUMPI PUSH2 0x4E82 PUSH2 0x4E2E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x49734E6577526F756E645F4F6E6C790000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC4 PUSH1 0xF DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4ECF DUP3 PUSH2 0x4E8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4EF3 DUP2 PUSH2 0x4EB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4265745F4C696D69740000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F30 PUSH1 0x9 DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4F3B DUP3 PUSH2 0x4EFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F5F DUP2 PUSH2 0x4F23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x494E535F46756E64730000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F9C PUSH1 0x9 DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4FA7 DUP3 PUSH2 0x4F66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4FCB DUP2 PUSH2 0x4F8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E43616E496E737572655475726E5F4F6E6C79000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5008 PUSH1 0x14 DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x5013 DUP3 PUSH2 0x4FD2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5037 DUP2 PUSH2 0x4FFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x202D2D3E20000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x507A DUP3 PUSH2 0x43C2 JUMP JUMPDEST PUSH2 0x5084 DUP2 DUP6 PUSH2 0x5064 JUMP JUMPDEST SWAP4 POP PUSH2 0x5094 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x43CD JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50AB DUP3 PUSH2 0x503E JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SWAP2 POP PUSH2 0x50BB DUP3 DUP5 PUSH2 0x506F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x202D2D2D2D2D2D3E200000000000000000000000000000000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50F7 DUP3 PUSH2 0x50C6 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP2 POP PUSH2 0x5107 DUP3 DUP5 PUSH2 0x506F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2077656900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5143 DUP3 PUSH2 0x503E JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SWAP2 POP PUSH2 0x5153 DUP3 DUP5 PUSH2 0x506F JUMP JUMPDEST SWAP2 POP PUSH2 0x515E DUP3 PUSH2 0x5112 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4F6E43616E446F75626C65446F776E5475726E5F4F6E6C790000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D2 PUSH1 0x18 DUP4 PUSH2 0x41DF JUMP JUMPDEST SWAP2 POP PUSH2 0x51DD DUP3 PUSH2 0x519C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5201 DUP2 PUSH2 0x51C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5213 DUP3 PUSH2 0x435F JUMP JUMPDEST SWAP2 POP PUSH2 0x521E DUP4 PUSH2 0x435F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x522C DUP2 PUSH2 0x435F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x5243 JUMPI PUSH2 0x5242 PUSH2 0x48FE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5255 DUP3 PUSH2 0x435F JUMP JUMPDEST SWAP2 POP PUSH2 0x5260 DUP4 PUSH2 0x435F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5270 JUMPI PUSH2 0x526F PUSH2 0x4E2E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52A0 PUSH2 0x529B DUP3 PUSH2 0x527B JUMP JUMPDEST PUSH2 0x5285 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52C1 PUSH2 0x52BC DUP3 PUSH2 0x435F JUMP JUMPDEST PUSH2 0x52A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52D3 DUP3 DUP6 PUSH2 0x528F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x52E3 DUP3 DUP5 PUSH2 0x52B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x5300 DUP2 PUSH2 0x4A07 JUMP JUMPDEST PUSH2 0x530A DUP2 DUP7 PUSH2 0x5064 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x5325 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x533A JUMPI PUSH2 0x536D JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x536D JUMP JUMPDEST PUSH2 0x5343 DUP6 PUSH2 0x4A38 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5365 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5346 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x20506C6179657220776F6E2073706C69742068616E642E000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53A8 DUP3 DUP5 PUSH2 0x52F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x53B3 DUP3 PUSH2 0x5376 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x20506C61796572206C6F73742073706C69742068616E642E0000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53F4 DUP3 DUP5 PUSH2 0x52F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x53FF DUP3 PUSH2 0x53C2 JUMP JUMPDEST PUSH1 0x18 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x205374616E644F6666206F6E2073706C69742068616E64210000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5440 DUP3 DUP5 PUSH2 0x52F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x544B DUP3 PUSH2 0x540E JUMP JUMPDEST PUSH1 0x18 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID MSTORE8 PUSH17 0x6C69742068616E6420636F6D706C657465 0x2E KECCAK256 POP PUSH13 0x617965722773205475726E2E50 PUSH13 0x617965722773205475726E2E20 JUMPI PUSH2 0x6E74 KECCAK256 0x49 PUSH15 0x737572616E63653F20506C61796572 KECCAK256 PUSH4 0x616E2044 PUSH16 0x75626C6520446F776E2E506C61796572 0x27 PUSH20 0x205475726E2E2057616E7420496E737572616E63 PUSH6 0x3F20506C6179 PUSH6 0x722063616E20 MSTORE8 PUSH17 0x6C69742E506C617965722773205475726E 0x2E KECCAK256 JUMPI PUSH2 0x6E74 KECCAK256 0x49 PUSH15 0x737572616E63653F20506C61796572 KECCAK256 PUSH4 0x616E2053 PUSH17 0x6C6974206F7220446F75626C6520446F77 PUSH15 0x2E506C617965722773205475726E2E KECCAK256 POP PUSH13 0x617965722063616E2053706C69 PUSH21 0x206F7220446F75626C6520446F776E2E506C617965 PUSH19 0x2773205475726E2E20506C617965722063616E KECCAK256 PREVRANDAO PUSH16 0x75626C6520446F776E2EA26469706673 PC 0x22 SLT KECCAK256 MSTORE 0x4E SWAP14 0xBF SWAP1 0xC2 SWAP6 CALLDATASIZE 0xCB 0x2E PUSH22 0x5F1D9502E21DE396B037C97617808E6BE6CD579B5D64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"864:26709:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3225:3;3203:26;;:10;:26;;;3195:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;3722:59:::1;;;;;;;;;;:::i;:::-;;;;;;;;864:26709:::0;;;;;;;;;;;3225:3;3203:26;;:10;:26;;;3195:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;3535:23:::1;;;;;;;;;;:::i;:::-;;;;;;;;3913:797:::0;;;:::i;:::-;;9919:1708;;;;;;;;;;;;;:::i;:::-;;14584:1652;;;;;;;;;;;;;:::i;:::-;;11733:708;;;;;;;;;;;;;:::i;:::-;;4869:1106;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;16346:721;;;;;;;;;;;;;:::i;:::-;;25994:1574;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;25747:139;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22549:820;;;;;;;;;;;;;:::i;:::-;;13404:1074;;;;;;;;;;;;;:::i;:::-;;3913:797;4025:1;3983:26;:38;4010:10;3983:38;;;;;;;;;;;;;;;;:43;3975:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1740:9;4123;:31;:68;;;;;1804:8;4158:9;:33;;4123:68;4115:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;4257:16;;:::i;:::-;4296:13;;4286:4;:7;;:23;;;;;4342:9;4322:4;:16;;:29;;;;;;;:::i;:::-;;;;;;;;4386:9;4362:4;:20;;:33;;;;;;;:::i;:::-;;;;;;;;4430:10;4416:4;:11;;:24;;;;;;;;;;;4461:33;;;;;;;;;;;;;;;;;:4;:14;;:33;;;;4507:13;;:15;;;;;;;;;:::i;:::-;;;;;;4560:4;4535:13;:22;4549:4;:7;;;4535:22;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;4616:4;:7;;;4575:26;:38;4602:10;4575:38;;;;;;;;;;;;;;;:48;;;;4681:4;:20;;;4668:4;:11;;;4641:61;;4659:4;:7;;;4641:61;;;;;;;;;;3954:756;3913:797::o;9919:1708::-;3225:3;3203:26;;:10;:26;;;3195:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;10026:1:::1;9984:26;:38;10011:10;9984:38;;;;;;;;;;;;;;;;:43:::0;9976:64:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;10053:17;10073:13;:53;10087:26;:38;10114:10;10087:38;;;;;;;;;;;;;;;;10073:53;;;;;;;;;;;10053:73;;10145:4;:22;;;;;;;;;;;;10137:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;10223:5;10202:4;:18;;;:26;;;;;;;;;;;;;;;;;;10282:5;10266:4;:13;;;:21;;;;;;;;;;;;;;;;;;10341:5;10324:4;:14;;;:22;;;;;;;;;;;;;;;;;;10415:9;:7;:9::i;:::-;10394:4;:18;;:30;;;;10462:1;10440:4;:18;;;:23;:52;;;;;10490:2;10467:4;:20;;;:25;10440:52;10437:208;;;10594:2;10573:4;:18;;:23;;;;10629:4;10611;:15;;;:22;;;;;;;;;;;;;;;;;;10437:208;10671:4;:16;;;;;;;;;;;;10668:952;;;10765:33;;;;;;;;;;;;;;;;::::0;:4:::1;:14;;:33;;;;;;:::i;:::-;;10838:4;:18;;;10813:4;:21;;;:43;;;;;;;:::i;:::-;;;;;;;;10876:4;:15;;;;;;;;;;;;:45;;;;;10919:2;10895:4;:21;;;:26;10876:45;10873:154;;;10967:2;10942:4;:21;;;:27;;;;;;;:::i;:::-;;;;;;;;11006:5;10988:4;:15;;;:23;;;;;;;;;;;;;;;;;;10873:154;11082:2;11058:4;:21;;;:26;11055:202;;;11105:54;;;;;;;;;;;;;;;;;:4;:14;;:54;;;;;;:::i;:::-;;11178:4;:17;;;:19;;;;;;;;;:::i;:::-;;;;;;11235:5;11216:4;:16;;;:24;;;;;;;;;;;;;;;;;;11055:202;10668:952;;;11388:4;:18;;;11364:4;:20;;;:42;;;;;;;:::i;:::-;;;;;;;;11426:4;:15;;;;;;;;;;;;:44;;;;;11468:2;11445:4;:20;;;:25;11426:44;11423:151;;;11514:2;11490:4;:20;;;:26;;;;;;;:::i;:::-;;;;;;;;11553:5;11535:4;:15;;;:23;;;;;;;;;;;;;;;;;;11423:151;11590:18;:16;:18::i;:::-;10668:952;9955:1672;9919:1708::o:0;14584:1652::-;3225:3;3203:26;;:10;:26;;;3195:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;14693:1:::1;14651:26;:38;14678:10;14651:38;;;;;;;;;;;;;;;;:43:::0;14643:64:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;14720:17;14740:13;:53;14754:26;:38;14781:10;14754:38;;;;;;;;;;;;;;;;14740:53;;;;;;;;;;;14720:73;;14812:4;:22;;;;;;;;;;;;14804:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;14875:4;:13;;;;;;;;;;;;14867:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;14954:5;14933:4;:18;;;:26;;;;;;;;;;;;;;;;;;15014:5;14997:4;:14;;;:22;;;;;;;;;;;;;;;;;;15090:2;15070:4;:16;;;:22:::0;15067:257:::1;;15132:2;15109:4;:20;;:25;;;;15173:2;15149:4;:21;;:26;;;;15067:257;;;15252:1;15231:4;:20;;;:22;;;;:::i;:::-;15208:4;:20;;:45;;;;15292:4;:20;;;15268:4;:21;;:44;;;;15067:257;15356:1;15336:4;:17;;:21;;;;15387:4;15368;:16;;;:23;;;;;;;;;;;;;;;;;;15437:5;15412:4;:22;;;:30;;;;;;;;;;;;;;;;;;15490:24;15499:4;:14;;;15490:8;:24::i;:::-;15672:5;15656:4;:13;;;:21;;;;;;;;;;;;;;;;;;15762:2;15742:4;:16;;;:22:::0;15739:490:::1;;15802:9;:7;:9::i;:::-;15781:4;:18;;:30;;;;15924:4;:18;;;15899:4;:21;;;:43;;;;;;;:::i;:::-;;;;;;;;15980:9;:7;:9::i;:::-;15959:4;:18;;:30;;;;16101:4;:18;;;16077:4;:20;;;:42;;;;;;;:::i;:::-;;;;;;;;16167:5;16148:4;:16;;;:24;;;;;;;;;;;;;;;;;;16201:16;:14;:16::i;:::-;15739:490;14622:1614;14584:1652::o:0;11733:708::-;3225:3;3203:26;;:10;:26;;;3195:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;11840:1:::1;11798:26;:38;11825:10;11798:38;;;;;;;;;;;;;;;;:43:::0;11790:64:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;11867:17;11887:13;:53;11901:26;:38;11928:10;11901:38;;;;;;;;;;;;;;;;11887:53;;;;;;;;;;;11867:73;;11959:4;:22;;;;;;;;;;;;11951:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;12046:5;12025:4;:18;;;:26;;;;;;;;;;;;;;;;;;12105:5;12089:4;:13;;;:21;;;;;;;;;;;;;;;;;;12164:5;12147:4;:14;;;:22;;;;;;;;;;;;;;;;;;12213:4;:16;;;;;;;;;;;;12209:225;;12246:16;:14;:16::i;:::-;12209:225;;;12295:54;;;;;;;;;;;;;;;;;:4;:14;;:54;;;;;;:::i;:::-;;12364:4;:17;;;:19;;;;;;;;;:::i;:::-;;;;;;12417:5;12398:4;:16;;;:24;;;;;;;;;;;;;;;;;;12209:225;11769:672;11733:708::o:0;4869:1106::-;3225:3;3203:26;;:10;:26;;;3195:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;4982:1:::1;4940:26;:38;4967:10;4940:38;;;;;;;;;;;;;;;;:43:::0;4932:64:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;5009:17;5029:13;:53;5043:26;:38;5070:10;5043:38;;;;;;;;;;;;;;;;5029:53;;;;;;;;;;;5009:73;;5104:4;:22;;;;;;;;;;;;5103:23;5095:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1864:8;5165:3;:22;;:49;;;;;1923:7;5191:3;:23;;5165:49;5157:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;5284:1;5278:3;:7;:34;;;;;5296:4;:16;;;5289:3;:23;;5278:34;5270:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;5399:3;5379:4;:16;;;:23;;;;;;;:::i;:::-;;;;;;;;5456:4;:18;;;;;;;;;;;;:35;;;;5478:4;:13;;;;;;;;;;;;5456:35;5453:141;;;5526:3;5508:4;:14;;;:21;;;;;;;:::i;:::-;;;;;;;;5453:141;;;5579:3;5562:4;:14;;:20;;;;5453:141;5639:4;5614;:22;;;:29;;;;;;;;;;;;;;;;;;5679:4;:16;;;:18;;;;;;;;;:::i;:::-;;;;;;5825:4;:18;;;;;;;;;;;;:35;;;;5847:4;:13;;;;;;;;;;;;5825:35;5822:146;;;5877:30;;;;;;;;;;;;;;;;::::0;:4:::1;:14;;:30;;;;;;:::i;:::-;;5822:146;;;5941:15;5951:4;5941:9;:15::i;:::-;5822:146;4919:1056;4869:1106:::0;:::o;16346:721::-;3225:3;3203:26;;:10;:26;;;3195:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;16451:1:::1;16409:26;:38;16436:10;16409:38;;;;;;;;;;;;;;;;:43:::0;16401:64:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;16478:17;16498:13;:53;16512:26;:38;16539:10;16512:38;;;;;;;;;;;;;;;;16498:53;;;;;;;;;;;16478:73;;16570:4;:22;;;;;;;;;;;;16562:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;16633:4;:14;;;;;;;;;;;;16625:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;16730:1;16713:4;:14;;;:18;;;;:::i;:::-;16693:4;:17;;:38;;;;16772:1;16752:4;:17;;;:21;:62;;;;;16798:4;:16;;;16777:4;:17;;;:37;;16752:62;16744:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;16903:4;:17;;;16883:4;:16;;;:37;;;;;;;:::i;:::-;;;;;;;;16981:33;;;;;;;;;;;;;;;;::::0;:4:::1;:14;;:33;;;;;;:::i;:::-;;17044:5;17027:4;:14;;;:22;;;;;;;;;;;;;;;;;;16388:679;16346:721::o:0;25994:1574::-;26038:27;26067:25;26116;26143:27;26172:29;26203:30;26257:25;26284;26311:27;26340:29;26393:23;26418:17;26450:16;26469:13;:53;26483:26;:38;26510:10;26483:38;;;;;;;;;;;;;;;;26469:53;;;;;;;;;;;26450:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26582:4;:14;;;26559:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;26543:54;;26645:34;26662:4;:16;;;26645;:34::i;:::-;26622:58;;;;;;;;:::i;:::-;;;;;;;;;;;;;26608:72;;26728:34;26745:4;:16;;;26728;:34::i;:::-;26705:58;;;;;;;;:::i;:::-;;;;;;;;;;;;;26691:72;;26813:36;26830:4;:18;;;26813:16;:36::i;:::-;26790:60;;;;;;;;:::i;:::-;;;;;;;;;;;;;26774:76;;26906:38;26923:4;:20;;;26906:16;:38::i;:::-;26879:66;;;;;;;;:::i;:::-;;;;;;;;;;;;;26861:84;;27002:39;27019:4;:21;;;27002:16;:39::i;:::-;26975:67;;;;;;;;:::i;:::-;;;;;;;;;;;;;26956:86;;27090:34;27107:4;:16;;;27090;:34::i;:::-;27067:58;;;;;;;;:::i;:::-;;;;;;;;;;;;;27053:72;;27173:34;27190:4;:16;;;27173;:34::i;:::-;27150:58;;;;;;;;:::i;:::-;;;;;;;;;;;;;27136:72;;27258:36;27275:4;:18;;;27258:16;:36::i;:::-;27235:60;;;;;;;;:::i;:::-;;;;;;;;;;;;;27219:76;;27351:38;27368:4;:20;;;27351:16;:38::i;:::-;27324:66;;;;;;;;:::i;:::-;;;;;;;;;;;;;27306:84;;27436:32;27453:4;:14;;;27436:16;:32::i;:::-;27413:64;;;;;;;;:::i;:::-;;;;;;;;;;;;;27401:76;;27517:34;27534:4;:16;;;27517;:34::i;:::-;27494:66;;;;;;;;:::i;:::-;;;;;;;;;;;;;27488:72;;26437:1131;25994:1574;;;;;;;;;;;;:::o;25747:139::-;25789:16;;:::i;:::-;25825:13;:53;25839:26;:38;25866:10;25839:38;;;;;;;;;;;;;;;;25825:53;;;;;;;;;;;25818:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25747:139;:::o;22549:820::-;3225:3;3203:26;;:10;:26;;;3195:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;22660:1:::1;22618:26;:38;22645:10;22618:38;;;;;;;;;;;;;;;;:43:::0;22610:64:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;22687:16;22706:13;:53;22720:26;:38;22747:10;22720:38;;;;;;;;;;;;;;;;22706:53;;;;;;;;;;;22687:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;22779:4;:22;;;22778:23;22770:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;22842:19;22864:4;:16;;;22842:38;;22919:1;22894:21;:26;;:70;;;;;22948:4;:16;;;22924:21;:40;22894:70;22891:137;;;22995:21;22981:35;;22891:137;23072:11;23047:21;:36;;23040:44;;;;:::i;:::-;;23105:31;23125:10;23105:19;:31::i;:::-;23157:10;23149:28;;:41;23178:11;23149:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;23203:30;23222:10;23203:18;:30::i;:::-;23295:1;23253:26;:38;23280:10;23253:38;;;;;;;;;;;;;;;;:43;23246:51;;;;:::i;:::-;;23349:11;23337:10;23315:46;;23328:4;:7;;;23315:46;;;;;;;;;;22589:780;;22549:820::o:0;13404:1074::-;3225:3;3203:26;;:10;:26;;;3195:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;13518:1:::1;13476:26;:38;13503:10;13476:38;;;;;;;;;;;;;;;;:43:::0;13468:64:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;13545:17;13565:13;:53;13579:26;:38;13606:10;13579:38;;;;;;;;;;;;;;;;13565:53;;;;;;;;;;;13545:73;;13637:4;:22;;;;;;;;;;;;13629:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;13700:4;:18;;;;;;;;;;;;13692:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13784:5;13768:4;:13;;;:21;;;;;;;;;;;;;;;;;;13843:5;13826:4;:14;;;:22;;;;;;;;;;;;;;;;;;13921:5;13896:4;:22;;;:30;;;;;;;;;;;;;;;;;;13974:24;13983:4;:14;;;13974:8;:24::i;:::-;14085:5;14064:4;:18;;;:26;;;;;;;;;;;;;;;;;;14132:9;:7;:9::i;:::-;14111:4;:18;;:30;;;;14196:1;14174:4;:18;;;:23;:52;;;;;14224:2;14201:4;:20;;;:25;14174:52;14171:151;;;14264:2;14243:4;:18;;:23;;;;14306:4;14288;:15;;;:22;;;;;;;;;;;;;;;;;;14171:151;14366:4;:18;;;14342:4;:20;;;:42;;;;;;;:::i;:::-;;;;;;;;14454:16;:14;:16::i;:::-;13447:1031;13404:1074::o:0;24805:201::-;24841:17;24883:22;:20;:22::i;:::-;24871:34;;24967:2;24955:9;:14;24952:46;;;24996:2;24984:14;;24952:46;24805:201;:::o;17133:796::-;17182:17;17202:13;:53;17216:26;:38;17243:10;17216:38;;;;;;;;;;;;;;;;17202:53;;;;;;;;;;;17182:73;;17302:2;17279:4;:20;;;:25;17276:646;;;17329:31;;;;;;;;;;;;;;;;;:4;:14;;:31;;;;;;:::i;:::-;;17401:1;17380:4;:17;;;:22;17377:318;;17442:9;:7;:9::i;:::-;17423:4;:16;;:28;;;;17494:4;:16;;;17470:4;:20;;;:40;;;;;;;:::i;:::-;;;;;;;;17574:2;17550:4;:20;;;:26;17547:95;;17640:1;17620:4;:17;;;:21;;;;:::i;:::-;17599:4;:16;;;:43;;;;;;;:::i;:::-;;;;;;;;17547:95;17377:318;17735:1;17714:4;:17;;;:22;17711:131;;17757:16;:14;:16::i;:::-;17711:131;;;17837:5;17812:4;:22;;;:30;;;;;;;;;;;;;;;;;;17711:131;17276:646;;;17877:33;;;;;;;;;;;;;;;;;:4;:14;;:33;;;;;;:::i;:::-;;17276:646;17169:760;17133:796::o;12495:804::-;12542:17;12562:13;:53;12576:26;:38;12603:10;12576:38;;;;;;;;;;;;;;;;12562:53;;;;;;;;;;;12542:73;;12678:9;:7;:9::i;:::-;12659:4;:16;;:28;;;;12721:1;12701:4;:16;;;:21;:46;;;;;12745:2;12726:4;:16;;;:21;12701:46;12698:85;;;12781:2;12762:4;:16;;:21;;;;12698:85;12892:4;:16;;;12873:4;:16;;;:35;;;;:::i;:::-;12850:4;:20;;:58;;;;12977:282;13006:2;12983:4;:20;;;:25;12977:282;;;13048:9;:7;:9::i;:::-;13027:4;:18;;:30;;;;13097:1;13075:4;:18;;;:23;:52;;;;;13125:2;13102:4;:20;;;:25;13075:52;13072:97;;;13167:2;13146:4;:18;;:23;;;;13072:97;13229:4;:18;;;13205:4;:20;;;:42;;;;;;;:::i;:::-;;;;;;;;12977:282;;;13271:20;:18;:20::i;:::-;12529:770;12495:804::o;6102:3719::-;6225:1;6206:4;:16;;:20;;;;6256:1;6237:4;:16;;:20;;;;6289:1;6268:4;:18;;:22;;;;6324:1;6301:4;:20;;:24;;;;6360:1;6336:4;:21;;:25;;;;6391:1;6372:4;:16;;:20;;;;6422:1;6403:4;:16;;:20;;;;6455:1;6434:4;:18;;:22;;;;6490:1;6467:4;:20;;:24;;;;6522:1;6502:4;:17;;:21;;;;6554:1;6534:4;:17;;:21;;;;6584:5;6566:4;:15;;;:23;;;;;;;;;;;;;;;;;;6661:9;:7;:9::i;:::-;6642:4;:16;;:28;;;;6704:1;6684:4;:16;;;:21;6681:118;;6741:2;6722:4;:16;;:21;;;;6783:4;6765;:15;;;:22;;;;;;;;;;;;;;;;;;6681:118;6870:9;:7;:9::i;:::-;6851:4;:16;;:28;;;;6951:9;:7;:9::i;:::-;6932:4;:16;;:28;;;;6994:1;6974:4;:16;;;:21;:46;;;;;7018:2;6999:4;:16;;;:21;6974:46;6971:143;;;7056:2;7037:4;:16;;:21;;;;7098:4;7080;:15;;;:22;;;;;;;;;;;;;;;;;;6971:143;7206:4;:16;;;7187:4;:16;;;:35;;;;:::i;:::-;7164:4;:20;;:58;;;;7294:1;7274:4;:16;;;:21;7271:110;;7331:2;7312:4;:16;;:21;;;;7365:4;7348;:14;;;:21;;;;;;;;;;;;;;;;;;7271:110;7470:4;:16;;;7451:4;:16;;;:35;;;;:::i;:::-;7428:4;:20;;:58;;;;7566:2;7542:4;:20;;;:26;7539:1224;;7650:2;7630:4;:16;;;:22;7627:369;;7738:9;:7;:9::i;:::-;7719:4;:16;;:28;;;;7839:1;7819:4;:16;;;:21;7816:69;;7883:2;7864:4;:16;;:21;;;;7816:69;7964:4;:16;;;7945:4;:16;;;:35;;;;:::i;:::-;7922:4;:20;;:58;;;;7627:369;8081:4;:20;;;8057:4;:20;;;:44;8054:414;;8122:28;;;;;;;;;;;;;;;;;:4;:14;;:28;;;;;;:::i;:::-;;8189:4;:14;;;8169:4;:16;;;:34;;;;;;;:::i;:::-;;;;;;;;8054:414;;;8267:42;;;;;;;;;;;;;;;;;:4;:14;;:42;;;;;;:::i;:::-;;8390:1;8373:4;:14;;;:18;;;;:::i;:::-;8367:1;8350:4;:14;;;:18;;;;:::i;:::-;8349:43;;;;:::i;:::-;8328:4;:16;;;:65;;;;;;;:::i;:::-;;;;;;;;8054:414;8509:5;8484:4;:22;;;:30;;;;;;;;;;;;;;;;;;7539:1224;;;8578:4;:14;;;;;;;;;;;;8575:177;;;8613:49;;;;;;;;;;;;;;;;;:4;:14;;:49;;;;;;:::i;:::-;;8575:177;;;8703:33;;;;;;;;;;;;;;;;;:4;:14;;:33;;;;;;:::i;:::-;;8575:177;7539:1224;8824:4;:16;;;8804:4;:16;;;:36;8801:308;;8860:4;:14;;;;;;;;;;;;8857:191;;;8893:67;;;;;;;;;;;;;;;;;:4;:14;;:67;;;;;;:::i;:::-;;8857:191;;;8997:51;;;;;;;;;;;;;;;;;:4;:14;;:51;;;;;;:::i;:::-;;8857:191;9093:4;9077;:13;;;:20;;;;;;;;;;;;;;;;;;8801:308;9196:1;9172:4;:20;;;:25;:55;;;;9225:2;9201:4;:20;;;:26;9172:55;:85;;;;9255:2;9231:4;:20;;;:26;9172:85;9169:645;;;9277:4;:14;;;;;;;;;;;;9274:489;;;9312:73;;;;;;;;;;;;;;;;;:4;:14;;:73;;;;;;:::i;:::-;;9407:4;:13;;;;;;;;;;;;9404:121;;;9443:82;;;;;;;;;;;;;;;;;:4;:14;;:82;;;;;;:::i;:::-;;9404:121;9274:489;;;9566:57;;;;;;;;;;;;;;;;;:4;:14;;:57;;;;;;:::i;:::-;;9645:4;:13;;;;;;;;;;;;9642:105;;;9681:66;;;;;;;;;;;;;;;;;:4;:14;;:66;;;;;;:::i;:::-;;9642:105;9274:489;9798:4;9777;:18;;;:25;;;;;;;;;;;;;;;;;;9169:645;6102:3719;:::o;637:632:1:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;944:6;940:2;936:15;928:6;924:28;917:35;;979:247;986:4;979:247;;;1010:5;;;;;;;;1114:10;1109:2;1102:5;1098:14;1093:32;1088:3;1080:46;1170:2;1161:11;;;;;;:::i;:::-;;;;;1203:1;1194:5;:10;979:247;1190:21;979:247;1246:6;1239:13;;;;;637:632;;;:::o;23514:527:5:-;23646:14;23663:13;:56;23677:26;:41;23704:13;23677:41;;;;;;;;;;;;;;;;23663:56;;;;;;;;;;;:59;;;23646:76;;23733:19;23755:13;:56;23769:26;:41;23796:13;23769:41;;;;;;;;;;;;;;;;23755:56;;;;;;;;;;;:68;;;23733:90;;23880:1;23836:26;:41;23863:13;23836:41;;;;;;;;;;;;;;;:45;;;;23899:13;:56;23913:26;:41;23940:13;23913:41;;;;;;;;;;;;;;;;23899:56;;;;;;;;;;;;23892:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;24021:11;24006:13;23973:60;;23998:6;23973:60;;;;;;;;;;23574:467;;23514:527;:::o;24185:485::-;24377:1;24332:26;:41;24359:13;24332:41;;;;;;;;;;;;;;;;:46;;:123;;;;24454:1;24382:13;:56;24396:26;:41;24423:13;24396:41;;;;;;;;;;;;;;;;24382:56;;;;;;;;;;;:68;;;:73;;24332:123;24329:278;;;24516:1;24472:26;:41;24499:13;24472:41;;;;;;;;;;;;;;;:45;;;;24539:13;:56;24553:26;:41;24580:13;24553:41;;;;;;;;;;;;;;;;24539:56;;;;;;;;;;;;24532:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;24329:278;24648:13;24624:38;;;;;;;;;;;;24185:485;:::o;25167:482::-;25216:20;25264:2;25249:11;;:17;;;;;;;:::i;:::-;;;;;;;;25277:12;25345:3;25330:11;;25311:16;25293:15;:34;;;;:::i;:::-;:48;;;;:::i;:::-;25292:56;;;;:::i;:::-;25277:71;;25454:1;25449:2;25435:1;25420:12;:16;;;;:::i;:::-;25410:27;25439:4;25393:51;;;;;;;;;:::i;:::-;;;;;;;;;;;;;25383:62;;;;;;25375:71;;:76;;;;:::i;:::-;:80;;;;:::i;:::-;25359:97;;25469:11;;:13;;;;;;;;;:::i;:::-;;;;;;25589:9;25575:11;;:23;25572:67;;;25627:12;25613:11;:26;;;;25572:67;25238:411;25167:482;:::o;17987:4454::-;18038:17;18058:13;:53;18072:26;:38;18099:10;18072:38;;;;;;;;;;;;;;;;18058:53;;;;;;;;;;;18038:73;;18158:2;18135:4;:20;;;:25;18132:4302;;;18177:31;;;;;;;;;;;;;;;;;:4;:14;;:31;;;;;;:::i;:::-;;18248:5;18223:4;:22;;;:30;;;;;;;;;;;;;;;;;;18294:1;18273:4;:17;;;:22;18270:886;;18357:2;18333:4;:20;;;:26;18330:218;;18384:44;;;;;;;;;;;;;;;;;:4;:14;;:44;;;;;;:::i;:::-;;18471:4;:14;;;18451:4;:16;;;:34;;;;;;;:::i;:::-;;;;;;;;18330:218;18612:2;18587:4;:21;;;:27;18584:371;;18670:4;:14;;18656:56;;;;;;;;:::i;:::-;;;;;;;;;;;;;18639:4;:14;;:73;;;;;;:::i;:::-;;18755:4;:14;;;18735:4;:16;;;:34;;;;;;;:::i;:::-;;;;;;;;18584:371;;;18892:4;:14;;18878:57;;;;;;;;:::i;:::-;;;;;;;;;;;;;18861:4;:14;;:74;;;;;;:::i;:::-;;18584:371;18270:886;;;19010:44;;;;;;;;;;;;;;;;;:4;:14;;:44;;;;;;:::i;:::-;;19111:1;19094:4;:14;;;:18;;;;:::i;:::-;19073:4;:16;;;:40;;;;;;;:::i;:::-;;;;;;;;18270:886;18132:4302;;;19202:2;19178:4;:20;;;:26;19175:3259;;19223:31;;;;;;;;;;;;;;;;;:4;:14;;:31;;;;;;:::i;:::-;;19294:5;19269:4;:22;;;:30;;;;;;;;;;;;;;;;;;19340:1;19319:4;:17;;;:22;19316:87;;19401:1;19381:4;:17;;;:21;;;;:::i;:::-;19360:4;:16;;;:43;;;;;;;:::i;:::-;;;;;;;;19316:87;19484:2;19460:4;:20;;;:26;19457:376;;19519:28;;;;;;;;;;;;;;;;;:4;:14;;:28;;;;;;:::i;:::-;;19608:1;19587:4;:17;;;:22;19584:210;;19670:1;19653:4;:14;;;:18;;;;:::i;:::-;19632:4;:16;;;:40;;;;;;;:::i;:::-;;;;;;;;19584:210;;;19779:4;:14;;;19758:4;:16;;;:36;;;;;;;:::i;:::-;;;;;;;;19584:210;19457:376;19873:1;19852:4;:17;;;:22;19849:437;;19923:2;19898:4;:21;;;:27;19895:376;;19981:4;:14;;19967:57;;;;;;;;:::i;:::-;;;;;;;;;;;;;19950:4;:14;;:74;;;;;;:::i;:::-;;20085:1;20068:4;:14;;;:18;;;;:::i;:::-;20047:4;:16;;;:40;;;;;;;:::i;:::-;;;;;;;;19895:376;;;20208:4;:14;;20194:57;;;;;;;;:::i;:::-;;;;;;;;;;;;;20177:4;:14;;:74;;;;;;:::i;:::-;;19895:376;19849:437;19175:3259;;;20377:2;20354:4;:20;;;:25;:87;;;;;20420:4;:20;;;20415:2;:25;;;;:::i;:::-;20389:4;:20;;;20384:2;:25;;;;:::i;:::-;20383:58;20354:87;20351:1055;;;20474:28;;;;;;;;;;;;;;;;;:4;:14;;:28;;;;;;:::i;:::-;;20546:5;20521:4;:22;;;:30;;;;;;;;;;;;;;;;;;20596:1;20575:4;:17;;;:22;20572:208;;20658:1;20641:4;:14;;;:18;;;;:::i;:::-;20620:4;:16;;;:40;;;;;;;:::i;:::-;;;;;;;;20572:208;;;20766:4;:14;;;20746:4;:16;;;:34;;;;;;;:::i;:::-;;;;;;;;20572:208;20351:1055;;;20851:2;20828:4;:20;;;:25;:86;;;;20893:4;:20;;;20888:2;:25;;;;:::i;:::-;20863:4;:20;;;20858:2;:25;;;;:::i;:::-;20857:57;20828:86;20825:581;;;20935:31;;;;;;;;;;;;;;;;;:4;:14;;:31;;;;;;:::i;:::-;;21010:5;20985:4;:22;;;:30;;;;;;;;;;;;;;;;;;20825:581;;;21056:31;;;;;;;;;;;;;;;;;:4;:14;;:31;;;;;;:::i;:::-;;21131:5;21106:4;:22;;;:30;;;;;;;;;;;;;;;;;;21181:1;21160:4;:17;;;:22;21157:206;;21225:4;:14;;;21205:4;:16;;;:34;;;;;;;:::i;:::-;;;;;;;;21157:206;;;21361:1;21344:4;:14;;;:18;;;;:::i;:::-;21323:4;:16;;;:40;;;;;;;:::i;:::-;;;;;;;;21157:206;20825:581;20351:1055;21446:1;21425:4;:17;;;:22;21422:1001;;21495:2;21471:4;:21;;;:26;:89;;;;;21538:4;:21;;;21533:2;:26;;;;:::i;:::-;21507:4;:20;;;21502:2;:25;;;;:::i;:::-;21501:59;21471:89;21468:940;;;21640:4;:14;;21626:57;;;;;;;;:::i;:::-;;;;;;;;;;;;;21609:4;:14;;:74;;;;;;:::i;:::-;;21731:5;21706:4;:22;;;:30;;;;;;;;;;;;;;;;;;21799:1;21782:4;:14;;;:18;;;;:::i;:::-;21761:4;:16;;;:40;;;;;;;:::i;:::-;;;;;;;;21468:940;;;21895:2;21871:4;:21;;;:26;:88;;;;21937:4;:21;;;21932:2;:26;;;;:::i;:::-;21907:4;:20;;;21902:2;:25;;;;:::i;:::-;21901:58;21871:88;21868:540;;;22015:4;:14;;22001:57;;;;;;;;:::i;:::-;;;;;;;;;;;;;21984:4;:14;;:74;;;;;;:::i;:::-;;22106:5;22081:4;:22;;;:30;;;;;;;;;;;;;;;;;;21868:540;;;22191:4;:14;;22177:56;;;;;;;;:::i;:::-;;;;;;;;;;;;;22160:4;:14;;:73;;;;;;:::i;:::-;;22281:5;22256:4;:22;;;:30;;;;;;;;;;;;;;;;;;22331:4;:14;;;22311:4;:16;;;:34;;;;;;;:::i;:::-;;;;;;;;21868:540;21468:940;21422:1001;19175:3259;18132:4302;18025:4416;17987:4454::o;25316:916:2:-;25369:7;25388:14;25405:1;25388:18;;25453:8;25444:5;:17;25440:103;;25490:8;25481:17;;;;;;:::i;:::-;;;;;25526:2;25516:12;;;;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;;;;:::i;:::-;;;;;25642:2;25632:12;;;;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;;;;:::i;:::-;;;;;25758:2;25748:12;;;;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;;;;:::i;:::-;;;;;25872:1;25862:11;;;;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;;;;:::i;:::-;;;;;25985:1;25975:11;;;;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;;;;:::i;:::-;;;;;26098:1;26088:11;;;;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;;;;26127:66;26219:6;26212:13;;;25316:916;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:169:6:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:161::-;322:13;318:1;310:6;306:14;299:37;182:161;:::o;349:366::-;491:3;512:67;576:2;571:3;512:67;:::i;:::-;505:74;;588:93;677:3;588:93;:::i;:::-;706:2;701:3;697:12;690:19;;349:366;;;:::o;721:419::-;887:4;925:2;914:9;910:18;902:26;;974:9;968:4;964:20;960:1;949:9;945:17;938:47;1002:131;1128:4;1002:131;:::i;:::-;994:139;;721:419;;;:::o;1146:236::-;1286:34;1282:1;1274:6;1270:14;1263:58;1355:19;1350:2;1342:6;1338:15;1331:44;1146:236;:::o;1388:366::-;1530:3;1551:67;1615:2;1610:3;1551:67;:::i;:::-;1544:74;;1627:93;1716:3;1627:93;:::i;:::-;1745:2;1740:3;1736:12;1729:19;;1388:366;;;:::o;1760:419::-;1926:4;1964:2;1953:9;1949:18;1941:26;;2013:9;2007:4;2003:20;1999:1;1988:9;1984:17;1977:47;2041:131;2167:4;2041:131;:::i;:::-;2033:139;;1760:419;;;:::o;2185:163::-;2325:15;2321:1;2313:6;2309:14;2302:39;2185:163;:::o;2354:366::-;2496:3;2517:67;2581:2;2576:3;2517:67;:::i;:::-;2510:74;;2593:93;2682:3;2593:93;:::i;:::-;2711:2;2706:3;2702:12;2695:19;;2354:366;;;:::o;2726:419::-;2892:4;2930:2;2919:9;2915:18;2907:26;;2979:9;2973:4;2969:20;2965:1;2954:9;2950:17;2943:47;3007:131;3133:4;3007:131;:::i;:::-;2999:139;;2726:419;;;:::o;3232:117::-;3341:1;3338;3331:12;3478:77;3515:7;3544:5;3533:16;;3478:77;;;:::o;3561:122::-;3634:24;3652:5;3634:24;:::i;:::-;3627:5;3624:35;3614:63;;3673:1;3670;3663:12;3614:63;3561:122;:::o;3689:139::-;3735:5;3773:6;3760:20;3751:29;;3789:33;3816:5;3789:33;:::i;:::-;3689:139;;;;:::o;3834:329::-;3893:6;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;3834:329;;;;:::o;4169:99::-;4221:6;4255:5;4249:12;4239:22;;4169:99;;;:::o;4274:246::-;4355:1;4365:113;4379:6;4376:1;4373:13;4365:113;;;4464:1;4459:3;4455:11;4449:18;4445:1;4440:3;4436:11;4429:39;4401:2;4398:1;4394:10;4389:15;;4365:113;;;4512:1;4503:6;4498:3;4494:16;4487:27;4336:184;4274:246;;;:::o;4526:102::-;4567:6;4618:2;4614:7;4609:2;4602:5;4598:14;4594:28;4584:38;;4526:102;;;:::o;4634:377::-;4722:3;4750:39;4783:5;4750:39;:::i;:::-;4805:71;4869:6;4864:3;4805:71;:::i;:::-;4798:78;;4885:65;4943:6;4938:3;4931:4;4924:5;4920:16;4885:65;:::i;:::-;4975:29;4997:6;4975:29;:::i;:::-;4970:3;4966:39;4959:46;;4726:285;4634:377;;;;:::o;5017:2537::-;5660:4;5698:3;5687:9;5683:19;5675:27;;5748:9;5742:4;5738:20;5734:1;5723:9;5719:17;5712:47;5776:78;5849:4;5840:6;5776:78;:::i;:::-;5768:86;;5901:9;5895:4;5891:20;5886:2;5875:9;5871:18;5864:48;5929:78;6002:4;5993:6;5929:78;:::i;:::-;5921:86;;6054:9;6048:4;6044:20;6039:2;6028:9;6024:18;6017:48;6082:78;6155:4;6146:6;6082:78;:::i;:::-;6074:86;;6207:9;6201:4;6197:20;6192:2;6181:9;6177:18;6170:48;6235:78;6308:4;6299:6;6235:78;:::i;:::-;6227:86;;6361:9;6355:4;6351:20;6345:3;6334:9;6330:19;6323:49;6389:78;6462:4;6453:6;6389:78;:::i;:::-;6381:86;;6515:9;6509:4;6505:20;6499:3;6488:9;6484:19;6477:49;6543:78;6616:4;6607:6;6543:78;:::i;:::-;6535:86;;6669:9;6663:4;6659:20;6653:3;6642:9;6638:19;6631:49;6697:78;6770:4;6761:6;6697:78;:::i;:::-;6689:86;;6823:9;6817:4;6813:20;6807:3;6796:9;6792:19;6785:49;6851:78;6924:4;6915:6;6851:78;:::i;:::-;6843:86;;6977:9;6971:4;6967:20;6961:3;6950:9;6946:19;6939:49;7005:78;7078:4;7069:6;7005:78;:::i;:::-;6997:86;;7131:9;7125:4;7121:20;7115:3;7104:9;7100:19;7093:49;7159:78;7232:4;7223:6;7159:78;:::i;:::-;7151:86;;7285:9;7279:4;7275:20;7269:3;7258:9;7254:19;7247:49;7313:79;7387:4;7377:7;7313:79;:::i;:::-;7305:87;;7440:9;7434:4;7430:20;7424:3;7413:9;7409:19;7402:49;7468:79;7542:4;7532:7;7468:79;:::i;:::-;7460:87;;5017:2537;;;;;;;;;;;;;;;:::o;7560:108::-;7637:24;7655:5;7637:24;:::i;:::-;7632:3;7625:37;7560:108;;:::o;7674:126::-;7711:7;7751:42;7744:5;7740:54;7729:65;;7674:126;;;:::o;7806:96::-;7843:7;7872:24;7890:5;7872:24;:::i;:::-;7861:35;;7806:96;;;:::o;7908:108::-;7985:24;8003:5;7985:24;:::i;:::-;7980:3;7973:37;7908:108;;:::o;8022:90::-;8056:7;8099:5;8092:13;8085:21;8074:32;;8022:90;;;:::o;8118:99::-;8189:21;8204:5;8189:21;:::i;:::-;8184:3;8177:34;8118:99;;:::o;8223:159::-;8297:11;8331:6;8326:3;8319:19;8371:4;8366:3;8362:14;8347:29;;8223:159;;;;:::o;8388:357::-;8466:3;8494:39;8527:5;8494:39;:::i;:::-;8549:61;8603:6;8598:3;8549:61;:::i;:::-;8542:68;;8619:65;8677:6;8672:3;8665:4;8658:5;8654:16;8619:65;:::i;:::-;8709:29;8731:6;8709:29;:::i;:::-;8704:3;8700:39;8693:46;;8470:275;8388:357;;;;:::o;8805:4633::-;8918:3;8954:6;8949:3;8945:16;9041:4;9034:5;9030:16;9024:23;9060:63;9117:4;9112:3;9108:14;9094:12;9060:63;:::i;:::-;8971:162;9217:4;9210:5;9206:16;9200:23;9236:63;9293:4;9288:3;9284:14;9270:12;9236:63;:::i;:::-;9143:166;9398:4;9391:5;9387:16;9381:23;9417:63;9474:4;9469:3;9465:14;9451:12;9417:63;:::i;:::-;9319:171;9583:4;9576:5;9572:16;9566:23;9602:63;9659:4;9654:3;9650:14;9636:12;9602:63;:::i;:::-;9500:175;9765:4;9758:5;9754:16;9748:23;9784:63;9841:4;9836:3;9832:14;9818:12;9784:63;:::i;:::-;9685:172;9946:4;9939:5;9935:16;9929:23;9965:63;10022:4;10017:3;10013:14;9999:12;9965:63;:::i;:::-;9867:171;10125:4;10118:5;10114:16;10108:23;10144:63;10201:4;10196:3;10192:14;10178:12;10144:63;:::i;:::-;10048:169;10307:4;10300:5;10296:16;10290:23;10326:63;10383:4;10378:3;10374:14;10360:12;10326:63;:::i;:::-;10227:172;10488:6;10481:5;10477:18;10471:25;10509:65;10566:6;10561:3;10557:16;10543:12;10509:65;:::i;:::-;10409:175;10673:6;10666:5;10662:18;10656:25;10694:65;10751:6;10746:3;10742:16;10728:12;10694:65;:::i;:::-;10594:175;10860:6;10853:5;10849:18;10843:25;10881:65;10938:6;10933:3;10929:16;10915:12;10881:65;:::i;:::-;10779:177;11049:6;11042:5;11038:18;11032:25;11070:65;11127:6;11122:3;11118:16;11104:12;11070:65;:::i;:::-;10966:179;11239:6;11232:5;11228:18;11222:25;11260:65;11317:6;11312:3;11308:16;11294:12;11260:65;:::i;:::-;11155:180;11424:6;11417:5;11413:18;11407:25;11445:65;11502:6;11497:3;11493:16;11479:12;11445:65;:::i;:::-;11345:175;11609:6;11602:5;11598:18;11592:25;11630:65;11687:6;11682:3;11678:16;11664:12;11630:65;:::i;:::-;11530:175;11796:6;11789:5;11785:18;11779:25;11817:65;11874:6;11869:3;11865:16;11851:12;11817:65;:::i;:::-;11715:177;11985:6;11978:5;11974:18;11968:25;12006:65;12063:6;12058:3;12054:16;12040:12;12006:65;:::i;:::-;11902:179;12172:6;12165:5;12161:18;12155:25;12193:59;12244:6;12239:3;12235:16;12221:12;12193:59;:::i;:::-;12091:171;12349:6;12342:5;12338:18;12332:25;12370:59;12421:6;12416:3;12412:16;12398:12;12370:59;:::i;:::-;12272:167;12525:6;12518:5;12514:18;12508:25;12546:59;12597:6;12592:3;12588:16;12574:12;12546:59;:::i;:::-;12449:166;12704:6;12697:5;12693:18;12687:25;12725:59;12776:6;12771:3;12767:16;12753:12;12725:59;:::i;:::-;12625:169;12882:6;12875:5;12871:18;12865:25;12903:59;12954:6;12949:3;12945:16;12931:12;12903:59;:::i;:::-;12804:168;13067:6;13060:5;13056:18;13050:25;13088:59;13139:6;13134:3;13130:16;13116:12;13088:59;:::i;:::-;12982:175;13244:6;13237:5;13233:18;13227:25;13301:3;13295:4;13291:14;13282:6;13277:3;13273:16;13266:40;13327:73;13395:4;13381:12;13327:73;:::i;:::-;13319:81;;13167:244;13428:4;13421:11;;8923:4515;8805:4633;;;;:::o;13444:361::-;13581:4;13619:2;13608:9;13604:18;13596:26;;13668:9;13662:4;13658:20;13654:1;13643:9;13639:17;13632:47;13696:102;13793:4;13784:6;13696:102;:::i;:::-;13688:110;;13444:361;;;;:::o;13811:168::-;13951:20;13947:1;13939:6;13935:14;13928:44;13811:168;:::o;13985:366::-;14127:3;14148:67;14212:2;14207:3;14148:67;:::i;:::-;14141:74;;14224:93;14313:3;14224:93;:::i;:::-;14342:2;14337:3;14333:12;14326:19;;13985:366;;;:::o;14357:419::-;14523:4;14561:2;14550:9;14546:18;14538:26;;14610:9;14604:4;14600:20;14596:1;14585:9;14581:17;14574:47;14638:131;14764:4;14638:131;:::i;:::-;14630:139;;14357:419;;;:::o;14782:163::-;14922:15;14918:1;14910:6;14906:14;14899:39;14782:163;:::o;14951:366::-;15093:3;15114:67;15178:2;15173:3;15114:67;:::i;:::-;15107:74;;15190:93;15279:3;15190:93;:::i;:::-;15308:2;15303:3;15299:12;15292:19;;14951:366;;;:::o;15323:419::-;15489:4;15527:2;15516:9;15512:18;15504:26;;15576:9;15570:4;15566:20;15562:1;15551:9;15547:17;15540:47;15604:131;15730:4;15604:131;:::i;:::-;15596:139;;15323:419;;;:::o;15748:180::-;15796:77;15793:1;15786:88;15893:4;15890:1;15883:15;15917:4;15914:1;15907:15;15934:191;15974:3;15993:20;16011:1;15993:20;:::i;:::-;15988:25;;16027:20;16045:1;16027:20;:::i;:::-;16022:25;;16070:1;16067;16063:9;16056:16;;16091:3;16088:1;16085:10;16082:36;;;16098:18;;:::i;:::-;16082:36;15934:191;;;;:::o;16131:233::-;16170:3;16193:24;16211:5;16193:24;:::i;:::-;16184:33;;16239:66;16232:5;16229:77;16226:103;;16309:18;;:::i;:::-;16226:103;16356:1;16349:5;16345:13;16338:20;;16131:233;;;:::o;16370:180::-;16418:77;16415:1;16408:88;16515:4;16512:1;16505:15;16539:4;16536:1;16529:15;16556:180;16604:77;16601:1;16594:88;16701:4;16698:1;16691:15;16725:4;16722:1;16715:15;16742:320;16786:6;16823:1;16817:4;16813:12;16803:22;;16870:1;16864:4;16860:12;16891:18;16881:81;;16947:4;16939:6;16935:17;16925:27;;16881:81;17009:2;17001:6;16998:14;16978:18;16975:38;16972:84;;17028:18;;:::i;:::-;16972:84;16793:269;16742:320;;;:::o;17068:141::-;17117:4;17140:3;17132:11;;17163:3;17160:1;17153:14;17197:4;17194:1;17184:18;17176:26;;17068:141;;;:::o;17215:93::-;17252:6;17299:2;17294;17287:5;17283:14;17279:23;17269:33;;17215:93;;;:::o;17314:107::-;17358:8;17408:5;17402:4;17398:16;17377:37;;17314:107;;;;:::o;17427:393::-;17496:6;17546:1;17534:10;17530:18;17569:97;17599:66;17588:9;17569:97;:::i;:::-;17687:39;17717:8;17706:9;17687:39;:::i;:::-;17675:51;;17759:4;17755:9;17748:5;17744:21;17735:30;;17808:4;17798:8;17794:19;17787:5;17784:30;17774:40;;17503:317;;17427:393;;;;;:::o;17826:60::-;17854:3;17875:5;17868:12;;17826:60;;;:::o;17892:142::-;17942:9;17975:53;17993:34;18002:24;18020:5;18002:24;:::i;:::-;17993:34;:::i;:::-;17975:53;:::i;:::-;17962:66;;17892:142;;;:::o;18040:75::-;18083:3;18104:5;18097:12;;18040:75;;;:::o;18121:269::-;18231:39;18262:7;18231:39;:::i;:::-;18292:91;18341:41;18365:16;18341:41;:::i;:::-;18333:6;18326:4;18320:11;18292:91;:::i;:::-;18286:4;18279:105;18197:193;18121:269;;;:::o;18396:73::-;18441:3;18396:73;:::o;18475:189::-;18552:32;;:::i;:::-;18593:65;18651:6;18643;18637:4;18593:65;:::i;:::-;18528:136;18475:189;;:::o;18670:186::-;18730:120;18747:3;18740:5;18737:14;18730:120;;;18801:39;18838:1;18831:5;18801:39;:::i;:::-;18774:1;18767:5;18763:13;18754:22;;18730:120;;;18670:186;;:::o;18862:543::-;18963:2;18958:3;18955:11;18952:446;;;18997:38;19029:5;18997:38;:::i;:::-;19081:29;19099:10;19081:29;:::i;:::-;19071:8;19067:44;19264:2;19252:10;19249:18;19246:49;;;19285:8;19270:23;;19246:49;19308:80;19364:22;19382:3;19364:22;:::i;:::-;19354:8;19350:37;19337:11;19308:80;:::i;:::-;18967:431;;18952:446;18862:543;;;:::o;19411:117::-;19465:8;19515:5;19509:4;19505:16;19484:37;;19411:117;;;;:::o;19534:169::-;19578:6;19611:51;19659:1;19655:6;19647:5;19644:1;19640:13;19611:51;:::i;:::-;19607:56;19692:4;19686;19682:15;19672:25;;19585:118;19534:169;;;;:::o;19708:295::-;19784:4;19930:29;19955:3;19949:4;19930:29;:::i;:::-;19922:37;;19992:3;19989:1;19985:11;19979:4;19976:21;19968:29;;19708:295;;;;:::o;20008:1395::-;20125:37;20158:3;20125:37;:::i;:::-;20227:18;20219:6;20216:30;20213:56;;;20249:18;;:::i;:::-;20213:56;20293:38;20325:4;20319:11;20293:38;:::i;:::-;20378:67;20438:6;20430;20424:4;20378:67;:::i;:::-;20472:1;20496:4;20483:17;;20528:2;20520:6;20517:14;20545:1;20540:618;;;;21202:1;21219:6;21216:77;;;21268:9;21263:3;21259:19;21253:26;21244:35;;21216:77;21319:67;21379:6;21372:5;21319:67;:::i;:::-;21313:4;21306:81;21175:222;20510:887;;20540:618;20592:4;20588:9;20580:6;20576:22;20626:37;20658:4;20626:37;:::i;:::-;20685:1;20699:208;20713:7;20710:1;20707:14;20699:208;;;20792:9;20787:3;20783:19;20777:26;20769:6;20762:42;20843:1;20835:6;20831:14;20821:24;;20890:2;20879:9;20875:18;20862:31;;20736:4;20733:1;20729:12;20724:17;;20699:208;;;20935:6;20926:7;20923:19;20920:179;;;20993:9;20988:3;20984:19;20978:26;21036:48;21078:4;21070:6;21066:17;21055:9;21036:48;:::i;:::-;21028:6;21021:64;20943:156;20920:179;21145:1;21141;21133:6;21129:14;21125:22;21119:4;21112:36;20547:611;;;20510:887;;20100:1303;;;20008:1395;;:::o;21409:158::-;21549:10;21545:1;21537:6;21533:14;21526:34;21409:158;:::o;21573:365::-;21715:3;21736:66;21800:1;21795:3;21736:66;:::i;:::-;21729:73;;21811:93;21900:3;21811:93;:::i;:::-;21929:2;21924:3;21920:12;21913:19;;21573:365;;;:::o;21944:419::-;22110:4;22148:2;22137:9;22133:18;22125:26;;22197:9;22191:4;22187:20;22183:1;22172:9;22168:17;22161:47;22225:131;22351:4;22225:131;:::i;:::-;22217:139;;21944:419;;;:::o;22369:167::-;22509:19;22505:1;22497:6;22493:14;22486:43;22369:167;:::o;22542:366::-;22684:3;22705:67;22769:2;22764:3;22705:67;:::i;:::-;22698:74;;22781:93;22870:3;22781:93;:::i;:::-;22899:2;22894:3;22890:12;22883:19;;22542:366;;;:::o;22914:419::-;23080:4;23118:2;23107:9;23103:18;23095:26;;23167:9;23161:4;23157:20;23153:1;23142:9;23138:17;23131:47;23195:131;23321:4;23195:131;:::i;:::-;23187:139;;22914:419;;;:::o;23339:194::-;23379:4;23399:20;23417:1;23399:20;:::i;:::-;23394:25;;23433:20;23451:1;23433:20;:::i;:::-;23428:25;;23477:1;23474;23470:9;23462:17;;23501:1;23495:4;23492:11;23489:37;;;23506:18;;:::i;:::-;23489:37;23339:194;;;;:::o;23539:169::-;23679:21;23675:1;23667:6;23663:14;23656:45;23539:169;:::o;23714:366::-;23856:3;23877:67;23941:2;23936:3;23877:67;:::i;:::-;23870:74;;23953:93;24042:3;23953:93;:::i;:::-;24071:2;24066:3;24062:12;24055:19;;23714:366;;;:::o;24086:419::-;24252:4;24290:2;24279:9;24275:18;24267:26;;24339:9;24333:4;24329:20;24325:1;24314:9;24310:17;24303:47;24367:131;24493:4;24367:131;:::i;:::-;24359:139;;24086:419;;;:::o;24511:180::-;24559:77;24556:1;24549:88;24656:4;24653:1;24646:15;24680:4;24677:1;24670:15;24697:185;24737:1;24754:20;24772:1;24754:20;:::i;:::-;24749:25;;24788:20;24806:1;24788:20;:::i;:::-;24783:25;;24827:1;24817:35;;24832:18;;:::i;:::-;24817:35;24874:1;24871;24867:9;24862:14;;24697:185;;;;:::o;24888:165::-;25028:17;25024:1;25016:6;25012:14;25005:41;24888:165;:::o;25059:366::-;25201:3;25222:67;25286:2;25281:3;25222:67;:::i;:::-;25215:74;;25298:93;25387:3;25298:93;:::i;:::-;25416:2;25411:3;25407:12;25400:19;;25059:366;;;:::o;25431:419::-;25597:4;25635:2;25624:9;25620:18;25612:26;;25684:9;25678:4;25674:20;25670:1;25659:9;25655:17;25648:47;25712:131;25838:4;25712:131;:::i;:::-;25704:139;;25431:419;;;:::o;25856:159::-;25996:11;25992:1;25984:6;25980:14;25973:35;25856:159;:::o;26021:365::-;26163:3;26184:66;26248:1;26243:3;26184:66;:::i;:::-;26177:73;;26259:93;26348:3;26259:93;:::i;:::-;26377:2;26372:3;26368:12;26361:19;;26021:365;;;:::o;26392:419::-;26558:4;26596:2;26585:9;26581:18;26573:26;;26645:9;26639:4;26635:20;26631:1;26620:9;26616:17;26609:47;26673:131;26799:4;26673:131;:::i;:::-;26665:139;;26392:419;;;:::o;26817:159::-;26957:11;26953:1;26945:6;26941:14;26934:35;26817:159;:::o;26982:365::-;27124:3;27145:66;27209:1;27204:3;27145:66;:::i;:::-;27138:73;;27220:93;27309:3;27220:93;:::i;:::-;27338:2;27333:3;27329:12;27322:19;;26982:365;;;:::o;27353:419::-;27519:4;27557:2;27546:9;27542:18;27534:26;;27606:9;27600:4;27596:20;27592:1;27581:9;27577:17;27570:47;27634:131;27760:4;27634:131;:::i;:::-;27626:139;;27353:419;;;:::o;27778:170::-;27918:22;27914:1;27906:6;27902:14;27895:46;27778:170;:::o;27954:366::-;28096:3;28117:67;28181:2;28176:3;28117:67;:::i;:::-;28110:74;;28193:93;28282:3;28193:93;:::i;:::-;28311:2;28306:3;28302:12;28295:19;;27954:366;;;:::o;28326:419::-;28492:4;28530:2;28519:9;28515:18;28507:26;;28579:9;28573:4;28569:20;28565:1;28554:9;28550:17;28543:47;28607:131;28733:4;28607:131;:::i;:::-;28599:139;;28326:419;;;:::o;28751:182::-;28919:7;28914:3;28907:20;28751:182;:::o;28939:148::-;29041:11;29078:3;29063:18;;28939:148;;;;:::o;29093:390::-;29199:3;29227:39;29260:5;29227:39;:::i;:::-;29282:89;29364:6;29359:3;29282:89;:::i;:::-;29275:96;;29380:65;29438:6;29433:3;29426:4;29419:5;29415:16;29380:65;:::i;:::-;29470:6;29465:3;29461:16;29454:23;;29203:280;29093:390;;;;:::o;29489:539::-;29711:3;29726:137;29859:3;29726:137;:::i;:::-;29888:1;29883:3;29879:11;29872:18;;29907:95;29998:3;29989:6;29907:95;:::i;:::-;29900:102;;30019:3;30012:10;;29489:539;;;;:::o;30034:186::-;30202:11;30197:3;30190:24;30034:186;:::o;30226:539::-;30448:3;30463:137;30596:3;30463:137;:::i;:::-;30625:1;30620:3;30616:11;30609:18;;30644:95;30735:3;30726:6;30644:95;:::i;:::-;30637:102;;30756:3;30749:10;;30226:539;;;;:::o;30771:181::-;30939:6;30934:3;30927:19;30771:181;:::o;30958:803::-;31270:3;31285:137;31418:3;31285:137;:::i;:::-;31447:1;31442:3;31438:11;31431:18;;31466:95;31557:3;31548:6;31466:95;:::i;:::-;31459:102;;31571:137;31704:3;31571:137;:::i;:::-;31733:1;31728:3;31724:11;31717:18;;31752:3;31745:10;;30958:803;;;;:::o;31767:180::-;31815:77;31812:1;31805:88;31912:4;31909:1;31902:15;31936:4;31933:1;31926:15;31953:174;32093:26;32089:1;32081:6;32077:14;32070:50;31953:174;:::o;32133:366::-;32275:3;32296:67;32360:2;32355:3;32296:67;:::i;:::-;32289:74;;32372:93;32461:3;32372:93;:::i;:::-;32490:2;32485:3;32481:12;32474:19;;32133:366;;;:::o;32505:419::-;32671:4;32709:2;32698:9;32694:18;32686:26;;32758:9;32752:4;32748:20;32744:1;32733:9;32729:17;32722:47;32786:131;32912:4;32786:131;:::i;:::-;32778:139;;32505:419;;;:::o;32930:410::-;32970:7;32993:20;33011:1;32993:20;:::i;:::-;32988:25;;33027:20;33045:1;33027:20;:::i;:::-;33022:25;;33082:1;33079;33075:9;33104:30;33122:11;33104:30;:::i;:::-;33093:41;;33283:1;33274:7;33270:15;33267:1;33264:22;33244:1;33237:9;33217:83;33194:139;;33313:18;;:::i;:::-;33194:139;32978:362;32930:410;;;;:::o;33346:176::-;33378:1;33395:20;33413:1;33395:20;:::i;:::-;33390:25;;33429:20;33447:1;33429:20;:::i;:::-;33424:25;;33468:1;33458:35;;33473:18;;:::i;:::-;33458:35;33514:1;33511;33507:9;33502:14;;33346:176;;;;:::o;33528:77::-;33565:7;33594:5;33583:16;;33528:77;;;:::o;33611:79::-;33650:7;33679:5;33668:16;;33611:79;;;:::o;33696:157::-;33801:45;33821:24;33839:5;33821:24;:::i;:::-;33801:45;:::i;:::-;33796:3;33789:58;33696:157;;:::o;33859:79::-;33898:7;33927:5;33916:16;;33859:79;;;:::o;33944:157::-;34049:45;34069:24;34087:5;34069:24;:::i;:::-;34049:45;:::i;:::-;34044:3;34037:58;33944:157;;:::o;34107:397::-;34247:3;34262:75;34333:3;34324:6;34262:75;:::i;:::-;34362:2;34357:3;34353:12;34346:19;;34375:75;34446:3;34437:6;34375:75;:::i;:::-;34475:2;34470:3;34466:12;34459:19;;34495:3;34488:10;;34107:397;;;;;:::o;34534:874::-;34637:3;34674:5;34668:12;34703:36;34729:9;34703:36;:::i;:::-;34755:89;34837:6;34832:3;34755:89;:::i;:::-;34748:96;;34875:1;34864:9;34860:17;34891:1;34886:166;;;;35066:1;35061:341;;;;34853:549;;34886:166;34970:4;34966:9;34955;34951:25;34946:3;34939:38;35032:6;35025:14;35018:22;35010:6;35006:35;35001:3;34997:45;34990:52;;34886:166;;35061:341;35128:38;35160:5;35128:38;:::i;:::-;35188:1;35202:154;35216:6;35213:1;35210:13;35202:154;;;35290:7;35284:14;35280:1;35275:3;35271:11;35264:35;35340:1;35331:7;35327:15;35316:26;;35238:4;35235:1;35231:12;35226:17;;35202:154;;;35385:6;35380:3;35376:16;35369:23;;35068:334;;34853:549;;34641:767;;34534:874;;;;:::o;35414:201::-;35583:25;35578:3;35571:38;35414:201;:::o;35621:536::-;35841:3;35863:92;35951:3;35942:6;35863:92;:::i;:::-;35856:99;;35965:138;36099:3;35965:138;:::i;:::-;36128:2;36123:3;36119:12;36112:19;;36148:3;36141:10;;35621:536;;;;:::o;36163:202::-;36332:26;36327:3;36320:39;36163:202;:::o;36371:536::-;36591:3;36613:92;36701:3;36692:6;36613:92;:::i;:::-;36606:99;;36715:138;36849:3;36715:138;:::i;:::-;36878:2;36873:3;36869:12;36862:19;;36898:3;36891:10;;36371:536;;;;:::o;36913:202::-;37082:26;37077:3;37070:39;36913:202;:::o;37121:536::-;37341:3;37363:92;37451:3;37442:6;37363:92;:::i;:::-;37356:99;;37465:138;37599:3;37465:138;:::i;:::-;37628:2;37623:3;37619:12;37612:19;;37648:3;37641:10;;37121:536;;;;:::o"},"methodIdentifiers":{"CashOut()":"a1e564b1","DoubleDown()":"e8a80e9a","GetGame()":"9ad01e3e","Hit()":"39ae2133","Insurance()":"622e5026","PlaceBet(uint256)":"5a6d41a0","ShowTable()":"7ce2974d","Split()":"55d842d7","Stand()":"58c5a7cc","StartNewGame()":"24603eea"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"Player\",\"type\":\"address\"}],\"name\":\"AfterValueTransferEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"GameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"Player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"}],\"name\":\"BeforeValueTransferEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"GameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"Player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"}],\"name\":\"CashOutEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"GameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"Player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"}],\"name\":\"StartNewGameEvent\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"CashOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DoubleDown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetGame\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"Id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"Player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"SafeBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"OriginalBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"SplitCounter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"GamesPlayed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"PlayerBet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"InsuranceBet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"PlayerCard1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"PlayerCard2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"PlayerNewCard\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"PlayerCardTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"PlayerSplitTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"DealerCard1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"DealerCard2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"DealerNewCard\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"DealerCardTotal\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"CanDoubleDown\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"CanInsure\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"CanSplit\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"IsSplitting\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"IsSoftHand\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"IsRoundInProgress\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"DealerMsg\",\"type\":\"string\"}],\"internalType\":\"struct BlackJack.Game\",\"name\":\"game\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Hit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Insurance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bet\",\"type\":\"uint256\"}],\"name\":\"PlaceBet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ShowTable\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"DealerMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"PlayerCard1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"PlayerCard2\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"PlayerNewCard\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"PlayerCardTotal\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"PlayerSplitTotal\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"DealerCard1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"DealerCard2\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"DealerNewCard\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"DealerCardTotal\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"PlayerBet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"Pot\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Split\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Stand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StartNewGame\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Smart contract game of Blackjack that can be deployed on the blockchain.\",\"events\":{\"StartNewGameEvent(uint256,address,uint256)\":{\"details\":\"Event Logging\"}},\"kind\":\"dev\",\"methods\":{\"CashOut()\":{\"details\":\"CashOut - Can only be called by player before or after a game round.\"},\"DoubleDown()\":{\"details\":\"DoubleDown - Can only be called by player in an ongoing game.\"},\"GetGame()\":{\"details\":\"GetGame - helper function to get game info for msg.sender.\"},\"Hit()\":{\"details\":\"Hit - Can only be called by player in an ongoing game.\"},\"Insurance()\":{\"details\":\"Insurance - Can only be called by player in an ongoing game.\"},\"PlaceBet(uint256)\":{\"details\":\"PlaceBet - Begins a new game round.\",\"params\":{\"bet\":\"Amount to bet to start a new round 100 GWei < bet < 1 Ether.\"}},\"ShowTable()\":{\"details\":\"ShowTable - helper function to display game info for msg.sender.\"},\"Split()\":{\"details\":\"Split - Can only be called by player in an ongoing game.\"},\"Stand()\":{\"details\":\"Stand - Can only be called by player in an ongoing game.\"},\"StartNewGame()\":{\"details\":\"StartNewGame - Starts a new game with msg.sender's address registered as player.\"},\"constructor\":{\"details\":\"Constructor\"}},\"title\":\"BlackJack\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/blackjack.sol\":\"BlackJack\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/blackjack.sol\":{\"keccak256\":\"0x822674a5cd5be637a41f6dc607b150d4231a19d54b8c56f30ccf2ba37b032f2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0e7d9fda8e09602a735b4a003831ad049d8abf6c6e89b61209ffce57d23d082\",\"dweb:/ipfs/QmXUcNefbkNcpxQELQXJsVxE6oF43KygRUhfneoPpBWkEU\"]}},\"version\":1}"}}}}}